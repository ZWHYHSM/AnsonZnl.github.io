<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>张宁乐的博客</title>
  
  <subtitle>种一棵树最好的时间在十年前，其次是现在。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.zhangningle.top/"/>
  <updated>2018-06-10T08:43:21.118Z</updated>
  <id>http://www.zhangningle.top/</id>
  
  <author>
    <name>张宁乐</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>双向数据绑定的原理</title>
    <link href="http://www.zhangningle.top/2018/06/09/%E5%8F%8C%E5%90%91%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A%E7%9A%84%E5%8E%9F%E7%90%86/"/>
    <id>http://www.zhangningle.top/2018/06/09/双向数据绑定的原理/</id>
    <published>2018-06-09T08:10:33.000Z</published>
    <updated>2018-06-10T08:43:21.118Z</updated>
    
    <content type="html"><![CDATA[<h3 id="双向数据绑定的原理"><a href="#双向数据绑定的原理" class="headerlink" title="双向数据绑定的原理"></a>双向数据绑定的原理</h3><p>在学习vue和angular过程中都有一个双向数据绑定的一个东西，vue中是v-model ,angular中是ng-model,那他们是怎么实现的，<br>先说是怎么实现的吧，自己也网上找了一下实现的方法，找到了一个比较简洁的实现方法(可能不是vue或者angular源码的实现方法)，仅自己理解的实现方法。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;box&quot;&gt;</span><br><span class="line">     &lt;input type=&quot;text&quot; id=&quot;model&quot;&gt;</span><br><span class="line">     &lt;span id=&quot;bind&quot;&gt;&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>js代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        model=document.getElementById(&quot;model&quot;);</span><br><span class="line">        bind=document.getElementById(&quot;bind&quot;);</span><br><span class="line">        </span><br><span class="line">        window.onload=function()&#123;</span><br><span class="line">            model.oninput=function()&#123;</span><br><span class="line">                bind.innerHTML=model.value;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><blockquote><p>定义和用法<br>oninput 事件在用户输入时触发。<br>该事件在 <code>&lt;input&gt;</code>或 <code>&lt;textarea&gt;</code>元素的值发生改变时触发。<br>提示： 该事件类似于 onchange 事件。不同之处在于 oninput 事件在元素值发生变化是立即触发， onchange 在元素失去焦点时触发。另外一点不同是 onchange 事件也可以作用于 <code>&lt;keygen&gt;</code> 和 <code>&lt;select&gt;</code> 元素。</p></blockquote><p><strong>逻辑就是使用oninput事件获取每次输入input的value的值，然后使用innerHTML赋给span</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;双向数据绑定的原理&quot;&gt;&lt;a href=&quot;#双向数据绑定的原理&quot; class=&quot;headerlink&quot; title=&quot;双向数据绑定的原理&quot;&gt;&lt;/a&gt;双向数据绑定的原理&lt;/h3&gt;&lt;p&gt;在学习vue和angular过程中都有一个双向数据绑定的一个东西，vue中是v-mo
      
    
    </summary>
    
    
      <category term="vue" scheme="http://www.zhangningle.top/tags/vue/"/>
    
      <category term="javascript" scheme="http://www.zhangningle.top/tags/javascript/"/>
    
      <category term="angular" scheme="http://www.zhangningle.top/tags/angular/"/>
    
  </entry>
  
  <entry>
    <title>www.zhangningle.com博客的服务器通过备案</title>
    <link href="http://www.zhangningle.top/2018/06/02/zhangningle.com%E5%8D%9A%E5%AE%A2%E9%80%9A%E8%BF%87%E5%A4%87%E6%A1%88/"/>
    <id>http://www.zhangningle.top/2018/06/02/zhangningle.com博客通过备案/</id>
    <published>2018-06-02T02:20:14.000Z</published>
    <updated>2018-06-10T08:41:49.395Z</updated>
    
    <content type="html"><![CDATA[<h3 id="zhangningle-com博客通过备案"><a href="#zhangningle-com博客通过备案" class="headerlink" title="zhangningle.com博客通过备案"></a>zhangningle.com博客通过备案</h3><p>在昨天接到短信通知 我的阿里云服务器终于备案通过了，<br>所以第一个WordPress博客也可以正式使用我得域名：<a href="http://www.zhangningle.com/" target="_blank" rel="noopener">www.zhangningle.com</a>可以正式访问了！！<br>后续博客可能会陆续迁移到这个上面去，正在寻找WordPress主题中….</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;zhangningle-com博客通过备案&quot;&gt;&lt;a href=&quot;#zhangningle-com博客通过备案&quot; class=&quot;headerlink&quot; title=&quot;zhangningle.com博客通过备案&quot;&gt;&lt;/a&gt;zhangningle.com博客通过备案&lt;/
      
    
    </summary>
    
    
      <category term="php" scheme="http://www.zhangningle.top/tags/php/"/>
    
      <category term="Wordpress" scheme="http://www.zhangningle.top/tags/Wordpress/"/>
    
      <category term="博客" scheme="http://www.zhangningle.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="mqsql" scheme="http://www.zhangningle.top/tags/mqsql/"/>
    
  </entry>
  
  <entry>
    <title>在小程序中调用一言API</title>
    <link href="http://www.zhangningle.top/2018/05/21/%E5%9C%A8%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E8%B0%83%E7%94%A8%E4%B8%80%E8%A8%80API/"/>
    <id>http://www.zhangningle.top/2018/05/21/在小程序中调用一言API/</id>
    <published>2018-05-21T09:20:14.000Z</published>
    <updated>2018-06-10T08:44:11.271Z</updated>
    
    <content type="html"><![CDATA[<h3 id="在小程序中调用一言API"><a href="#在小程序中调用一言API" class="headerlink" title="在小程序中调用一言API"></a>在小程序中调用一言API</h3><p>某一次在csdn看博客，看到了一个功能，就是可以随机显示一句话，都是特别经典的句子，后来便发挥了厚面皮的精神，就去私信问是怎么做的，二话没说那兄弟发给我一个网站，</p><p><a href="https://hitokoto.cn/" target="_blank" rel="noopener">一言</a></p><blockquote><p>这个网站是干什么的？<br>一言网(Hitokoto.cn)创立于2016年，隶属于萌创Team，目前网站主要提供一句话服务。<br>动漫也好、小说也好、网络也好，不论在哪里，我们总会看到有那么一两个句子能穿透你的心。我们把这些句子汇聚起来，形成一言网络，以传递更多的感动。如果可以，我们希望我们没有停止服务的那一天。<br>简单来说，一言指的就是一句话，可以是动漫中的台词，也可以是网络上的各种小段子。<br>或是感动，或是开心，有或是单纯的回忆。来到这里，留下你所喜欢的那一句句话，与大家分享，这就是一言存在的目的。<em></em>:本段文本源自hitokoto.us.</p></blockquote><p>在<strong><a href="https://hitokoto.cn/" target="_blank" rel="noopener">一言网</a></strong>上提供了可调用的API</p><p><a href="https://hitokoto.cn/api" target="_blank" rel="noopener">一言API接口说明</a><br>按照他给的参数和返回json数据，成功的在网页中调用了出来<br><a href="http://zhangningle.gitee.io/javascript-demo/%E4%B8%80%E8%A8%80.html" target="_blank" rel="noopener">我的一言deom</a><br>代码展示:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;zh-CN&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">  &lt;title&gt;一言&lt;/title&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    div &#123;</span><br><span class="line">      width: 500px;</span><br><span class="line">      margin: auto;</span><br><span class="line">      text-align: center;</span><br><span class="line">    &#125;</span><br><span class="line">    #hitokoto&#123;</span><br><span class="line">      font-size: 27px;</span><br><span class="line">    &#125;</span><br><span class="line">    p &#123;</span><br><span class="line">      font-size: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #btn &#123;</span><br><span class="line">      padding: 15px 50px;</span><br><span class="line">      border: 0;</span><br><span class="line">      background: #00caeb;</span><br><span class="line">      color: #fff;</span><br><span class="line">      font-size: 22px;</span><br><span class="line">      border-radius: 5px;</span><br><span class="line">      cursor: pointer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .cc&#123;</span><br><span class="line">      display: block;</span><br><span class="line">      text-align: right;</span><br><span class="line">      padding-right: 20px;</span><br><span class="line">      font-size: 25px;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;p id=&quot;hitokoto&quot;&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p class=&quot;cc&quot;&gt;『</span><br><span class="line">      &lt;span id=&quot;from&quot;&gt;&lt;/span&gt;』&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;button id=&quot;btn&quot; onclick=&quot;window.location.reload();&quot;&gt;</span><br><span class="line">      换一换</span><br><span class="line">    &lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;!-- 以下写法，选取一种即可 --&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- 现代写法，推荐 --&gt;</span><br><span class="line">  &lt;!-- 兼容低版本浏览器 (包括 IE)，可移除 --&gt;</span><br><span class="line">  &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bluebird@3/js/browser/bluebird.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;https://cdn.jsdelivr.net/npm/whatwg-fetch@2.0.3/fetch.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;!--End--&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    fetch(&apos;https://v1.hitokoto.cn&apos;)</span><br><span class="line">      .then(function (res) &#123;</span><br><span class="line">        return res.json();</span><br><span class="line">      &#125;)</span><br><span class="line">      .then(function (data) &#123;</span><br><span class="line">        var hitokoto = document.getElementById(&apos;hitokoto&apos;);</span><br><span class="line">        hitokoto.innerText = data.hitokoto;</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(function (err) &#123;</span><br><span class="line">        console.error(err);</span><br><span class="line">      &#125;)</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- 老式写法，兼容性最忧 --&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    </span><br><span class="line">    var xhr = new XMLHttpRequest();</span><br><span class="line">    xhr.open(&apos;get&apos;, &apos;https://v1.hitokoto.cn&apos;);</span><br><span class="line">    xhr.onreadystatechange = function () &#123;</span><br><span class="line">      if (xhr.readyState === 4) &#123;</span><br><span class="line">        var data = JSON.parse(xhr.responseText);</span><br><span class="line">        var hitokoto = document.getElementById(&apos;hitokoto&apos;);</span><br><span class="line">        var from = document.getElementById(&apos;from&apos;);</span><br><span class="line">        hitokoto.innerText = data.hitokoto;</span><br><span class="line">        from.innerText = data.from;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    xhr.send();</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- 新 API 方法， 十分简洁 --&gt;</span><br><span class="line">  &lt;script src=&quot;https://v1.hitokoto.cn/?encode=js&amp;select=%23hitokoto&quot; defer&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>正好最近也在开发小程序，就心里痒痒。<br>想试试小程序中可不可以调用这个api，<br>小程序中</p><blockquote><p>url：这个是要请求的接口地址<br>data：一个入参<br>method：请求方式，如果是POST请求必须按上面写，默认是get请求，不用处理。<br>complete：页面请求完成后的方法，通过that.setData将数据传递给WXML页面。<br>success：页面加载成功后的执行方法。</p></blockquote><p>如图：<br><img src="http://p0bnwspy9.bkt.clouddn.com/yiyxcv.gif"><br>js代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">   * 生命周期函数--监听页面加载</span><br><span class="line">   */</span><br><span class="line">  onLoad: function () &#123;</span><br><span class="line">    var that=this</span><br><span class="line">    wx.request(&#123;</span><br><span class="line">      url: &apos;https://v1.hitokoto.cn&apos;,</span><br><span class="line">      header:&#123;</span><br><span class="line">        &apos;content-type&apos;: &apos;application/json&apos;</span><br><span class="line">      &#125;,</span><br><span class="line">      success: function (res)&#123;</span><br><span class="line">        console.log(res.data)</span><br><span class="line">        that.setData(&#123;</span><br><span class="line">          list: res.data</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure></p><p>看完这个代码，你会想，根据微信小程序的绑定原理，这里边的代码哪里调用了onLoad（）这个函数，不用多想，微信小程序给你省略了这些步骤。直接调用list这个数组就行。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;在小程序中调用一言API&quot;&gt;&lt;a href=&quot;#在小程序中调用一言API&quot; class=&quot;headerlink&quot; title=&quot;在小程序中调用一言API&quot;&gt;&lt;/a&gt;在小程序中调用一言API&lt;/h3&gt;&lt;p&gt;某一次在csdn看博客，看到了一个功能，就是可以随机显示一句
      
    
    </summary>
    
    
      <category term="jquery" scheme="http://www.zhangningle.top/tags/jquery/"/>
    
      <category term="后端" scheme="http://www.zhangningle.top/tags/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="json" scheme="http://www.zhangningle.top/tags/json/"/>
    
      <category term="API" scheme="http://www.zhangningle.top/tags/API/"/>
    
      <category term="小程序" scheme="http://www.zhangningle.top/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>jquery-ajax调用showAPI(历史上的今天)的接口</title>
    <link href="http://www.zhangningle.top/2018/05/14/jquery-json%E8%B0%83%E7%94%A8%E6%8E%A5%E5%8F%A3/"/>
    <id>http://www.zhangningle.top/2018/05/14/jquery-json调用接口/</id>
    <published>2018-05-14T09:20:14.000Z</published>
    <updated>2018-06-10T08:39:34.826Z</updated>
    
    <content type="html"><![CDATA[<h3 id="jquery-json调用接口"><a href="#jquery-json调用接口" class="headerlink" title="jquery-json调用接口"></a>jquery-json调用接口</h3><p>回顾一次面试经历，有一次面试人家问我会不会使用后端的接口（API）<br>因为当时学的都是写的静态页面 所以自然不知了，虽然那次面试很糟糕，但是收获也是很多的。<br>面试官后来告诉我一个网站就是这个网站：<a href="https://www.showapi.com/" target="_blank" rel="noopener">showAPI</a>;<br>上面有很多的免费的API接口可以试着调用 ，很感谢那位面试我的大佬。<br>今天有时间就顺便试了一下，调用了一个API “历史上的今天”<br>使用的jQuery解析的发送的ajax请求，然后他的服务器会返回一个json数据，使用  <code>$.each</code>在循环解析到页面中，虽然很小的一个小练习，但是对前后端数据交互有个更深的理解，<br>可能对于大家来说还是挺lou的 ，但对我自己来说确实很大的进步了。不喜勿喷。</p><p>先放预览地址吧：<a href="http://zhangningle.gitee.io/javascript-demo/%E5%8E%86%E5%8F%B2%E4%B8%8A%E7%9A%84%E4%BB%8A%E5%A4%A9.html" target="_blank" rel="noopener">历史上的今天</a></p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">function Jdeta() &#123;</span><br><span class="line">           //alert(typeof dataNum)</span><br><span class="line">           $.ajax(&#123;</span><br><span class="line">               type: &apos;post&apos;,</span><br><span class="line">               url: &apos;http://route.showapi.com/119-42&apos;,</span><br><span class="line">               dataType: &apos;json&apos;,</span><br><span class="line">               data: &#123;</span><br><span class="line">                   &quot;showapi_timestamp&quot;: formatterDateTime(),</span><br><span class="line">                   &quot;showapi_appid&quot;: &apos;61967&apos;, //这里需要改成自己的appid</span><br><span class="line">                   &quot;showapi_sign&quot;: &apos;efc7d95dafb14c9dabf3867072d12b28&apos;,  //这里需要改成自己的应用的密钥secret</span><br><span class="line">                   &quot;date&quot;: &quot;&quot;</span><br><span class="line">               &#125;,</span><br><span class="line">               error: function (XmlHttpRequest, textStatus, errorThrown) &#123;</span><br><span class="line">                   alert(&quot;操作失败!&quot;);</span><br><span class="line">               &#125;,</span><br><span class="line">               success: function (result) &#123;</span><br><span class="line">                   console.log(result) //console变量在ie低版本下不能用</span><br><span class="line">                   //alert(result.showapi_res_code + &quot;调用成功&quot;)</span><br><span class="line">                   var title = document.getElementById(&quot;title&quot;);</span><br><span class="line">                   title.innerHTML = result.showapi_res_body.list[0].title;</span><br><span class="line">                   var img = document.getElementById(&quot;img&quot;);</span><br><span class="line">                   img.src = result.showapi_res_body.list[0].img;</span><br><span class="line">                   var day = document.getElementById(&quot;day&quot;);</span><br><span class="line">                   day.innerHTML = result.showapi_res_body.list[0].day;</span><br><span class="line">                   var month = document.getElementById(&quot;month&quot;);</span><br><span class="line">                   month.innerHTML = result.showapi_res_body.list[0].month;</span><br><span class="line">                   var year = document.getElementById(&quot;year&quot;);</span><br><span class="line">                   year.innerHTML = result.showapi_res_body.list[0].year;</span><br><span class="line">                   var json = eval(result.showapi_res_body.list); //数组     </span><br><span class="line">                   var result = &quot;&quot;;</span><br><span class="line">                   $.each(json, function (index) &#123;</span><br><span class="line">                       //循环获取数据    </span><br><span class="line">                       var title = json[index].title;</span><br><span class="line">                       var year = json[index].year;</span><br><span class="line">                       var month = json[index].month;</span><br><span class="line">                       var day = json[index].day;</span><br><span class="line">                       var img = json[index].img</span><br><span class="line">                       result += &quot;标题：&quot;+title +&quot;&lt;br/&gt;时间：&quot;+ year + &quot;年-&quot; + month + &quot;月-&quot; + day + &quot;日&lt;br/&gt;&lt;img src=&quot;+img+&quot; alt/&gt;&quot;+&quot;&lt;br&gt;&lt;br&gt;&quot;;</span><br><span class="line">                   &#125;);</span><br><span class="line">                   $(&quot;#list&quot;).html(&apos;&apos;);</span><br><span class="line">                   $(&quot;#list&quot;).html(result);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line"></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;jquery-json调用接口&quot;&gt;&lt;a href=&quot;#jquery-json调用接口&quot; class=&quot;headerlink&quot; title=&quot;jquery-json调用接口&quot;&gt;&lt;/a&gt;jquery-json调用接口&lt;/h3&gt;&lt;p&gt;回顾一次面试经历，有一次面试人家问我
      
    
    </summary>
    
    
      <category term="jquery" scheme="http://www.zhangningle.top/tags/jquery/"/>
    
      <category term="后端" scheme="http://www.zhangningle.top/tags/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="json" scheme="http://www.zhangningle.top/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>vue笔记一</title>
    <link href="http://www.zhangningle.top/2018/04/24/vue001/"/>
    <id>http://www.zhangningle.top/2018/04/24/vue001/</id>
    <published>2018-04-24T11:20:14.000Z</published>
    <updated>2018-06-10T08:41:35.451Z</updated>
    
    <content type="html"><![CDATA[<p>一、vue的基本概念<br>          1.同jquery，都是js框架<br>          2.jquery更适合做页面(网页效果)，vue更适合做web应用(博客，论坛)<br>          3.jquery同原生js一样，都需要操作繁琐的Dom元素，而vue简化了Dom操作<br>          vue的一个缺点：不支持IE8 safari 还有一些手机<br>  案例:使用原生js和vue操作元素的一个区别<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1.原生js </span><br><span class="line">      &lt;h1 id=&apos;h1&apos;&gt;&lt;/h1&gt; </span><br><span class="line">     &lt;script&gt;</span><br><span class="line">     document.querySelector(&apos;#h1&apos;).innerHTML=&apos;你好世界&apos;;</span><br><span class="line">     &lt;/script&gt;</span><br><span class="line">           &lt;div id=&apos;itany&apos;&gt;&#123;&#123;message&#125;&#125;&lt;/div&gt; </span><br><span class="line">            &lt;script src=&apos;vue.js&apos;&gt;&lt;/script&gt;</span><br><span class="line">            &lt;script&gt;</span><br><span class="line">            new Vue(&#123;</span><br><span class="line">                    el:&apos;#itany&apos;,</span><br><span class="line">                     data:&#123;</span><br><span class="line">                      message:&apos;你好世界&apos;</span><br><span class="line">                      &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- </span><br><span class="line">               注：使用&#123;&#123;&#125;&#125;就相当于解析变量</span><br><span class="line">             --&gt;</span><br><span class="line">            &lt;hr&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一、vue的基本概念&lt;br&gt;          1.同jquery，都是js框架&lt;br&gt;          2.jquery更适合做页面(网页效果)，vue更适合做web应用(博客，论坛)&lt;br&gt;          3.jquery同原生js一样，都需要操作繁琐的Dom元素
      
    
    </summary>
    
    
      <category term="vue" scheme="http://www.zhangningle.top/tags/vue/"/>
    
      <category term="javascript" scheme="http://www.zhangningle.top/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>小程序学习记录二</title>
    <link href="http://www.zhangningle.top/2018/04/06/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%E4%BA%8C/"/>
    <id>http://www.zhangningle.top/2018/04/06/小程序学习记录二/</id>
    <published>2018-04-06T12:20:14.000Z</published>
    <updated>2018-06-10T08:43:40.665Z</updated>
    
    <content type="html"><![CDATA[<p>在写小程序的过程中会发现里面的有些使用和vue很相似，有相关基础上手并不是很难，难点主要在于js的逻辑交互，</p><h2 id="小程序的启动"><a href="#小程序的启动" class="headerlink" title="小程序的启动"></a>小程序的启动</h2><p>微信客户端在打开小程序之前，会把整个小程序的代码包下载到本地。</p><p>紧接着通过 app.json 的 pages 字段就可以知道你当前小程序的所有页面路径:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;  &quot;pages&quot;:[    &quot;pages/index/index&quot;,    &quot;pages/logs/logs&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这个配置说明在 QuickStart 项目定义了两个页面，分别位于 pages/index/index 和 pages/logs/logs 目录。而写在 pages 字段的第一个页面就是这个小程序的首页(打开小程序看到的第一个页面)。</p><p>于是微信客户端就把首页的代码装载进来，通过小程序底层的一些机制，就可以渲染出这个首页。</p><p>小程序启动之后，在 app.js 定义的 App 实例的 onLaunch 回调会被执行:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">App(&#123;</span><br><span class="line">  onLaunch: function () &#123;    // 小程序启动之后 触发</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>整个小程序只有一个 App 实例，是全部页面共享的，更多的事件回调参考文档 注册程序 App 。</p><p>接下来我们简单看看小程序的一个页面是怎么写的。</p><p>程序与页面</p><p>你可以观察到 pages/logs/logs 下其实是包括了4种文件的，微信客户端会先根据 logs.json 配置生成一个界面，顶部的颜色和文字你都可以在这个 json 文件里边定义好。紧接着客户端就会装载这个页面的 WXML 结构和 WXSS 样式。最后客户端会装载 logs.js，你可以看到 logs.js 的大体内容就是:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  data: &#123; // 参与页面渲染的数据</span><br><span class="line">    logs: []</span><br><span class="line">  &#125;,</span><br><span class="line">  onLoad: function () &#123;    // 页面渲染后 执行</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>Page 是一个页面构造器，这个构造器就生成了一个页面。在生成页面的时候，小程序框架会把 data 数据和 index.wxml 一起渲染出最终的结构，于是就得到了你看到的小程序的样子。</p><p>在渲染完界面之后，页面实例就会收到一个 onLoad 的回调，你可以在这个回调处理你的逻辑。</p><p>有关于 Page 构造器更多详细的文档参考 注册页面 Page 。</p><p>组件</p><p>小程序提供了丰富的基础组件给开发者，开发者可以像搭积木一样，组合各种组件拼合成自己的小程序。</p><p>就像 HTML 的 div, p 等标签一样，在小程序里边，你只需要在 WXML 写上对应的组件标签名字就可以把该组件显示在界面上，例如，你需要在界面上显示地图，你只需要这样写即可：</p><p><map>map&gt;<br>使用组件的时候，还可以通过属性传递值给组件，让组件可以以不同的状态去展现，例如，我们希望地图一开始的中心的经纬度是广州，那么你需要声明地图的 longitude(中心经度) 和 latitude(中心纬度) 两个属性:</map></p><p><map longitude="广州经度" latitude="广州纬度">map&gt;<br>组件的内部行为也会通过事件的形式让开发者可以感知，例如用户点击了地图上的某个标记，你可以在 js 编写 markertap 函数来处理：</map></p><p><map bindmarkertap="markertap" longitude="广州经度" latitude="广州纬度">map&gt;<br>当然你也可以通过 style 或者 class 来控制组件的外层样式，以便适应你的界面宽度高度等等。</map></p><p>需要注意的是：多数 API 的回调都是异步，你需要处理好代码逻辑的异步问题。</p><p>更多的 API 能力见 <a href="https://developers.weixin.qq.com/miniprogram/dev/api/?t=20171227" target="_blank" rel="noopener">小程序的API</a> 。<br>其实小程序的官网教程讲的也很明白透彻，看官方教程就可以了，而且小程序有丰富的组件，使用时很方便的，<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://mp.weixin.qq.com/debug/wxadoc/dev/image/demo.png?t=201842" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>更多的组件可以参考 小程序的组件 。</p><h2 id="基础组件"><a href="#基础组件" class="headerlink" title="基础组件"></a>基础组件</h2><p>为了让开发者可以很方便的调起微信提供的能力，例如获取用户信息、微信支付等等，小程序提供了很多 API 给开发者去使用。</p><p>要获取用户的地理位置时，只需要：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wx.getLocation(&#123;</span><br><span class="line">  type: &apos;wgs84&apos;,</span><br><span class="line">  success: (res) =&gt; &#123;    var latitude = res.latitude // 经度</span><br><span class="line">    var longitude = res.longitude // 纬度</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>调用微信扫一扫能力，只需要：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wx.scanCode(&#123;</span><br><span class="line">  success: (res) =&gt; &#123;    console.log(res)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>框架为开发者提供了一系列基础组件，开发者可以通过组合这些基础组件进行快速开发。</p><p>什么是组件：</p><p>组件是视图层的基本组成单元。<br>组件自带一些功能与微信风格的样式。<br>一个组件通常包括开始标签和结束标签，属性用来修饰这个组件，内容在两个标签之内。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;tagname property=&quot;value&quot;&gt;</span><br><span class="line">  Content goes here ...</span><br><span class="line">&lt;/tagname&gt;</span><br></pre></td></tr></table></figure></p><p>注意：所有组件与属性都是小写，以连字符-连接</p><p>属性类型</p><p>类型    描述    注解<br>Boolean    布尔值    组件写上该属性，不管该属性等于什么，其值都为true，只有组件上没有写该属性时，属性值才为false。如果属性值为变量，变量的值会被转换为Boolean类型<br>Number    数字    1, 2.5<br>String    字符串    “string”<br>Array    数组    [ 1, “string” ]<br>Object    对象    { key: value }<br>EventHandler    事件处理函数名    “handlerName” 是 Page中定义的事件处理函数名<br>Any    任意属性<br>共同属性类型</p><p>所有组件都有的属性：</p><p>属性名    类型    描述    注解<br>id    String    组件的唯一标示    保持整个页面唯一<br>class    String    组件的样式类    在对应的 WXSS 中定义的样式类<br>style    String    组件的内联样式    可以动态设置的内联样式<br>hidden    Boolean    组件是否显示    所有组件默认显示<br>data-<em>    Any    自定义属性    组件上触发的事件时，会发送给事件处理函数<br>bind</em> / catch*    EventHandler    组件的事件    详见事件<br>特殊属性</p><p>几乎所有组件都有各自定义的属性，可以对该组件的功能或样式进行修饰，请参考各个组件的定义。</p><p>视图容器(View Container)：<br>view    视图容器<br>scroll-view    可滚动视图容器</p><h2 id="swiper-滑块视图容"><a href="#swiper-滑块视图容" class="headerlink" title="swiper    滑块视图容"></a>swiper    滑块视图容</h2><p>基础内容(Basic Content)：<br>icon    图标<br>text    文字</p><h2 id="progress-进度条"><a href="#progress-进度条" class="headerlink" title="progress    进度条"></a>progress    进度条</h2><p>表单(Form)：<br>button    按钮<br>form    表单<br>input    输入框<br>checkbox    多项选择器<br>radio    单项选择器<br>picker    列表选择器<br>picker-view    内嵌列表选择器<br>slider    滚动选择器<br>switch    开关选择器</p><h2 id="label-标签"><a href="#label-标签" class="headerlink" title="label    标签"></a>label    标签</h2><p>导航(Navigation)：</p><h2 id="navigator-应用链接"><a href="#navigator-应用链接" class="headerlink" title="navigator    应用链接"></a>navigator    应用链接</h2><p>多媒体(Media)：<br>audio    音频<br>image    图片</p><h2 id="video-视频"><a href="#video-视频" class="headerlink" title="video    视频"></a>video    视频</h2><p>地图(Map)：</p><h2 id="map-地图"><a href="#map-地图" class="headerlink" title="map    地图"></a>map    地图</h2><p>画布(Canvas)：<br>canvas    画布</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在写小程序的过程中会发现里面的有些使用和vue很相似，有相关基础上手并不是很难，难点主要在于js的逻辑交互，&lt;/p&gt;
&lt;h2 id=&quot;小程序的启动&quot;&gt;&lt;a href=&quot;#小程序的启动&quot; class=&quot;headerlink&quot; title=&quot;小程序的启动&quot;&gt;&lt;/a&gt;小程序的启动
      
    
    </summary>
    
    
      <category term="小程序" scheme="http://www.zhangningle.top/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="微信" scheme="http://www.zhangningle.top/tags/%E5%BE%AE%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>fixe 布局</title>
    <link href="http://www.zhangningle.top/2018/04/01/fixe%E5%B8%83%E5%B1%80/"/>
    <id>http://www.zhangningle.top/2018/04/01/fixe布局/</id>
    <published>2018-04-01T09:20:14.000Z</published>
    <updated>2018-06-10T08:38:22.261Z</updated>
    
    <content type="html"><![CDATA[<p>寻根溯源话布局<br>一切都始于这样一个问题：怎样通过 CSS 简单而优雅的实现水平、垂直同时居中。记得刚开始学习 CSS 的时候，看到 float 属性不由得感觉眼前一亮，顺理成章的联想到 Word 文档排版中用到的的左对齐、右对齐和居中对齐，然而很快就失望的发现 CSS 中并不存在 float: center 的写法，那么 text-align: center、verticle-align: center 是否可行呢？答案也是否定的。这两个属性只能用于行内元素，对于块级元素的布局是无效的。<br>在网页布局没有进入 CSS 的时代，排版几乎是通过 table 元素实现的，在 table 的单元格里可以方便的使用 align、valign 来实现水平和垂直方向的对齐，随着 Web 语义化的流行，这些写法逐渐淡出了视野，CSS 标准为我们提供了 3 种布局方式：标准文档流、浮动布局和定位布局。这几种方式的搭配使用可以轻松搞定 PC 端页面的常见需求，比如实现水平居中可以使用 margin: 0 auto，实现水平垂直同时居中可以如下设置：<br>.dad {<br>    position: relative;<br>}<br>.son {<br>    position: absolute;<br>    margin: auto;<br>    top: 0;<br>    right: 0;<br>    bottom: 0;<br>    left: 0;<br>}<br>.dad {<br>    position: relative;<br>}<br>.son {<br>    width: 100px;<br>    height: 100px;<br>    position: absolute;<br>    top: 50%;<br>    left: 50%;<br>    margin-top: -50px;<br>    margin-left: -50px;<br>}<br>然而，这些写法都存在一些缺陷：缺少语义并且不够灵活。我们需要的是通过 1 个属性就能优雅的实现子元素居中或均匀分布，甚至可以随着窗口缩放自动适应。在这样的需求下，CSS 的第 4 种布局方式诞生了，这就是我们今天要重点介绍的 flex 布局。<br>flex 基本概念<br>使用 flex 布局首先要设置父容器 display: flex，然后再设置 justify-content: center 实现水平居中，最后设置 align-items: center 实现垂直居中。</p><p>#dad {<br>    display: flex;<br>    justify-content: center;<br>    align-items: center<br>}</p><p>就是这么简单，大功告成。等等，好像哪里不对，justify-content 和 align-items 是啥？哪里可以看出横向、竖向的语义？是的，flex 的确没有那么简单，这就要从两个基本概念说起了。</p><p>说来也不难，flex 的核心的概念就是 容器 和 轴。容器包括外层的 父容器 和内层的 子容器，轴包括 主轴 和 交叉轴，可以说 flex 布局的全部特性都构建在这两个概念上。flex 布局涉及到 12 个 CSS 属性（不含 display: flex），其中父容器、子容器各 6 个。不过常用的属性只有 4 个，父容器、子容器各 2 个，我们就先从常用的说起吧。<br>容器<br>容器具有这样的特点：父容器可以统一设置子容器的排列方式，子容器也可以单独设置自身的排列方式，如果两者同时设置，以子容器的设置为准。</p><p>父容器<br>设置子容器沿主轴排列：justify-content<br>justify-content 属性用于定义如何沿着主轴方向排列子容器。</p><p>flex-start：起始端对齐</p><p>flex-end：末尾段对齐</p><p>center：居中对齐</p><p>space-around：子容器沿主轴均匀分布，位于首尾两端的子容器到父容器的距离是子容器间距的一半。</p><p>space-between：子容器沿主轴均匀分布，位于首尾两端的子容器与父容器相切。</p><p>设置子容器如何沿交叉轴排列：align-items<br>align-items 属性用于定义如何沿着交叉轴方向分配子容器的间距。</p><p>flex-start：起始端对齐</p><p>flex-end：末尾段对齐</p><p>center：居中对齐</p><p>baseline：基线对齐，这里的 baseline 默认是指首行文字，即 first baseline，所有子容器向基线对齐，交叉轴起点到元素基线距离最大的子容器将会与交叉轴起始端相切以确定基线。</p><p>stretch：子容器沿交叉轴方向的尺寸拉伸至与父容器一致。</p><p>子容器<br>在主轴上如何伸缩：flex</p><p>子容器是有弹性的（flex 即弹性），它们会自动填充剩余空间，子容器的伸缩比例由 flex 属性确定。<br>flex 的值可以是无单位数字（如：1, 2, 3），也可以是有单位数字（如：15px，30px，60px），还可以是 none 关键字。子容器会按照 flex 定义的尺寸比例自动伸缩，如果取值为 none 则不伸缩。<br>虽然 flex 是多个属性的缩写，允许 1 – 3 个值连用，但通常用 1 个值就可以满足需求，它的全部写法可参考下图。</p><p>单独设置子容器如何沿交叉轴排列：align-self</p><p>每个子容器也可以单独定义沿交叉轴排列的方式，此属性的可选值与父容器 align-items 属性完全一致，如果两者同时设置则以子容器的 align-self 属性为准。<br>flex-start：起始端对齐</p><p>flex-end：末尾段对齐</p><p>center：居中对齐</p><p>baseline：基线对齐</p><p>stretch：拉伸对齐</p><p>轴<br>如图所示，轴 包括 主轴 和 交叉轴，我们知道 justify-content 属性决定子容器沿主轴的排列方式，align-items 属性决定子容器沿着交叉轴的排列方式。那么轴本身又是怎样确定的呢？在 flex 布局中，flex-direction 属性决定主轴的方向，交叉轴的方向由主轴确定。</p><p>主轴<br>主轴的起始端由 flex-start 表示，末尾段由 flex-end 表示。不同的主轴方向对应的起始端、末尾段的位置也不相同。<br>向右：flex-direction: row</p><p>向下：flex-direction: column</p><p>向左：flex-direction: row-reverse</p><p>向上：flex-direction: column-reverse</p><p>交叉轴<br>主轴沿逆时针方向旋转 90° 就得到了交叉轴，交叉轴的起始端和末尾段也由 flex-start 和 flex-end 表示。<br>上面介绍的几项属性是 flex 布局中最常用到的部分，一般来说可以满足大多数需求，如果实现复杂的布局还需要深入了解更多的属性。<br>flex 进阶概念<br>父容器设置换行方式：flex-wrap<br>决定子容器是否换行排列，不但可以顺序换行而且支持逆序换行。</p><p>nowrap：不换行</p><p>wrap：换行</p><p>wrap-reverse：逆序换行<br>逆序换行是指沿着交叉轴的反方向换行。</p><p>轴向与换行组合设置：flex-flow<br>flow 即流向，也就是子容器沿着哪个方向流动，流动到终点是否允许换行，比如 flex-flow: row wrap，flex-flow 是一个复合属性，相当于 flex-direction 与 flex-wrap 的组合，可选的取值如下：<br>1、row、column 等，可单独设置主轴方向<br>2、wrap、nowrap 等，可单独设置换行方式<br>3、row nowrap、column wrap 等，也可两者同时设置<br>多行沿交叉轴对齐：align-content<br>当子容器多行排列时，设置行与行之间的对齐方式。</p><p>flex-start：起始端对齐</p><p>flex-end：末尾段对齐</p><p>center：居中对齐</p><p>space-around：等边距均匀分布</p><p>space-between：等间距均匀分布</p><p>stretch：拉伸对齐</p><p>子容器设置基准大小：flex-basis<br>flex-basis 表示在不伸缩的情况下子容器的原始尺寸。主轴为横向时代表宽度，主轴为纵向时代表高度。</p><p>设置扩展比例：flex-grow<br>子容器弹性伸展的比例。如图，剩余空间按 1:2 的比例分配给子容器。</p><p>设置收缩比例：flex-shrink<br>子容器弹性收缩的比例。如图，超出的部分按 1:2 的比例从给子容器中减去。</p><p>设置排列顺序：order<br>改变子容器的排列顺序，覆盖 HTML 代码中的顺序，默认值为 0，可以为负值，数值越小排列越靠前。</p><p>以上就是 flex 布局的全部属性，一共 12 个，父容器、子容器各 6 个，可以随时通过下图进行回顾。</p><p>参考资料：<br>MDN: CSS Flexible Box LayoutFlex 布局教程：语法篇Flex 布局学习笔记30 分钟学会 Flex 布局弹性盒模型Flex指南原文地址：<a href="https://juejin.im/post/58e3a5a0a0bb9f0069fc16bb" target="_blank" rel="noopener">https://juejin.im/post/58e3a5a0a0bb9f0069fc16bb</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;寻根溯源话布局&lt;br&gt;一切都始于这样一个问题：怎样通过 CSS 简单而优雅的实现水平、垂直同时居中。记得刚开始学习 CSS 的时候，看到 float 属性不由得感觉眼前一亮，顺理成章的联想到 Word 文档排版中用到的的左对齐、右对齐和居中对齐，然而很快就失望的发现 CSS
      
    
    </summary>
    
    
      <category term="布局" scheme="http://www.zhangningle.top/tags/%E5%B8%83%E5%B1%80/"/>
    
      <category term="html" scheme="http://www.zhangningle.top/tags/html/"/>
    
      <category term="css" scheme="http://www.zhangningle.top/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>华强北商城</title>
    <link href="http://www.zhangningle.top/2018/04/01/%E5%8D%8E%E5%BC%BA%E5%8C%97%E5%95%86%E5%9F%8E/"/>
    <id>http://www.zhangningle.top/2018/04/01/华强北商城/</id>
    <published>2018-04-01T09:20:14.000Z</published>
    <updated>2018-06-10T08:42:22.431Z</updated>
    
    <content type="html"><![CDATA[<h2 id="华强北商城电子商务网站"><a href="#华强北商城电子商务网站" class="headerlink" title="华强北商城电子商务网站"></a>华强北商城电子商务网站</h2><p>github地址：<a href="https://github.com/AnsonZnl/HuaQiangBei" target="_blank" rel="noopener">https://github.com/AnsonZnl/HuaQiangBei</a><br>模板文件放在织梦cms的theme下，然后导入数据库即可。<br>主要功能有：</p><ol><li>搜索，</li><li>添加购物车</li><li>后天管理商品</li><li>js轮播图和css3特效。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;华强北商城电子商务网站&quot;&gt;&lt;a href=&quot;#华强北商城电子商务网站&quot; class=&quot;headerlink&quot; title=&quot;华强北商城电子商务网站&quot;&gt;&lt;/a&gt;华强北商城电子商务网站&lt;/h2&gt;&lt;p&gt;github地址：&lt;a href=&quot;https://github.c
      
    
    </summary>
    
    
      <category term="php" scheme="http://www.zhangningle.top/tags/php/"/>
    
      <category term="织梦cms" scheme="http://www.zhangningle.top/tags/%E7%BB%87%E6%A2%A6cms/"/>
    
      <category term="cms" scheme="http://www.zhangningle.top/tags/cms/"/>
    
      <category term="后台" scheme="http://www.zhangningle.top/tags/%E5%90%8E%E5%8F%B0/"/>
    
      <category term="电商" scheme="http://www.zhangningle.top/tags/%E7%94%B5%E5%95%86/"/>
    
  </entry>
  
  <entry>
    <title>bootrtsp常用的类</title>
    <link href="http://www.zhangningle.top/2018/03/21/bootrtsp4/"/>
    <id>http://www.zhangningle.top/2018/03/21/bootrtsp4/</id>
    <published>2018-03-21T09:20:14.000Z</published>
    <updated>2018-06-10T08:37:31.819Z</updated>
    
    <content type="html"><![CDATA[<p>Bootstrap 是基于 HTML、CSS、JavaScript 的，它简洁灵活，使得 Web 开发更加快捷<br>使用它可以快速开发一个适应手机、平板、电脑的网站，<br>比如我的<br>法标珠光卫浴  <a href="http://zhangningle.gitee.io/fabiaozhuguangweiyv/" target="_blank" rel="noopener">http://zhangningle.gitee.io/fabiaozhuguangweiyv/</a><br><br><br>手机显示：<br><img src="http://p0bnwspy9.bkt.clouddn.com/%7DK3U_6LDR5QMILUN%5BGIW9NJ.png" alt="法标珠光卫浴" style="width:75%;" class="about_img"><br>电脑显示：<br><img src="http://p0bnwspy9.bkt.clouddn.com/LX6N$A@_FRZYV4%5B0%25K5IV_5.jpg" alt="法标珠光卫浴" style="width:100%;" class="about_img"></p><p>bootstrap常用类记录：<br>记录一下bootrtsp常用的类，下次使用方便快速查阅！<br>1.起步<br>2.全局css样式<br>    1)按钮相关class<br>     .btn                按钮基础样式<br>     .btn-danger         红色按钮<br>     .btn-warming        黄色按钮<br>     .btn-success        绿色按钮<br>     .btn-info           浅蓝色按钮<br>     .btn-primary        深蓝色按钮<br>     .btn-lg             大号按钮<br>     .btn-sm             小号按钮<br>     .btn-xs             超小号按钮<br>     .btn-block          块级按钮<br>    注：用button写按钮时，必须要写type属性</p><pre><code>2)图片相关class  .img-circle        圆形图片  .img-rounded       圆角图片  .img-thumbnail     缩略图片  .img-responsive    响应式图片3)文本相关class  .text-danger/warming/success/info/primary   文本的5种颜色  .bg-danger/warming/success/info/primary     5种背景颜色  .text-uppercase    转大写  .text-lowercase    转小写  .text-capitalize   转首字母大写  .text-left         文本左对齐  .text-right        文本右对齐  .text-center       文本居中对齐  .text-justify      两端调整对齐4)辅助类   .caret            三角符号   .close            关闭按钮   .pull-left        左浮动   .pull-right       右浮动5)表格（小重点）    .table           基础表格    .table-borderd   带边框的表格    .table-striped   隔行变色的表格    .table-hover     带鼠标悬停效果的表格    .table-responsive  响应式表格，必须使用在table的父元素div上    注：.table-responsive的正确使用方法。如果想让某一行或某一列变背景，直接在tr或td上加class属性即可6)栅格布局系统(重点)    a.最外层必须是容器类.container或.container-fluid    b.容器中必须放置行:.row    c.行中必须放置列:.col    &lt;div class=&apos;container&apos;&gt;        &lt;div class=&apos;row&apos;&gt;            &lt;div class=&apos;col-md-3 col-sm-6 col-xs-12&apos;&gt;&lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;    针对不同的屏幕有不同的列    .col-lg-*          适用于超大pc屏幕    .col-md-*          适用于中等pc屏幕    .col-sm-*          适用于pad屏幕    .col-xs-*          适用于phone屏幕    .col-md-offset-1/2/3....     pc屏幕中向右偏移多少个    .col-sm-offset-1/2/3....     pad屏幕中向右偏移多少个    .col-xs-offset-1/2/3....     phone屏幕中向右偏移多少个    不同的列在不同屏幕下哟不同的适用性    .col-lg-*                     只适用于lg屏幕    .col-md-*                     适用于lg/md屏幕    .col-sm-*                     适用于lg/md/sm屏幕    .col-xs-*                     适用于lg/md/sm/xs屏幕    可以指定某列在特定尺寸的屏幕下隐藏    .hidden-lg                    在lg屏幕下隐藏    .hidden-md                    在md屏幕下隐藏    .hidden-sm                    在sm屏幕下隐藏    .hidden-xs                    在xs屏幕下隐藏    &lt;div class=&quot;container&quot;&gt;        &lt;div class=&quot;row&quot;&gt;            &lt;div class=&quot;col-xs-6&quot;&gt;                &lt;div class=&quot;row&quot;&gt;                    &lt;div class=&quot;col-xs-6&quot;&gt;&lt;/div&gt;                &lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;7)表单(难点)    a.默认表单        &lt;form&gt;            &lt;div class=&quot;form-group&quot;&gt;                &lt;label&gt;用户名&lt;/label&gt;                &lt;input class=&quot;form-control&quot;&gt;                &lt;span class=&quot;help-block&quot;&gt;用户名可以包含数字，字母和下划线&lt;/span&gt;            &lt;/div&gt;        &lt;/form&gt;    b.行内表单        &lt;form class=&apos;form-inline&apos;&gt;            &lt;div class=&apos;form-group&apos;&gt;                &lt;label class=&apos;sr-only&apos;&gt;用户名&lt;/label&gt;                &lt;input class=&apos;form-control&apos; placeholder=&quot;请输入用户名&quot;&gt;            &lt;/div&gt;        &lt;/form&gt;        注：.sr-only是 除了屏幕阅读器外，其他设备上隐藏该元素，这个是用于屏幕阅读器的，帮助残障人士更好的访问网站。    c.水平表单(难点)        &lt;form class=&apos;form-horizontal&apos;&gt;            &lt;div class=&apos;form-group&apos;&gt;                &lt;div class=&apos;col-**-**&apos;&gt;                    &lt;label&gt;用户名&lt;/label&gt;                &lt;/div&gt;                &lt;div class=&apos;col-**-**&apos;&gt;                    &lt;input class=&apos;form-control&apos;&gt;                &lt;/div&gt;                &lt;div class=&apos;col-**-**&apos;&gt;                    &lt;span class=&quot;help-block&quot;&gt;用户名可以包含数字字母和下划线&lt;/span&gt;                &lt;/div&gt;            &lt;/div&gt;        &lt;/form&gt;</code></pre><p>3.组件<br>    1.图标字体<br>         使用方法<br>         <span class="glyphicon glyphicon-*"></span><br>         注：span中不能有任何文本或子标签</p><pre><code>2.按钮组     .btn-group     .btn-group-justified         占满屏幕的按钮组     .btn-group-lg/sm/xs          不同型号的按钮     .btn-group-vertical          竖直按钮3.下拉菜单    &lt;div class=&apos;dropdown&apos;&gt;        &lt;a data-toggle=&apos;dropdown&apos;&gt;触发元素&lt;/a&gt;        &lt;ul class=&apos;dropdown-menu&apos;&gt;            &lt;li&gt;小鸡&lt;/li&gt;            &lt;li&gt;小鸭&lt;/li&gt;            &lt;li&gt;小狗&lt;/li&gt;        &lt;/ul&gt;    &lt;/div&gt;4.导航    a.标签页式导航        &lt;ul class=&apos;nav nav-tabs&apos;&gt;            &lt;li class=&apos;active&apos;&gt;                &lt;a data-toggle=&apos;tab&apos;&gt;详情信息&lt;/a&gt;            &lt;/li&gt;            &lt;li&gt;                &lt;a&gt;评论&lt;/a&gt;            &lt;/li&gt;        &lt;/ul&gt;        .nav        去除了li默认的样式        .nav-tabs   浮动，并增加了下边框        .active     显示当前页        .data-toggle  每个li可以来回切换    b.胶囊式导航        &lt;ul class=&apos;nav nav-pills&apos;&gt;            &lt;li class=&apos;active&apos;&gt;                &lt;a data-toggle=&apos;tab&apos;&gt;详情信息&lt;/a&gt;            &lt;/li&gt;            &lt;li&gt;                &lt;a data-toggle=&apos;tab&apos;&gt;评论&lt;/a&gt;            &lt;/li&gt;        &lt;/ul&gt;    c.导航条中的导航        &lt;ul class=&apos;nav navbar-nav&apos;&gt;            &lt;li class=&apos;active&apos;&gt;                &lt;a data-toggle=&apos;tab&apos;&gt;详情信息&lt;/a&gt;            &lt;li&gt;            &lt;li&gt;                &lt;a data-toggle=&apos;tab&apos;&gt;评论&lt;/a&gt;            &lt;li&gt;        &lt;/ul&gt;5.警告框        &lt;div class=&apos;alert alert-dismiss alert-danger&apos;&gt;            &lt;span class=&apos;close&apos;  data-dismiss=&apos;alert&apos;&gt;$times;&lt;/span&gt;        &lt;/div&gt;6.进度条    //普通进度条    &lt;div class=&apos;progress&apos;&gt;        &lt;div class=&apos;progress-bar&apos; style=&apos;width:30%&apos;&gt;&lt;/div&gt;    &lt;/div&gt;    //带条纹的进度条    &lt;div class=&apos;progress&apos;&gt;        &lt;div class=&apos;progress-bar progress-bar-striped&apos; style=&apos;width:30%&apos;&gt;&lt;/div&gt;    &lt;/div&gt;    //带条纹会动的进度条    &lt;div class=&apos;progress&apos;&gt;        &lt;div class=&apos;progress-bar progress-bar-striped active&apos; style=&apos;width:30%&apos;&gt;&lt;/div&gt;    &lt;/div&gt;7.路径导航(面包屑)    &lt;ul class=&quot;breadcrumb&quot;&gt;        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;新闻&lt;/a&gt;&lt;/li&gt;        &lt;li&gt;&lt;a href=&quot;&quot;&gt;国内新闻&lt;/a&gt;&lt;/li&gt;        &lt;li&gt;&lt;a href=&quot;&quot;&gt;泊头新闻&lt;/a&gt;&lt;/li&gt;    &lt;/ul&gt;8.分页条(pagination)    &lt;ul class=&quot;pagination&quot;&gt;        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;前一页&lt;/a&gt;&lt;/li&gt;        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;当前页&lt;/a&gt;&lt;/li&gt;        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;后一页&lt;/a&gt;&lt;/li&gt;    &lt;/ul&gt;    注：li里面必须要有a9.分页器(pager)    &lt;ul class=&quot;pager&quot;&gt;        &lt;li&gt;&lt;a href=&quot;&quot;&gt;前一页&lt;/a&gt;&lt;/li&gt;        &lt;li&gt;&lt;a href=&quot;&quot;&gt;后一页&lt;/a&gt;&lt;/li&gt;    &lt;/ul&gt;10.徽章(badge)    &lt;a href=&quot;#&quot; class=&quot;btn btn-warning&quot;&gt;        收件箱        &lt;span class=&quot;badge&quot;&gt;4&lt;/span&gt;    &lt;/a&gt;11.标签(label)    &lt;span class=&quot;label label-danger&quot;&gt;danger&lt;/span&gt;    &lt;span class=&quot;label label-warning&quot;&gt;warning&lt;/span&gt;    &lt;span class=&quot;label label-success&quot;&gt;success&lt;/span&gt;    &lt;span class=&quot;label label-info&quot;&gt;info&lt;/span&gt;    &lt;span class=&quot;label label-primary&quot;&gt;primary&lt;/span&gt;12.巨幕    &lt;div class=&quot;jumbotron&quot;&gt;        &lt;h1&gt;hello world&lt;/h1&gt;        &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Modi obcaecati possimus voluptas! Accusantium aperiam,            autem dolor dolorem eaque molestiae necessitatibus nihil nobis perspiciatis praesentium quidem reiciendis            sapiente soluta sunt voluptas.&lt;/p&gt;        &lt;p&gt;&lt;a href=&quot;#&quot; class=&quot;btn btn-warning&quot;&gt;按钮&lt;/a&gt;&lt;/p&gt;    &lt;/div&gt;13.页头    &lt;div class=&quot;page-header&quot;&gt;        &lt;h1&gt;hello world hello world&lt;/h1&gt;    &lt;/div&gt;14.水井（well）    &lt;div class=&quot;well&quot;&gt;        i have a good idea    &lt;/div&gt;15.列表组：    使用ul&gt;li实现列表组    &lt;ul class=&quot;list-group&quot;&gt;        &lt;li class=&quot;list-group-item&quot;&gt;首页&lt;/li&gt;        &lt;li class=&quot;list-group-item&quot;&gt;详情页&lt;/li&gt;        &lt;li class=&quot;list-group-item&quot;&gt;联系我们&lt;/li&gt;    &lt;/ul&gt;    使用div&gt;a实现列表组(有默认的鼠标悬停效果)    &lt;div class=&quot;list-group&quot;&gt;        &lt;a href=&quot;#&quot; class=&quot;list-group-item&quot;&gt;首页&lt;/a&gt;        &lt;a href=&quot;#&quot; class=&quot;list-group-item&quot;&gt;详情页&lt;/a&gt;        &lt;a href=&quot;#&quot; class=&quot;list-group-item&quot;&gt;联系我们&lt;/a&gt;    &lt;/div&gt;16.缩略图(缩略图一般配合栅格布局系统使用，实现批量的商品展示)    &lt;div class=&quot;thumbnail&quot;&gt;        &lt;img src=&quot;img/1.jpg&quot; alt=&quot;&quot;/&gt;        &lt;div class=&quot;caption&quot;&gt;            &lt;p&gt;国画&lt;/p&gt;            &lt;button type=&quot;button&quot; class=&quot;btn btn-warning&quot;&gt;加入购物车&lt;/button&gt;        &lt;/div&gt;    &lt;/div&gt;17.媒体对象    &lt;div class=&quot;media&quot;&gt;        &lt;div class=&quot;media-left&quot;&gt;&lt;/div&gt;        &lt;div class=&quot;media-body&quot;&gt;&lt;/div&gt;    &lt;/div&gt;18.面板和面板组(面板组内容分为三部分:头，主体，尾部)，多个面板组合(称为面板组)可以实现手风琴的效果    &lt;div class=&quot;panel panel-success&quot;&gt;        &lt;div class=&quot;panel-heading&quot;&gt;&lt;/div&gt;        &lt;div class=&quot;panel-body&quot;&gt;&lt;/div&gt;        &lt;div class=&quot;panel-footer&quot;&gt;&lt;/div&gt;    &lt;/div&gt;</code></pre><p>4.插件<br>    1.折叠效果<br>        <div class="collapse" id="collapseExample"><br>            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusamus deleniti ea expedita fugiat ipsum, natus<br>                optio recusandae vitae. Assumenda autem doloremque dolores ipsam ipsum modi molestias perferendis placeat, ut<br>                vero!</p><br>        </div></p><pre><code>    折叠效果的两个重要扩展        1.手风琴----重点            面板组+折叠效果插件        2.响应式导航条---重点&amp;&amp;难点        “响应式导航条”必须配合折叠效果插件使用。           响应式导航条在PHONE中只显示一个LOGO + 一个汉堡包按钮，其他菜单项全在折叠下拉菜单中；PAD和PC中，下拉菜单要实现绝对对位，定位到LOGO后面去。              “响应式导航条”必须配合折叠效果插件使用。                 响应式导航条在PHONE中只显示一个LOGO + 一个汉堡包按钮，其他菜单项全在折叠下拉菜单中；PAD和PC中，下拉菜单要实现绝对对位，定位到LOGO后面去。                Bootstrap中导航条分类：                (1)按颜色分：                      白底黑字：  .navbar-default                      黑底白字：  .navbar-inverse                (2)按定位方式分：                      相对定位：    默认                      固定定位：  .navbar-fixed-*                (3)按所在位置分：                      固定在顶部：  .navbar-fixed-top                      固定在底部：  .navbar-fixed-bottom                &lt;div class=&quot;navbar navbar-default&quot;&gt;                &lt;div class=&quot;container&quot;&gt;                  &lt;!--导航条头部 = brand + toggle--&gt;                  &lt;div class=&quot;navbar-header&quot;&gt;                  &lt;/div&gt;                  &lt;!--导航条折叠部分 = 导航 + 链接 + 表单 + 按钮 ...--&gt;                  &lt;div id=&quot;my-menu&quot; class=&quot;collapse navbar-collapse&quot;&gt;                  &lt;/div&gt;                &lt;/div&gt;              &lt;/div&gt;          Bootstrap中导航条分类：          (1)按颜色分：                白底黑字：  .navbar-default                黑底白字：  .navbar-inverse          (2)按定位方式分：                相对定位：    默认                固定定位：  .navbar-fixed-*          (3)按所在位置分：                固定在顶部：  .navbar-fixed-top                固定在底部：  .navbar-fixed-bottom          &lt;div class=&quot;navbar navbar-default&quot;&gt;          &lt;div class=&quot;container&quot;&gt;            &lt;!--导航条头部 = brand + toggle--&gt;            &lt;div class=&quot;navbar-header&quot;&gt;            &lt;/div&gt;            &lt;!--导航条折叠部分 = 导航 + 链接 + 表单 + 按钮 ...--&gt;            &lt;div id=&quot;my-menu&quot; class=&quot;collapse navbar-collapse&quot;&gt;            &lt;/div&gt;          &lt;/div&gt;        &lt;/div&gt;2.补充：列偏移 vs 列排序      列偏移：控制一列出现的位置，某列偏移后，后续的列都会随之偏移——只能往右偏移        col-lg/md/sm/xs-offset-*      列排序：控制一列出现的位置，某列可以往左拉或往右推——可以往右往左调整——某列排序后，其他列没有任何影响！        col-lg/md/sm/xs-push-*        col-lg/md/sm/xs-pull-*2.Boostrap第四部分：jQuery插件      Bootstrap基于jQuery提供了十几个插件函数，可以有两种调用方法：        (1)JS调用方式：  $(&apos;a&apos;).dropdown( );        (2)data-*调用方式： &lt;a data-toggle=&quot;dropdown&quot;&gt;&lt;/a&gt;      提示：官方推荐使用方式2！但有两个插件提交特别：需要方式1和2同时使用才能奏效。3.Boostrap第四部分：jQuery插件——下拉菜单    &lt;div class=&quot;dropdown&quot;&gt;        &lt;a data-toggle=&quot;dropdown&quot;&gt;触发元素&lt;/a&gt;        &lt;ul class=&quot;dropdown-menu&quot;&gt;    &lt;/div&gt;4. Boostrap第四部分：jQuery插件——导航     &lt;ul class=&quot;nav nav-tabs&quot;&gt;        &lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;#&quot;&gt;二十元套餐&lt;/a&gt;&lt;/li&gt;        &lt;li&gt;&lt;a data-toggle=&quot;tab&quot; href=&quot;#&quot;&gt;二十元套餐&lt;/a&gt;&lt;/li&gt;    &lt;/ul&gt;5. Boostrap第四部分：jQuery插件——警告框  &lt;div class=&quot;alert&quot;&gt;    &lt;span class=&quot;close&quot; data-dismiss=&quot;alert&quot;&gt;&amp;times;&lt;/span&gt;  &lt;/div&gt;6. Boostrap第四部分：jQuery插件——折叠    &lt;a data-toggle=&quot;collapse&quot; href=&quot;#box&quot;&gt;展开收起&lt;/a&gt;    &lt;div id=&quot;box&quot; class=&quot;collapse&quot;&gt;&lt;/div&gt;7. Boostrap第四部分：jQuery插件——工具提示      对HTML元素的title属性的呈现效果加以改观。          &lt;ANY title=&quot;工具提示的内容&quot; data-toggle=&quot;tooltip&quot;&gt;          &lt;script&gt;            $(&apos;[data-toggle=&quot;tooltip&quot;]&apos;).tooltip();          &lt;/script&gt;      注意：此插件必须同时声明data-*和js调用！还有一些可选参数，参考手册即可。8. Boostrap第四部分：jQuery插件——弹出框      &lt;ANY title=&quot;弹出框的标题&quot; data-content=&quot;弹出框的内容&quot; data-toggle=&quot;popover&quot;&gt;      &lt;script&gt;        $(&apos;[data-toggle=&quot;popover&quot;]&apos;).popover();      &lt;/script&gt;  注意：此插件必须同时声明data-*和js调用！还有一些可选参数，参考手册即可。Module：模块Model：模型Modal：模态对话框9.Boostrap第四部分：jQuery插件—— 模态框 —— 重点  Modal：模态对话框——在父窗口中弹出的子窗口，只要不关闭，则父窗口无法再获得输入焦点。      &lt;a data-toggle=&quot;modal&quot; href=&quot;#mid&quot;&gt;打开模态框&lt;/a&gt;      &lt;button data-toggle=&quot;modal&quot; data-target=&quot;#mid&quot;&gt;打开模态框&lt;/button&gt;  模态框必需的HTML结构：  &lt;div id=&quot;mid&quot; class=&quot;modal&quot;&gt;  半透明遮罩层    &lt;div class=&quot;modal-dialog&quot;&gt;  尺寸位置        &lt;div class=&quot;modal-content&quot;&gt;  背景/边框/倒角/阴影            &lt;div class=&quot;modal-header&quot;&gt;                &lt;span data-dismiss=&quot;modal&quot; class=&quot;close&quot;&gt;&amp;times;&lt;/span&gt;            &lt;/div&gt;            &lt;div class=&quot;modal-body&quot;&gt;&lt;/div&gt;            &lt;div class=&quot;modal-footer&quot;&gt;&lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;  &lt;/div&gt;10. jQuery插件——轮播广告 —— 重点      提示：轮播广告的结构比较复杂！只要记得根元素 div.carousel（旋转木马），剩余的全靠Bootlint的错误提示。      &lt;div class=&quot;carousel&quot; data-ride=&quot;carousel&quot;&gt;        &lt;div class=&quot;carousel-inner&quot;&gt;            &lt;div class=&quot;item active&quot;&gt;                &lt;img&gt;            &lt;/div&gt;        &lt;/div&gt;      &lt;/div&gt;     练习：    (1)为每个广告添加说明文字    (2)添加“上一条”、“下一条”按钮    (3)添加序号指示器</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Bootstrap 是基于 HTML、CSS、JavaScript 的，它简洁灵活，使得 Web 开发更加快捷&lt;br&gt;使用它可以快速开发一个适应手机、平板、电脑的网站，&lt;br&gt;比如我的&lt;br&gt;法标珠光卫浴  &lt;a href=&quot;http://zhangningle.gitee
      
    
    </summary>
    
    
      <category term="bootrtsp" scheme="http://www.zhangningle.top/tags/bootrtsp/"/>
    
      <category term="HTML" scheme="http://www.zhangningle.top/tags/HTML/"/>
    
      <category term="移动端" scheme="http://www.zhangningle.top/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>css3动画</title>
    <link href="http://www.zhangningle.top/2018/03/17/css3/"/>
    <id>http://www.zhangningle.top/2018/03/17/css3/</id>
    <published>2018-03-17T09:20:14.000Z</published>
    <updated>2018-06-10T08:38:10.309Z</updated>
    
    <content type="html"><![CDATA[<p>最近一直在做H5的微场景，用到很多css3的特效，在这里把常用的总结一下吧，</p><ul><li><code>border-radius</code>创建圆角边框</li><li><code>box-shadow</code> 添加阴影</li><li><code>background-size</code> 属性规定背景图片的尺寸。</li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">transform: rotateX(120deg);</span><br><span class="line">-webkit-transform: rotateX(120deg);/* Safari 和 Chrome */</span><br><span class="line">-moz-transform: rotateX(120deg);</span><br></pre></td></tr></table></figure></li></ul><p>3d转换</p><ul><li><code>transition</code> css3过渡<br>CSS3 过渡是元素从一种样式逐渐改变为另一种的效果。<br>要实现这一点，必须规定两项内容：<br>规定把效果添加到哪个 CSS 属性上<br>规定效果的时长 </li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CSS3 @keyframes 规则</span><br><span class="line">如需在 CSS3 中创建动画，您需要学习 @keyframes 规则。</span><br><span class="line"></span><br><span class="line">@keyframes 规则用于创建动画。在 @keyframes 中规定某项 CSS 样式，就能创建由当前样式逐渐改为新样式的动画效果。</span><br></pre></td></tr></table></figure></li></ul><p>创建css3动画，可代替一些js效果，</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近一直在做H5的微场景，用到很多css3的特效，在这里把常用的总结一下吧，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;border-radius&lt;/code&gt;创建圆角边框&lt;/li&gt;
&lt;li&gt;&lt;code&gt;box-shadow&lt;/code&gt; 添加阴影&lt;/li&gt;
&lt;li&gt;&lt;code
      
    
    </summary>
    
    
      <category term="HTML" scheme="http://www.zhangningle.top/tags/HTML/"/>
    
      <category term="css3" scheme="http://www.zhangningle.top/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>火锅鸡网</title>
    <link href="http://www.zhangningle.top/2018/03/11/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%E4%B8%80%20/"/>
    <id>http://www.zhangningle.top/2018/03/11/小程序学习记录一 /</id>
    <published>2018-03-11T09:20:14.000Z</published>
    <updated>2018-06-10T08:43:48.957Z</updated>
    
    <content type="html"><![CDATA[<p>火锅鸡网，终于做完了，我做的是移动端，晓哥做的pc端，做的时候感觉移动端坑也好多，中间经理吩咐的细节部分老是忘记改，还好我从哥记忆力好，哈哈，这两天改了n次，终于算是过了自己这关了，<br>好，下边总结一下自己的这次的项目心得，</p><h2 id="没听清楚需求"><a href="#没听清楚需求" class="headerlink" title="没听清楚需求"></a>没听清楚需求</h2><p>一开始讲需求的时候没认真听，所以做完以后修改的时候比做的时间都多，所以下次一定要注意，用户需求才是项目的方向主导，<br>了解了用户需求，清楚了项目的层级结构，才能高效的快速的完成工作，不要觉得前期规划很慢，其实前期吧项目规划的越清楚，后期做的时候就会越迅速，</p><h2 id="swiper-问题"><a href="#swiper-问题" class="headerlink" title="swiper 问题"></a>swiper 问题</h2><p>又是swiper  没办法 一做移动端就想到了他，谁让他是移动端最好的轮播呢（00）<br>这个问题主要出在我没搞清楚swiper 的函数就修改人家的代码，导致一个轮播浪费了很多的时间，最后还是自己写出的…</p><h2 id="javascript"><a href="#javascript" class="headerlink" title="javascript"></a>javascript</h2><p>中间用到一个返回的功能，想到了BOM，可是就是实现不了 ，果然百度是强大的，<br><code>&lt;a class=&quot;fl clearfix&quot; href=&quot;javascript:history.back(-1)&quot;&gt;</code><br>js调用浏览器的历史记录 无刷新返回 就是类似的浏览器历史记录 缺点是不能刷新 优点是 速度快</p><p>做了这么多项目后觉得自己的JavaScript有所提高了，</p><h2 id="分享功能"><a href="#分享功能" class="headerlink" title="分享功能"></a>分享功能</h2><p>由于客户喜欢的分享功能比较奇葩，别人都是分享网页或网址，他想让分享APP，着急上火的我去找了百度、segmentfault、博客园、csdn，最终在我的大知乎上找到了一个，<br>这是一个github的开源项目，感觉超级良心 ，<br>示例：<a href="https://fa-ge.github.io/NativeShare/demo/index.html" target="_blank" rel="noopener">https://fa-ge.github.io/NativeShare/demo/index.html</a><br>放出git地址<a href="https://github.com/fa-ge/NativeShare" target="_blank" rel="noopener">https://github.com/fa-ge/NativeShare</a><br>技术点主要是JavaScript（又是我强大的js）调用手机系统的分享功能<br>自我觉得对于div+css越发越熟练，JavaScript也上了一个台阶！！ 加油张宁乐！<br>点击–&gt;火锅鸡网演示：<a href="http://zhangningle.gitee.io/m.huoguoji.net/" target="_blank" rel="noopener">http://zhangningle.gitee.io/m.huoguoji.net/</a><br>我懂代码–&gt;点击查看源码：<a href="https://gitee.com/zhangningle/m.huoguoji.net" target="_blank" rel="noopener">源码</a><br><img src="http://p0bnwspy9.bkt.clouddn.com/6B4146D081BAE220634689C69DC76C57.png" alt="火锅鸡网" style="width:75%;" class="about_img"><br><br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;火锅鸡网，终于做完了，我做的是移动端，晓哥做的pc端，做的时候感觉移动端坑也好多，中间经理吩咐的细节部分老是忘记改，还好我从哥记忆力好，哈哈，这两天改了n次，终于算是过了自己这关了，&lt;br&gt;好，下边总结一下自己的这次的项目心得，&lt;/p&gt;
&lt;h2 id=&quot;没听清楚需求&quot;&gt;&lt;a
      
    
    </summary>
    
    
      <category term="HTML" scheme="http://www.zhangningle.top/tags/HTML/"/>
    
      <category term="移动端" scheme="http://www.zhangningle.top/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="http://www.zhangningle.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>织梦cms</title>
    <link href="http://www.zhangningle.top/2018/03/11/%E7%BB%87%E6%A2%A6cms/"/>
    <id>http://www.zhangningle.top/2018/03/11/织梦cms/</id>
    <published>2018-03-11T09:20:14.000Z</published>
    <updated>2018-06-10T08:44:19.277Z</updated>
    
    <content type="html"><![CDATA[<p>织梦cms<br>这些天学习了织梦cms内容管理系统，</p><blockquote><p>织梦内容管理系统(DedeCms) 以简单、实用、开源而闻名，是国内最知名的PHP开源网站管理系统，也是使用用户最多的PHP类CMS系统，在经历多年的发展，目前的版本无论在功能，还是在易用性方面，都有了长足的发展和进步，DedeCms免费版的主要目标用户锁定在个人站长，功能更专注于个人网站或中小型门户的构建，当然也不乏有企业用户和学校等在使用该系统。</p></blockquote><ol><li>安装好phpstudy(phpStudy是一个PHP调试环境的程序集成包。该程序包集成最新的Apache+PHP+MySQL+phpMyAdmin+ZendOptimizer,一次性安装，无须配置即可使用，是非常方便、好用的PHP调试环境)</li><li>去织梦官网下载最新的织梦后台模板，</li><li>下完把梦后台放在phpstudy的后台的www目录下，并配置站点域名。打开运行</li></ol><p>phpstudy下载：<a href="http://www.phpstudy.net/" target="_blank" rel="noopener">http://www.phpstudy.net/</a><br>织梦cms下载：<a href="http://www.dedecms.com/products/dedecms/downloads/" target="_blank" rel="noopener">http://www.dedecms.com/products/dedecms/downloads/</a><br>HostsEditor 编辑hosts文件（配置域名）：<a href="https://pan.baidu.com/s/1o79DCAu" target="_blank" rel="noopener">https://pan.baidu.com/s/1o79DCAu</a></p><p>简单熟悉织梦的后台操作后，开始自己学着做模板，<br>首先先熟悉织梦的标签生成器的使用：<br>学会后可以很方便的构造自己喜欢的网站</p><p>常用的的织梦标签有：<br>都是常用的一些标签，大家可以用ctrl+F实现搜索。</p><p>网站名称：{dede:global.cfg_webname/}</p><p>网站根网址：{dede:global.cfg_basehost/}</p><p>网站根目录：{dede:global.cfg_cmsurl/}</p><p>网页主页链接：{dede:global.cfg_indexurl/}</p><p>网站描述：{dede:global.cfg_description/}</p><p>网站关键字：{dede:global.cfg_keywords/}</p><p>模板路径：{dede:global.cfg_templets_skin/}</p><p>调用页面：{dede:include filename=”head.htm”/}</p><h2 id="网站编码：-dede-global-cfg-soft-lang"><a href="#网站编码：-dede-global-cfg-soft-lang" class="headerlink" title="网站编码：{dede:global.cfg_soft_lang/}"></a>网站编码：{dede:global.cfg_soft_lang/}</h2><p>调用时间：[field:pubdate function=MyDate(‘y-m-d’,@me)/]</p><p>调用缩略图：<br>{dede:arclist row=10 orderby=pubdate type=’image.’ imgwidth=’定义图片宽度’ imgheight=’高度’}<br>[field:image/]<br>{/dede:arclist}</p><p>调用缩略图原图：<br>[field:litpic runphp=’yes’]<br>$youjoys = array(“-lp”, “_lit”);<br>@me = str_replace ($youjoys, “”, @me);<br>[/field:litpic]</p><p>调用单个栏目：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;dede:type&#125;</span><br><span class="line">&lt;a href=&quot;[field:typelink /]&quot;&gt;[field:typename /]&lt;/a&gt;</span><br></pre></td></tr></table></figure></p><h2 id="dede-type"><a href="#dede-type" class="headerlink" title="{/dede:type}"></a>{/dede:type}</h2><p>文章标题：{dede:field.title/}</p><p>文章描述：{dede:field.description function=’html2text(@me)’/}</p><p>文章关键词：{dede:field.keywords/}</p><p>当前位置：{dede:field name=’position’/}</p><p>文章时间：{dede:field.pubdate function=”MyDate(‘Y-m-d H:i’,@me)”/}</p><p>文章来源：{dede:field.source/}</p><p>文章作者：{dede:field.writer/}</p><p>文章内容：{dede:field.body/}</p><p>上一篇：{dede:prenext get=’pre’/}</p><p>下一篇：{dede:prenext get=’next’/}</p><h2 id="点击量："><a href="#点击量：" class="headerlink" title="点击量："></a>点击量：<script src="{dede:field name='phpurl'/}/count.php?view=yes&aid={dede:field name='id'/}&mid={dede:field name='mid'/}" type="text/javascript" language="javascript"></script></h2><p>channel|频道标签：</p><p>标签名称：channel<br>标记简介：织梦常用标记，通常用于网站顶部以获取站点栏目信息，方便网站会员分类浏览整站信息<br>功能说明：用于获取栏目列表<br>适用范围：全局使用</p><p>基本语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;dede:channel type=&apos;top&apos; row=&apos;8&apos; currentstyle=&quot;&lt;li&gt;&lt;a href=&apos;~typelink~&apos; class=&apos;thisclass&apos;&gt;~typename~&lt;/a&gt; &lt;/li&gt;&quot;&#125;</span><br><span class="line"> &lt;li&gt;&lt;a href=&apos;[field:typelink/]&apos;&gt;[field:typename/]&lt;/a&gt; &lt;/li&gt;</span><br><span class="line">&#123;/dede:channel&#125;</span><br></pre></td></tr></table></figure></p><p>参数说明：<br>typeid = ‘0’  栏目ID<br>reid = ‘0’ 上级栏目ID<br>row = ‘100’ 调用栏目数<br>col = ‘1’ 分多少列显示（默认为单列）<br>type = ‘son | sun’ son表示下级栏目,self表示同级栏目,top顶级栏目<br>currentstyle = ‘’ 应用样式</p><p>底层模板字段：<br>ID(同 id),typeid, typelink, typename, typeurl,typedir(仅表示栏目的网址)</p><p>[field:id/]<br>[field:typeid/]<br>[field:typelink/] 调用栏目名称，点击直接跳转该栏目列表<br>[field:typename/] 调用栏目名称，无链接<br>[field:typeurl/]<br>[field:typedir/]</p><p>例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;dede:channel type=&apos;top&apos;&#125;</span><br><span class="line">&lt;a href=&apos;[field:typelink /]&apos;&gt;[field:typename/]&lt;/a&gt; </span><br><span class="line">&#123;/dede:channel&#125;</span><br></pre></td></tr></table></figure></p><h2 id="注：在没有指定typeid的情况下，type标记与模板的环境有关，如，模板生成到栏目一，那么type-’son’就表示栏目一的所有子类"><a href="#注：在没有指定typeid的情况下，type标记与模板的环境有关，如，模板生成到栏目一，那么type-’son’就表示栏目一的所有子类" class="headerlink" title="注：在没有指定typeid的情况下，type标记与模板的环境有关，如，模板生成到栏目一，那么type=’son’就表示栏目一的所有子类"></a>注：在没有指定typeid的情况下，type标记与模板的环境有关，如，模板生成到栏目一，那么type=’son’就表示栏目一的所有子类</h2><p>arclist|文档列表： </p><p>标签名称：arclist<br>标记简介：织梦常用标记，也称为自由列表标记，其中imglist、imginfolist、specart、coolart、autolist都是由该标记所定义的不同属性延伸出来的别名标记。<br>功能说明：获取指定文档列表<br>适用范围：全局使用</p><p>基本语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;dede:arclist  flag=&apos;h&apos; typeid=&apos;&apos; row=&apos;&apos; col=&apos;&apos; titlelen=&apos;&apos; infolen=&apos;&apos; imgwidth=&apos;&apos; imgheight=&apos;&apos; listtype=&apos;&apos; orderby=&apos;&apos; keyword=&apos;&apos; limit=&apos;0,1&apos;&#125;</span><br><span class="line">&lt;a href=&apos;[field:arcurl/]&apos;&gt;[field:title/]&lt;/a&gt;</span><br><span class="line">&#123;/dede:arclist&#125;</span><br></pre></td></tr></table></figure></p><p>参数说明：<br>col=’’ 分多少列显示（默认为单列），5.3版中本属性可以通过多种方式进行多行显示<br>如果col=’1’要多列显示的可用div+css实现<br>以下为通过div+css实现多列的示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=text/css&gt;</span><br><span class="line">div&#123;width:400px;float:left;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&#123;dede:arclist row=&apos;10&apos; titlelen=&apos;24&apos; orderby=&apos;pubdate&apos; idlist=&apos;&apos; col=&apos;2&apos;&#125;</span><br><span class="line">?[field:textlink/]([field:pubdate function=MyDate(&apos;m-d&apos;,@me)/])&lt;br/&gt;</span><br><span class="line">&#123;/dede:arclist&#125;</span><br></pre></td></tr></table></figure></p><p>当col&gt;1将使用原来的table多列方式显示<br>row=’10’ 返回文档列表总数<br>typeid=’’ 栏目ID,在列表模板和档案模板中一般不需要指定，在首页模板中允许用”,”分开表示多个栏目；<br>getall=’1’ 在没有指定这属性的情况下,在栏目页、文章页模板,不会获取以”,”分开的多个栏目的下级子类<br>titlelen = ‘30’ 标题长度 等同于titlelength<br>infolen=’160’ 表示内容简介长度 等同于infolength<br>imgwidth=’120’ 缩略图宽度<br>imgheight=’90’ 缩略图高度<br>listtype=’all’ 栏目类型 image含有缩略图 commend推荐<br>orderby=’sortrank’ 文档排序方式<br>§ orderby=’hot’ 或 orderby=’click’ 表示按点击数排列<br>§ orderby=’sortrank’ 或 orderby=’pubdate’ 按出版时间排列<br>§ orderby=’near’<br>§ orderby==’lastpost’ 按最后评论时间<br>§ orderby==’scores’ 按得分排序<br>§ orderby=’id’ 按文章ID排序<br>§ orderby=’rand’ 随机获得指定条件的文档列表<br>keyword=’’ 含有指定关键字的文档列表，多个关键字用”,”分<br>innertext = ‘’ 单条记录样式<br>aid=’’ 指定文档ID<br>idlist =’’ 提取特定文档（文档ID）<br>channelid 频道ID<br>limit=’起始ID,记录数’  （起始ID从0开始）表示限定的记录范围（如：limit=’1,2’  表示从ID为1的记录开始，取2条记录）<br>flag = ‘h’ 自定义属性值：头条[h]推荐[c]图片[p]幻灯[f]滚动[s]跳转[j]图文[a]加粗[b]<br>noflag = ‘’ 同flag，但这里是表示不包含这些属性<br>orderway=’desc’ 值为 desc 或 asc ，指定排序方式是降序还是顺向排序，默认为降序<br>subday=’天数’ 表示在多少天以内的文档</p><p>用arclist调用于附加表字段的方法：</p><p>要获取附加表内容，必须符合两个条件<br>1、指定 channelid 属性<br>2、指定要获得的字段 addfields=’字段1,字段’<br>如：<br>{dede:arclist addfields=’filetype,language,softtype’ row=’8’ channelid=’3’}<br>[field:textlink /] - [field:softtype /]<br><br>{/dede:arclist}</p><p>底层模板字段：<br>ID(同 id),typeid,sortrank,flag,ismake,channel,arcrank,click,money,title,shorttitle,color,writer,<br>source,litpic(同picname),pubdate,senddate,mid, lastpost,scores,goodpost,badpost,notpost,<br>description(同infos),filename, image, imglink, fulltitle, textlink, typelink,plusurl, memberurl, templeturl,<br>stime(pubdate 的”0000-00-00”格式)<br>其中：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">textlink = &lt;a href=&apos;arcurl&apos;&gt;title&lt;/a&gt;</span><br><span class="line">typelink = &lt;a href=&apos;typeurl&apos;&gt;typename&lt;/a&gt;</span><br><span class="line">imglink = &lt;a href=&apos;arcurl&apos;&gt;&lt;img src=&apos;picname&apos; border=&apos;0&apos; width=&apos;imgwidth&apos; height=&apos;imgheight&apos;&gt;&lt;/a&gt;</span><br><span class="line">image = &lt;img src=&apos;picname&apos; border=&apos;0&apos; width=&apos;imgwidth&apos; height=&apos;imgheight&apos; alt=’titile’&gt;</span><br><span class="line">字段调用方法：[field:varname/]</span><br></pre></td></tr></table></figure></p><p>如：<br>{dede:arclist infolen=’100’}<br>[field:textlink/]<br><br><br>[field:infos/]<br><br><br>{/dede:arclist}<br>注：底层模板里的Field实现也是织梦标记的一种形式，因此支持使用PHP语法，Function扩展等功能。<br>如： 给当天发布的内容加上 (new) 标志<br>[field:senddate runphp=’yes’]<br>$ntime = time();<br>$oneday = 3600 * 24;<br>if(($ntime - @me)&lt;$oneday) @me = “<font color="red">(new)</font>“;<br>else @me = “”;<br>[/field:senddate]</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;织梦cms&lt;br&gt;这些天学习了织梦cms内容管理系统，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;织梦内容管理系统(DedeCms) 以简单、实用、开源而闻名，是国内最知名的PHP开源网站管理系统，也是使用用户最多的PHP类CMS系统，在经历多年的发展，目前的版本无论在功能，
      
    
    </summary>
    
    
      <category term="织梦cms" scheme="http://www.zhangningle.top/tags/%E7%BB%87%E6%A2%A6cms/"/>
    
      <category term="cms" scheme="http://www.zhangningle.top/tags/cms/"/>
    
  </entry>
  
  <entry>
    <title>小程序学习记录一</title>
    <link href="http://www.zhangningle.top/2018/02/22/%E7%81%AB%E9%94%85%E9%B8%A1/"/>
    <id>http://www.zhangningle.top/2018/02/22/火锅鸡/</id>
    <published>2018-02-22T06:20:14.000Z</published>
    <updated>2018-06-10T08:42:32.355Z</updated>
    
    <content type="html"><![CDATA[<p>最近很热门的小程序，一直想学着做一个，刚好前天在<a href="segmentfault">segmentfault</a>看到了用个人做个校园的小程序，我就想自己也组偶一个试试，说动就动，</p><ul><li>第一步先去微信公众平台注册成为开发者，期间需要自己的身份证号什么的要注意，提前准备好，</li><li>注册完之后需要填写小程序的的名字和介绍说明，</li><li>接下来需要在下载<a href="https://mp.weixin.qq.com/debug/wxadoc/dev/devtools/download.html" target="_blank" rel="noopener">微信小程序开发者工具</a>下载安装“微信web开发者工具”，他可以编写小程序代码，也可以进行微信公众号的排版和发布，使用是非常方便的，里面的调试功能和Chrome浏览器基本一样，<br>学习过程中也一边查看的是<a href="">微信小程序官方文档</a>，一边试着打打代码，<br>只要有点html+css基础的都能很快的学习小程序，<h4 id="小程序的整体构架"><a href="#小程序的整体构架" class="headerlink" title="小程序的整体构架"></a>小程序的整体构架</h4>安装好开发工具后，输入小程序ID即自动新建一个小程序demo文件，它自动创建的小程序文件就类似一个模板一样，可以省去很多初始化的东西，直接上手代码，<br>每个小程序文件的结构都是由两个主要部分构成：<br>主体部分 + 各个页面。类似于许多框架，主体部分主要用于核心的配置，各个页面在独自配置逻辑和样式。<br>1.1，主体部分主要由3个文件构成<br>1）app.js：小程序逻辑，<br>2）app.json ：小程序配置，比如导航、窗口、页面http请求跳转等<br>3）app.wxss：公共样式配置</li></ul><p>小程序的开发也是遵守了MVC结构进行构建的</p><blockquote><p>MVC全名是Model View Controller，是模型(model)－视图(view)－控制器(controller)的缩写，一种软件设计典范，用一种业务逻辑、数据、界面显示分离的方法组织代码，将业务逻辑聚集到一个部件里面，在改进和个性化定制界面及用户交互的同时，不需要重新编写业务逻辑。MVC被独特的发展起来用于映射传统的输入、处理和输出功能在一个逻辑的图形化用户界面的结构中。</p></blockquote><p>1.2，页面由4个文件构成<br>1）js：页面逻辑，相当于控制层（C）；也包括部分的数据（M）<br>2）wxml：页面结构展示，相当于视图层（V）<br>3）wxss：页面样式表，纯前端，用于辅助wxml展示<br>4）json：页面配置，配置一些页面展示的数据，充当部分的模型（M）<br>简单理解为<br>.js后缀的文件是脚本文件，页面的交互等代码在这里实现；<br>.json后缀的文件是配置文件，主要是json数据格式存放，用于设置程序的配置效果；<br>.wxss后缀的是样式表文件，类似于前端中的css,用于对界面进行美化；<br>.wxml后缀的文件是页面结构文件，用于构建页面，在页面上增加控件。<br>最后放上一张结构图：<br><img src="" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近很热门的小程序，一直想学着做一个，刚好前天在&lt;a href=&quot;segmentfault&quot;&gt;segmentfault&lt;/a&gt;看到了用个人做个校园的小程序，我就想自己也组偶一个试试，说动就动，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一步先去微信公众平台注册成为开发者，期间需要自己的身
      
    
    </summary>
    
    
      <category term="移动端" scheme="http://www.zhangningle.top/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
      <category term="小程序" scheme="http://www.zhangningle.top/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="微信" scheme="http://www.zhangningle.top/tags/%E5%BE%AE%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>大连罗森_移动端</title>
    <link href="http://www.zhangningle.top/2018/02/19/%E5%A4%A7%E8%BF%9E%E7%BD%97%E6%A3%AE_%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    <id>http://www.zhangningle.top/2018/02/19/大连罗森_移动端/</id>
    <published>2018-02-19T00:32:07.000Z</published>
    <updated>2018-06-10T08:42:15.238Z</updated>
    
    <content type="html"><![CDATA[<p>写大连罗森（移动端）的时候居然发现过了个年回来很多代码都生疏了，<br>在写的过程中发现一些问题，在此记录下来以防在犯。</p><ul><li>做的时候主要使用rem布局，rem用熟练了以后确实方便很多，做的时候也遇到过一些问题，在此记录一下。</li><li>一个页面插入多个swiper<br>写的首页的时候，首页需要加两个轮播图，并且结构上不一样，我就引入了一个swiper。<br>问题：在写首页的时候遇到了一个问题，就是点击一个轮播图的按钮时候，另一个也跟着动，<br>思考：我就想，这肯定不行啊，然后晚上回去就开始研究，发现它其实就是class一样，所以调用的function一样，从而导致的2个轮播一起轮播，<br>解决方案：给第一个轮播的按钮重新命名一个新的class，并且调用同一个function，完美解决！</li><li>img加宽高<br>这个写完后台测试时才发现的问题，导致前期给后台大哥填了很多麻烦，还是给img标签加上高和宽比较好。这样的话，图片显示出来就会按照设定好的尺寸，不会出现意外情况。但如果没有设定，很有可能会出现图片上边有白条，或者没有按照想要的效果显示，网站更新是换图片会出现问题。我碰到的就是没有加宽高，造成了图片下沉，上面出现白条。<br>网页中的img最好使用div包起来，或者把img的display属性设为block，可以消除img的默认边距<br>记忆比较深刻的就是这么两个问题，<br>最后放上演示地址（建议手机浏览）：<a href="http://zhangningle.gitee.io/m.luosen/" target="_blank" rel="noopener">http://zhangningle.gitee.io/m.luosen/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;写大连罗森（移动端）的时候居然发现过了个年回来很多代码都生疏了，&lt;br&gt;在写的过程中发现一些问题，在此记录下来以防在犯。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;做的时候主要使用rem布局，rem用熟练了以后确实方便很多，做的时候也遇到过一些问题，在此记录一下。&lt;/li&gt;
&lt;li&gt;一个页
      
    
    </summary>
    
    
      <category term="移动端" scheme="http://www.zhangningle.top/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
      <category term="swiper" scheme="http://www.zhangningle.top/tags/swiper/"/>
    
  </entry>
  
  <entry>
    <title>gulp安装教程之简单的sass部署</title>
    <link href="http://www.zhangningle.top/2018/01/24/gulp%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B9%8B%E7%AE%80%E5%8D%95%E7%9A%84sass%E9%83%A8%E7%BD%B2/"/>
    <id>http://www.zhangningle.top/2018/01/24/gulp安装教程之简单的sass部署/</id>
    <published>2018-01-24T04:42:44.000Z</published>
    <updated>2018-06-10T08:38:32.931Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前要"><a href="#前要" class="headerlink" title="前要"></a>前要</h2><p>系统：win7、win10<br>终端工具：cmd（或使用系统终端：win+R -&gt; 输入cmd -&gt; 回车）<br>gulp官网地址：<a href="http://www.gulpjs.com.cn/" target="_blank" rel="noopener">http://www.gulpjs.com.cn/</a><br>gulp中文文档：<a href="http://www.gulpjs.com.cn/docs/" target="_blank" rel="noopener">http://www.gulpjs.com.cn/docs/</a><br>gulp插件地址：<a href="http://gulpjs.com/plugins" target="_blank" rel="noopener">http://gulpjs.com/plugins</a><br>gulpAPI地址：<a href="http://www.gulpjs.com.cn/docs/api/" target="_blank" rel="noopener">http://www.gulpjs.com.cn/docs/api/</a></p><h2 id="一、安装node"><a href="#一、安装node" class="headerlink" title="一、安装node"></a>一、安装node</h2><p>window下，下载node安装即可。<br>node下载地址：<a href="http://nodejs.cn/download/" target="_blank" rel="noopener">http://nodejs.cn/download/</a><br>安装比较简单，基本一直下一步即可，安装路径随意。<br>为了确保Node已经正确安装，我们执行几个简单的命令。<br><code>node -v</code><br>回车（Enter），如果正确安装的话，你会看到所安装的Node的版本号，接下来看看npm。<br><code>npm -v</code><br>这同样能得到npm的版本号。<br>如果这两行命令没有得到返回，可能node就没有安装正确，尝试重启下命令行工具，如果还不行的话，只能进行重装。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p0bnwspy9.bkt.clouddn.com/sass1.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br><strong>推荐使用cnpm  由于国外的网速不稳定 cnpm 比较好用</strong><br>注：cnpm跟npm用法完全一致，只是在执行命令时将npm改为cnpm。后面的演示均使用cnpm<br><strong>安装cnpm</strong><br>执行<br><code>npm install cnpm -g --registry=https://registry.npm.taobao.org</code><br><strong>2. 检测cnpm是否安装成功</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p0bnwspy9.bkt.clouddn.com/sass2.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>输入<br><code>cnpm -v</code><br>返回版本号即成功</p><h2 id="三、全局安装gulp"><a href="#三、全局安装gulp" class="headerlink" title="三、全局安装gulp"></a>三、全局安装gulp</h2><p><strong>全局安装gulp</strong><br>在cmd命令行中执行<br><code>cnpm install gulp -g</code><br>下载之后查看是否安装正确<br><code>ulp -v</code><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p0bnwspy9.bkt.clouddn.com/sass4.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><h2 id="四、项目文件根目录新建package-json"><a href="#四、项目文件根目录新建package-json" class="headerlink" title="四、项目文件根目录新建package.json"></a>四、项目文件根目录新建package.json</h2><p>示例：进入 D:/WWW/test 项目文件夹中<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p0bnwspy9.bkt.clouddn.com/sass3.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>执行命令<br><code>cnpm init</code><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p0bnwspy9.bkt.clouddn.com/sass5.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br><strong>查看项目文件根目录，是否新建package.json，且内容是否和你终端中输入的一致。 </strong><br>package.json内容如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  &quot;name&quot;: &quot;test&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class="line">  &quot;description&quot;: &quot;我是描述&quot;,</span><br><span class="line">  &quot;main&quot;: &quot;index.js&quot;,</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;author&quot;: &quot;&quot;,</span><br><span class="line">  &quot;license&quot;: &quot;ISC&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="五、本地安装gulp插件"><a href="#五、本地安装gulp插件" class="headerlink" title="五、本地安装gulp插件"></a>五、本地安装gulp插件</h2><p><strong>注：全局安装gulp是为了执行gulp任务，本地安装gulp则是为了调用gulp插件的功能</strong><br>进入你的项目文件路径中后，执行<br><figure class="highlight plain"><figcaption><span>install gulp --save-dev ```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">![](http://p0bnwspy9.bkt.clouddn.com/sass5a.jpg)</span><br><span class="line">## 六、新建gulpfile.js</span><br><span class="line">gulpfile.js是gulp的配置文件，放于项目目录中。</span><br><span class="line">``` //gulpfile.js 示例文件</span><br><span class="line"></span><br><span class="line">//导入你所需要用的工具包 require(&apos;node_modules里对应模块&apos;)</span><br><span class="line">var gulp = require(&apos;gulp&apos;),</span><br><span class="line">    sass = require(&apos;gulp-sass&apos;);</span><br><span class="line"></span><br><span class="line">// scss 任务</span><br><span class="line">gulp.task(&apos;sass&apos;,function()&#123;</span><br><span class="line">  return gulp.src(&apos;src/css/test.scss&apos;) //获取该任务需要的文件</span><br><span class="line">      .pipe( sass() )                  //该任务调用的模块</span><br><span class="line">      .pipe( gulp.dest(&apos;src/css&apos;) );   //将在 src/css 文件夹中生产test.css</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 默认任务</span><br><span class="line">gulp.task(&apos;default&apos;,[&apos;sass&apos;,&apos;watch1&apos;]);</span><br><span class="line"></span><br><span class="line">//监听文件</span><br><span class="line">gulp.task(&apos;watch1&apos;,function()&#123;</span><br><span class="line">    return gulp.watch(&apos;src/css/test.scss&apos;,[&apos;sass&apos;]);</span><br><span class="line">    //监听 src/css/test.scss 文件，修改时自动执行 sass 任务。</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h2 id="七、运行gulp中的sass"><a href="#七、运行gulp中的sass" class="headerlink" title="七、运行gulp中的sass"></a>七、运行gulp中的sass</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p0bnwspy9.bkt.clouddn.com/sass6.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p><strong>执行gulp 调用default中的所有任务</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p0bnwspy9.bkt.clouddn.com/sass7.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>如图：开启监听事件，当 src/css/test.scss 发生修改时，会自动执行sass任务。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p0bnwspy9.bkt.clouddn.com/sass8.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>sass的编译（gulp-sass）<br>less编译 （gulp-less）<br>重命名（gulp-rename）<br>图片转换为base64-encoded （gulp-img64）<br>自动添加css前缀（gulp-autoprefixer）<br>压缩css（gulp-clean-css）<br>js代码校验（gulp-jshint）<br>合并js文件（gulp-concat）<br>压缩js代码（gulp-uglify）<br>压缩图片（gulp-imagemin）<br>自动刷新页面（gulp-livereload，谷歌浏览器亲测，谷歌浏览器需安装livereload插件）<br>图片缓存，只有图片替换了才压缩（gulp-cache）<br>更改提醒（gulp-notify）<br>阻止 gulp 插件发生错误导致进程退出并输出错误日志(gulp-plumber)</p><h2 id="八、参考文件"><a href="#八、参考文件" class="headerlink" title="八、参考文件"></a>八、参考文件</h2><p>本文参考借鉴多篇文章 在 加上自己的实际测试后，写了这篇文章。<br>如有不妥之处和疑问的地方，请留言赐教，谢谢。<br>关于gulp的介绍，可参考官网：<br>gulp官网地址：<a href="http://www.gulpjs.com.cn/" target="_blank" rel="noopener">http://www.gulpjs.com.cn/</a><br>gulp中文文档：<a href="http://www.gulpjs.com.cn/docs/" target="_blank" rel="noopener">http://www.gulpjs.com.cn/docs/</a><br>gulp插件地址：<a href="http://gulpjs.com/plugins" target="_blank" rel="noopener">http://gulpjs.com/plugins</a><br>gulpAPI地址：<a href="http://www.gulpjs.com.cn/docs/api/" target="_blank" rel="noopener">http://www.gulpjs.com.cn/docs/api/</a><br>本文还参考了文章：<br><a href="http://www.cnblogs.com/2050/p/4198792.html" target="_blank" rel="noopener">http://www.cnblogs.com/2050/p/4198792.html</a><br><a href="http://www.ydcss.com/archives/18" target="_blank" rel="noopener">http://www.ydcss.com/archives/18</a><br><a href="http://blog.csdn.net/qq_23215957/article/details/51050460" target="_blank" rel="noopener">http://blog.csdn.net/qq_23215957/article/details/51050460</a><br>等等…如侵权请联系删除。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前要&quot;&gt;&lt;a href=&quot;#前要&quot; class=&quot;headerlink&quot; title=&quot;前要&quot;&gt;&lt;/a&gt;前要&lt;/h2&gt;&lt;p&gt;系统：win7、win10&lt;br&gt;终端工具：cmd（或使用系统终端：win+R -&amp;gt; 输入cmd -&amp;gt; 回车）&lt;br&gt;gulp官
      
    
    </summary>
    
    
      <category term="css" scheme="http://www.zhangningle.top/tags/css/"/>
    
      <category term="sass" scheme="http://www.zhangningle.top/tags/sass/"/>
    
      <category term="gulp" scheme="http://www.zhangningle.top/tags/gulp/"/>
    
      <category term="node.js" scheme="http://www.zhangningle.top/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>起点中文网-移动端 遇到的bug</title>
    <link href="http://www.zhangningle.top/2018/01/20/%E8%B5%B7%E7%82%B9%E4%B8%AD%E6%96%87%E7%BD%91-%E7%A7%BB%E5%8A%A8%E7%AB%AF-%E5%81%9A%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://www.zhangningle.top/2018/01/20/起点中文网-移动端-做时遇到的问题/</id>
    <published>2018-01-20T11:21:04.000Z</published>
    <updated>2018-06-10T08:42:41.272Z</updated>
    
    <content type="html"><![CDATA[<h2 id="起点中文网-移动端-做时遇到的bug"><a href="#起点中文网-移动端-做时遇到的bug" class="headerlink" title="起点中文网_移动端 做时遇到的bug"></a>起点中文网_移动端 做时遇到的bug</h2><h3 id="一、移动端轮播"><a href="#一、移动端轮播" class="headerlink" title="一、移动端轮播"></a>一、移动端轮播</h3><p>1.touchstart 手指触摸 == mousedown<br>2.touchend 手指抬起 == mouseup<br>3.touchmove 手指抬起 == mousmove<br>touch事件  在 chrome的模拟器下，部分版本 通过on的方式来添加事件无效<br>所以在移动端一般都使用如下方式<br>addEventListener(“事件名”,函数,冒泡或捕获);<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">document.addEventListener(&apos;touchstart&apos;,function(ev)&#123;</span><br><span class="line">    ev.preventDefault();</span><br><span class="line">&#125;);</span><br><span class="line">var box=document.getElementById(&quot;box&quot;);</span><br><span class="line">box.addEventListener(&apos;touchstart&apos;,function()&#123;</span><br><span class="line">    this.innerHTML=&apos;手指按下了&apos;;</span><br><span class="line">&#125;);</span><br><span class="line">box.addEventListener(&apos;touchmove&apos;,function()&#123;</span><br><span class="line">    this.innerHTML=&apos;手指移动了&apos;;</span><br><span class="line">&#125;);</span><br><span class="line">box.addEventListener(&apos;touchend&apos;,function()&#123;</span><br><span class="line">    this.innerHTML=&apos;手指离开了&apos;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>参考<a href="http://www.qdfuns.com/notes/37602/5901a1994c6f69d213da2aef82aa1d8d.html" target="_blank" rel="noopener">前端网</a><br>移动端事件demo <a href="http://ansonznl.coding.me/Mobile-demo/%E7%A7%BB%E5%8A%A8%E4%BA%8B%E4%BB%B601.html" target="_blank" rel="noopener">http://ansonznl.coding.me/Mobile-demo/%E7%A7%BB%E5%8A%A8%E4%BA%8B%E4%BB%B601.html</a></p><h3 id="二、滚动条"><a href="#二、滚动条" class="headerlink" title="二、滚动条"></a>二、滚动条</h3><p><strong>scrollTop为滚动条在Y轴上的滚动距离。<br>clientHeight为内容可视区域的高度。<br>scrollHeight为内容可视区域的高度加上溢出（滚动）的距离。</strong><br>从这个三个属性的介绍就可以看出来，滚动条到底部的条件即为scrollTop + clientHeight == scrollHeight。<br>废话不多少说，赶紧上代码（兼容不同的浏览器）。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">//滚动条在Y轴上的滚动距离</span><br><span class="line">function getScrollTop()&#123;</span><br><span class="line">　　var scrollTop = 0, bodyScrollTop = 0, documentScrollTop = 0;</span><br><span class="line">　　if(document.body)&#123;</span><br><span class="line">　　　　bodyScrollTop = document.body.scrollTop;</span><br><span class="line">　　&#125;</span><br><span class="line">　　if(document.documentElement)&#123;</span><br><span class="line">　　　　documentScrollTop = document.documentElement.scrollTop;</span><br><span class="line">　　&#125;</span><br><span class="line">　　scrollTop = (bodyScrollTop - documentScrollTop &gt; 0) ? bodyScrollTop : documentScrollTop;</span><br><span class="line">　　return scrollTop;</span><br><span class="line">&#125;</span><br><span class="line">//文档的总高度</span><br><span class="line">function getScrollHeight()&#123;</span><br><span class="line">　　var scrollHeight = 0, bodyScrollHeight = 0, documentScrollHeight = 0;</span><br><span class="line">　　if(document.body)&#123;</span><br><span class="line">　　　　bodyScrollHeight = document.body.scrollHeight;</span><br><span class="line">　　&#125;</span><br><span class="line">　　if(document.documentElement)&#123;</span><br><span class="line">　　　　documentScrollHeight = document.documentElement.scrollHeight;</span><br><span class="line">　　&#125;</span><br><span class="line">　　scrollHeight = (bodyScrollHeight - documentScrollHeight &gt; 0) ? bodyScrollHeight : documentScrollHeight;</span><br><span class="line">　　return scrollHeight;</span><br><span class="line">&#125;</span><br><span class="line">//浏览器视口的高度</span><br><span class="line">function getWindowHeight()&#123;</span><br><span class="line">　　var windowHeight = 0;</span><br><span class="line">　　if(document.compatMode == &quot;CSS1Compat&quot;)&#123;</span><br><span class="line">　　　　windowHeight = document.documentElement.clientHeight;</span><br><span class="line">　　&#125;else&#123;</span><br><span class="line">　　　　windowHeight = document.body.clientHeight;</span><br><span class="line">　　&#125;</span><br><span class="line">　　return windowHeight;</span><br><span class="line">&#125;</span><br><span class="line">window.onscroll = function()&#123;</span><br><span class="line">　　if(getScrollTop() + getWindowHeight() == getScrollHeight())&#123;</span><br><span class="line">　　　　alert(&quot;you are in the bottom!&quot;);</span><br><span class="line">　　&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h3 id="三、修改input-中placeholder字体颜色"><a href="#三、修改input-中placeholder字体颜色" class="headerlink" title="三、修改input 中placeholder字体颜色"></a>三、修改input 中placeholder字体颜色</h3><p>以前都不知道能修改，百度一下才知道是可以的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">::-webkit-input-placeholder &#123; /* WebKit browsers */</span><br><span class="line">　　color:#999;</span><br><span class="line">　　&#125;</span><br><span class="line">　　:-moz-placeholder &#123; /* Mozilla Firefox 4 to 18 */</span><br><span class="line">　　color:#999;</span><br><span class="line">　　&#125;</span><br><span class="line">　　::-moz-placeholder &#123; /* Mozilla Firefox 19+ */</span><br><span class="line">　　color:#999;</span><br><span class="line">　　&#125;</span><br><span class="line">　　:-ms-input-placeholder &#123; /* Internet Explorer 10+ */</span><br><span class="line">　　color:#999;</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure></p><h3 id="四、清除a、button的默认跳转"><a href="#四、清除a、button的默认跳转" class="headerlink" title="四、清除a、button的默认跳转"></a>四、清除a、button的默认跳转</h3><p>比如说登录时，账号和密码不填时不能点登录，节省js判断，或者有时候不想让a标签跳转可以用到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;button disabled=&quot;disabled&quot; id=&quot;btn&quot;&gt;登录&lt;/button&gt;</span><br><span class="line">/* 添加disabled属性后不会提交数据 */</span><br><span class="line">&lt;a href=&quot;javascript:&quot; class=&quot;borlenone phb_nav&quot;&gt;风云榜&lt;/a&gt;</span><br><span class="line">/* 在a的href添加javascript:;属性后不会跳转 */</span><br></pre></td></tr></table></figure></p><p>做完了起点中文网的移动端后对移动网页的制作有加深一些，对于js的运用也熟练了许多，自己也封装了一个选项卡方法，，对于html、css的一些属性更了解了，<br>总而言之收获恒很大。现在移动端浏览器兼容还是有点问题。<br>加油，<br>最后放上<a href="https://ansonznl.coding.me/QiDian/" target="_blank" rel="noopener">起点中文网</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;起点中文网-移动端-做时遇到的bug&quot;&gt;&lt;a href=&quot;#起点中文网-移动端-做时遇到的bug&quot; class=&quot;headerlink&quot; title=&quot;起点中文网_移动端 做时遇到的bug&quot;&gt;&lt;/a&gt;起点中文网_移动端 做时遇到的bug&lt;/h2&gt;&lt;h3 id=&quot;一
      
    
    </summary>
    
    
      <category term="移动端" scheme="http://www.zhangningle.top/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
      <category term="javascript" scheme="http://www.zhangningle.top/tags/javascript/"/>
    
      <category term="起点中文网" scheme="http://www.zhangningle.top/tags/%E8%B5%B7%E7%82%B9%E4%B8%AD%E6%96%87%E7%BD%91/"/>
    
      <category term="bug" scheme="http://www.zhangningle.top/tags/bug/"/>
    
  </entry>
  
  <entry>
    <title>移动端-起点中文网</title>
    <link href="http://www.zhangningle.top/2018/01/17/%E7%A7%BB%E5%8A%A8%E7%AB%AF-%E8%B5%B7%E7%82%B9%E4%B8%AD%E6%96%87%E7%BD%91/"/>
    <id>http://www.zhangningle.top/2018/01/17/移动端-起点中文网/</id>
    <published>2018-01-17T11:32:07.000Z</published>
    <updated>2018-06-10T08:44:03.762Z</updated>
    
    <content type="html"><![CDATA[<h2 id="移动端-起点中文网"><a href="#移动端-起点中文网" class="headerlink" title="移动端-起点中文网"></a>移动端-起点中文网</h2><p>利用百分比+rem布局做了<a href="http://ansonznl.coding.me/QiDian/" target="_blank" rel="noopener">起点中文网</a><br>我也在学php+mysql ,希望可以将他完善到可以看小说的状态！<br>PS：建议在手机端观看！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;移动端-起点中文网&quot;&gt;&lt;a href=&quot;#移动端-起点中文网&quot; class=&quot;headerlink&quot; title=&quot;移动端-起点中文网&quot;&gt;&lt;/a&gt;移动端-起点中文网&lt;/h2&gt;&lt;p&gt;利用百分比+rem布局做了&lt;a href=&quot;http://ansonznl.codi
      
    
    </summary>
    
    
      <category term="移动端" scheme="http://www.zhangningle.top/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>phpGD验证码二</title>
    <link href="http://www.zhangningle.top/2018/01/09/phpGD%E9%AA%8C%E8%AF%81%E7%A0%81%E4%BA%8C/"/>
    <id>http://www.zhangningle.top/2018/01/09/phpGD验证码二/</id>
    <published>2018-01-09T07:18:07.000Z</published>
    <updated>2018-06-10T08:40:30.478Z</updated>
    
    <content type="html"><![CDATA[<h3 id="php做的验证码二"><a href="#php做的验证码二" class="headerlink" title="php做的验证码二"></a>php做的验证码二</h3><h4 id="把验证码添加到登录页面中，"><a href="#把验证码添加到登录页面中，" class="headerlink" title="把验证码添加到登录页面中，"></a>把验证码添加到登录页面中，</h4><p>因为学了ajax，所以我直接用ajax做的登录验证码的刷新<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot;</span><br><span class="line">          content=&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;登录验证&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=&quot;action.php&quot; method=&quot;post&quot;&gt;</span><br><span class="line">    用户名：&lt;input name=&quot;username&quot; id=&quot;username&quot;&gt;&lt;br&gt;</span><br><span class="line">    密&amp;nbsp;码：&lt;input name=&quot;password&quot; id=&quot;password&quot;&gt;&lt;br&gt;</span><br><span class="line">    &lt;img id=&quot;ImgSrc&quot; src=&quot;VerificationCode.php&quot; alt=&quot;&quot;&gt;</span><br><span class="line">    &lt;a href=&quot;javascript:void(0);&quot; onclick=&quot;getCode()&quot;&gt;看不清&lt;/a&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    验证码：&lt;input name=&quot;code&quot; id=&quot;code&quot; onkeyup=&quot;checkCode()&quot;&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;div id=&quot;codeSpan&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;button type=&quot;button&quot; onclick=&quot;checkForm()&quot;&gt;提交&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">    //验证用户密码</span><br><span class="line">    function checkForm() &#123;</span><br><span class="line">        //判断用户名密码是否为空 判断是否符合验证</span><br><span class="line">        var username=document.querySelector(&quot;#username&quot;);</span><br><span class="line">        var password=document.querySelector(&quot;#password&quot;);</span><br><span class="line">        var form=document.querySelector(&quot;form&quot;);</span><br><span class="line">        if(username.value!==&quot;&quot;&amp;&amp;password.value!==&quot;&quot;)&#123;</span><br><span class="line">            form.submit();</span><br><span class="line">            return true;</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            alert(&quot;用户名为空&quot;);</span><br><span class="line">            return false</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //切换验证码</span><br><span class="line">    function getCode() &#123;</span><br><span class="line">        imgSrc=document.getElementById(&quot;ImgSrc&quot;);</span><br><span class="line">        imgSrc.src=&quot;VerificationCode.php&quot;;</span><br><span class="line">        var codeSpan=document.getElementById(&quot;codeSpan&quot;);</span><br><span class="line">        var code=document.getElementById(&quot;code&quot;);</span><br><span class="line">        code.value=&apos;&apos;;</span><br><span class="line">        codeSpan.innerHTML=&apos;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    //验证验证码</span><br><span class="line">    function checkCode() &#123;</span><br><span class="line">        var code=document.querySelector(&quot;#code&quot;);</span><br><span class="line">        var xmlhttp;</span><br><span class="line">        if (window.XMLHttpRequest)&#123;</span><br><span class="line">            xmlhttp=new XMLHttpRequest();</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            xmlhttp=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        xmlhttp.onreadystatechange=function () &#123;</span><br><span class="line">            if (xmlhttp.readyState==4&amp;&amp;xmlhttp.status==200)&#123;</span><br><span class="line">                var codeSpan=document.querySelector(&quot;#codeSpan&quot;);</span><br><span class="line">                    codeSpan.innerHTML = xmlhttp.responseText;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        xmlhttp.open(&quot;POST&quot;,&quot;action.php&quot;,true);</span><br><span class="line">        // xmlhttp.setRequestHeader(&quot;Content-type&quot;,&quot;appliction/x-www-form-urlencoded&quot;);</span><br><span class="line">        xmlhttp.setRequestHeader(&quot;Content-type&quot;,&quot;application/x-www-form-urlencoded&quot;);</span><br><span class="line">        xmlhttp.send(&quot;code=&quot;+code.value);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>最后输出的是：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p0bnwspy9.bkt.clouddn.com/phpGD3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>输出后如图：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p0bnwspy9.bkt.clouddn.com/phpGD4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><h4 id="封装验证码"><a href="#封装验证码" class="headerlink" title="封装验证码"></a>封装验证码</h4><p>把自己的写的一个验证码封装起来，下次方便重复的利用，也顺便复习一下面向对象的思维<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">header(&quot;Content-Type: text/html;charset=utf-8&quot;);</span><br><span class="line">class VerificarionCode&#123;</span><br><span class="line">    public $width;</span><br><span class="line">    public $height;</span><br><span class="line">    public $image;</span><br><span class="line">    function __construct($widths,$heights)</span><br><span class="line">    &#123;</span><br><span class="line">        //新建画布</span><br><span class="line">        $this-&gt;image=imagecreatetruecolor($widths,$heights);</span><br><span class="line">    &#125;</span><br><span class="line">    function imageColor($widths,$heights,$red,$green,$blue)&#123;</span><br><span class="line">        //新建矩形白色</span><br><span class="line">        $color=imagecolorallocate($this-&gt;image,$red,$green,$blue);</span><br><span class="line">        //填充一下</span><br><span class="line">        imagefilledrectangle($this-&gt;image,0,0,$widths,$heights,$color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function getRandColor($image)&#123;</span><br><span class="line">    //随机颜色</span><br><span class="line">        return imagecolorallocate($image,mt_rand(0,255),mt_rand(0,255),mt_rand(0,255));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function str($widths,$heights,$lengths)&#123;</span><br><span class="line">        //快速创建字符串 $string=&apos;asadf132&apos; array_merge 合并成一个数组 join字符串链接数组中的值  赋给string</span><br><span class="line">        $string=join(&apos;&apos;,array_merge(range(0,9),range(&apos;a&apos;,&apos;z&apos;),range(&apos;A&apos;,&apos;Z&apos;)));</span><br><span class="line">    //echo $string;</span><br><span class="line">    //得到字体宽度</span><br><span class="line">        $textWidth=imagefontwidth(28);</span><br><span class="line">        //得到字体高度</span><br><span class="line">        $textHeight=imagefontheight(28);</span><br><span class="line">        $length=$lengths;</span><br><span class="line">        $strZ=&apos;&apos;;</span><br><span class="line">        for($i=0;$i&lt;$length;$i++)&#123;</span><br><span class="line">            //随机每一位颜色</span><br><span class="line">        //    $randColor=imagecolorallocate($image,mt_rand(0,255),mt_rand(0,255),mt_rand(0,255));</span><br><span class="line">            $randColor=imagecolorallocate($this-&gt;image,mt_rand(0,255),mt_rand(0,255),mt_rand(0,255));</span><br><span class="line">            $size=mt_rand(19,22);</span><br><span class="line">            $angle=mt_rand(-15,15);</span><br><span class="line">        //    $x=20+40*$i;</span><br><span class="line">        //    $y=30;</span><br><span class="line">            $x=($widths/$length)*$i+$textWidth;</span><br><span class="line">            $y=mt_rand($heights/2,$heights-$textHeight);</span><br><span class="line">            $fontFile=&apos;font/FZLTCXHJW.TTF&apos;;</span><br><span class="line">            //打乱string这个字符串 然后随机取第一个字符串[0]</span><br><span class="line">            $text=str_shuffle($string)[0];</span><br><span class="line">            $strZ=$strZ.$text;</span><br><span class="line">            imagettftext($this-&gt;image,$size,$angle,$x,$y,$randColor,$fontFile,$text);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    function Etpixel($widths,$heights,$EtpNum)&#123;</span><br><span class="line">        //添加点，像素做干扰元素</span><br><span class="line">        for($i=1;$i&lt;=$EtpNum;$i++)&#123;</span><br><span class="line">            //绘制像素</span><br><span class="line">            $randColor=imagecolorallocate($this-&gt;image,mt_rand(0,255),mt_rand(0,255),mt_rand(0,255));</span><br><span class="line">            imagesetpixel($this-&gt;image,mt_rand(0,$widths),mt_rand(0,$heights),$randColor);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    function line($widths,$heights,$LineNum)&#123;</span><br><span class="line">        //添加线段干扰</span><br><span class="line">        for($i=1;$i&lt;=$LineNum;$i++)&#123;</span><br><span class="line">            //绘制线段</span><br><span class="line">            imageline($this-&gt;image,mt_rand(0,$widths),mt_rand(0,$heights),mt_rand(0,$widths),mt_rand(0,$heights), $randColor=imagecolorallocate($this-&gt;image,mt_rand(0,255),mt_rand(0,255),mt_rand(0,255)));</span><br><span class="line">//                     起始位置          结束位置</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    function imagepng()&#123;</span><br><span class="line">        //告诉浏览器以图像形式显示png</span><br><span class="line">        header(&apos;content-type:image/png&apos;);</span><br><span class="line">        //输出图像</span><br><span class="line">        imagepng($this-&gt;image);</span><br><span class="line">        //销毁资源</span><br><span class="line">        imagedestroy($this-&gt;image);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$demo1 =new VerificarionCode(180,60);</span><br><span class="line">//画布</span><br><span class="line">$demo1-&gt;imageColor(180,60,255,255,255);</span><br><span class="line">//图像的数字</span><br><span class="line">$demo1-&gt;str(180,60,4);</span><br><span class="line">//干扰点</span><br><span class="line">$demo1-&gt;Etpixel(180,60,60);</span><br><span class="line">//干扰线段</span><br><span class="line">$demo1-&gt;line(180,60,3);</span><br><span class="line">//png输出</span><br><span class="line">$demo1-&gt;imagepng();</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;php做的验证码二&quot;&gt;&lt;a href=&quot;#php做的验证码二&quot; class=&quot;headerlink&quot; title=&quot;php做的验证码二&quot;&gt;&lt;/a&gt;php做的验证码二&lt;/h3&gt;&lt;h4 id=&quot;把验证码添加到登录页面中，&quot;&gt;&lt;a href=&quot;#把验证码添加到登录页面中
      
    
    </summary>
    
    
      <category term="php" scheme="http://www.zhangningle.top/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>phpGD验证码一</title>
    <link href="http://www.zhangningle.top/2018/01/09/phpGD%E9%AA%8C%E8%AF%81%E7%A0%81%E4%B8%80/"/>
    <id>http://www.zhangningle.top/2018/01/09/phpGD验证码一/</id>
    <published>2018-01-09T06:32:07.000Z</published>
    <updated>2018-06-10T08:40:38.480Z</updated>
    
    <content type="html"><![CDATA[<h3 id="php做的验证码"><a href="#php做的验证码" class="headerlink" title="php做的验证码"></a>php做的验证码</h3><h4 id="php的GD函数"><a href="#php的GD函数" class="headerlink" title="php的GD函数"></a>php的GD函数</h4><p>php的GD函数可以使文字字符串转换成图片输出在网页上，<br>话不多说直接放码，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$width=300;</span><br><span class="line">$height=80;</span><br><span class="line">$images=imagecreatetruecolor($width,$height);</span><br><span class="line">//创建一个画布</span><br><span class="line">$red=imagecolorallocate($images,255,0,0);</span><br><span class="line">$blue=imagecolorallocate($images,0,0,255);</span><br><span class="line">$white=imagecolorallocate($images,255,255,255);</span><br><span class="line">//创建颜色</span><br><span class="line">imagestring($images,5,70,30,&quot;hello world&quot;,$red);</span><br><span class="line">//绘制字符</span><br><span class="line">header(&quot;content-type:image/jpeg&quot;);</span><br><span class="line">//告诉浏览器怎么输出</span><br><span class="line">imagejpeg($images);</span><br><span class="line">//保存图像</span><br><span class="line">imagejpeg($images,&quot;images/1.jpg&quot;);</span><br><span class="line">//输出图像</span><br><span class="line">imagedestroy($images);</span><br><span class="line">//销毁资源</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>最后输出的是：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p0bnwspy9.bkt.clouddn.com/phpDG1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><h4 id="为验证码增加识别难度（干扰元素）"><a href="#为验证码增加识别难度（干扰元素）" class="headerlink" title="为验证码增加识别难度（干扰元素）"></a>为验证码增加识别难度（干扰元素）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"> * 制作6位的数字+字母的验证码</span><br><span class="line"> * */</span><br><span class="line">//创建宽高</span><br><span class="line">$width=200;</span><br><span class="line">$height=40;</span><br><span class="line">//新建画布</span><br><span class="line">$image=imagecreatetruecolor($width,$height);</span><br><span class="line">//新建矩形白色</span><br><span class="line">$white=imagecolorallocate($image,255,255,255);</span><br><span class="line">//填充一下</span><br><span class="line">imagefilledrectangle($image,0,0,$width,$height,$white);</span><br><span class="line">//封装颜色</span><br><span class="line">function getRandColor($image)&#123;</span><br><span class="line">//随机颜色</span><br><span class="line">    return imagecolorallocate($image,mt_rand(0,255),mt_rand(0,255),mt_rand(0,255));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//快速创建字符串 $string=&apos;asadf132&apos; array_merge 合并成一个数组 join字符串链接数组中的值  赋给string</span><br><span class="line">$string=join(&apos;&apos;,array_merge(range(0,9),range(&apos;a&apos;,&apos;z&apos;),range(&apos;A&apos;,&apos;Z&apos;)));</span><br><span class="line">//echo $string;</span><br><span class="line">//得到字体宽度</span><br><span class="line">$textWidth=imagefontwidth(28);</span><br><span class="line">//得到字体高度</span><br><span class="line">$textHeight=imagefontheight(28);</span><br><span class="line">$length=4;</span><br><span class="line">$strZ=&apos;&apos;;</span><br><span class="line">for($i=0;$i&lt;$length;$i++)&#123;</span><br><span class="line">    //随机每一位颜色</span><br><span class="line">//    $randColor=imagecolorallocate($image,mt_rand(0,255),mt_rand(0,255),mt_rand(0,255));</span><br><span class="line">    $randColor=getRandColor($image);</span><br><span class="line">    $size=mt_rand(15,22);</span><br><span class="line">    $angle=mt_rand(-15,15);</span><br><span class="line">//    $x=20+40*$i;</span><br><span class="line">//    $y=30;</span><br><span class="line">    $x=($width/$length)*$i+$textWidth;</span><br><span class="line">    $y=mt_rand($height/2,$height-$textHeight);</span><br><span class="line">    $fontFile=&apos;font/FZLTCXHJW.TTF&apos;;</span><br><span class="line">    //打乱string这个字符串 然后随机取第一个字符串[0]</span><br><span class="line">    $text=str_shuffle($string)[0];</span><br><span class="line">    $strZ=$strZ.$text;</span><br><span class="line">    imagettftext($image,$size,$angle,$x,$y,$randColor,$fontFile,$text);</span><br><span class="line">&#125;</span><br><span class="line">//</span><br><span class="line">session_start();</span><br><span class="line">$_SESSION[&quot;code&quot;]=$strZ;</span><br><span class="line">//添加干扰元素</span><br><span class="line">//添加点，像素做干扰元素</span><br><span class="line">for($i=1;$i&lt;=50;$i++)&#123;</span><br><span class="line">    //绘制像素</span><br><span class="line">    imagesetpixel($image,mt_rand(0,$width),mt_rand(0,$height),getRandColor($image));</span><br><span class="line">&#125;</span><br><span class="line">//添加线段干扰</span><br><span class="line">for($i=1;$i&lt;=2;$i++)&#123;</span><br><span class="line">    //绘制线段</span><br><span class="line">    imageline($image,mt_rand(0,$width),mt_rand(0,$height),mt_rand(0,$width),mt_rand(0,$height),getRandColor($image));</span><br><span class="line">//                     起始位置          结束位置</span><br><span class="line">&#125;</span><br><span class="line">//绘制圆弧干扰</span><br><span class="line">for($i=1;$i&lt;=1;$i++)&#123;</span><br><span class="line">    //绘制圆弧</span><br><span class="line">    imagearc($image,mt_rand(0,$width),mt_rand(0,$height),mt_rand(0,$width/2),mt_rand(0,$height/2),mt_rand(0,360),mt_rand(0,360),getRandColor($image));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//告诉浏览器以图像形式显示</span><br><span class="line">header(&apos;content-type:image/png&apos;);</span><br><span class="line">//输出图像</span><br><span class="line">imagepng($image);</span><br><span class="line">//销毁资源</span><br><span class="line">imagedestroy($image);</span><br></pre></td></tr></table></figure><p>输出后如图：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p0bnwspy9.bkt.clouddn.com/phpDG2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><ul><li>绘制像素<ul><li>imagesetpixel();</li><li>绘制线段</li><li>imageline()</li><li>绘制圆弧</li><li>imagearc()</li><li>取得字体宽度</li><li>imagefontwidth()</li><li>取得字体高度</li><li>imagefontheight()</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;php做的验证码&quot;&gt;&lt;a href=&quot;#php做的验证码&quot; class=&quot;headerlink&quot; title=&quot;php做的验证码&quot;&gt;&lt;/a&gt;php做的验证码&lt;/h3&gt;&lt;h4 id=&quot;php的GD函数&quot;&gt;&lt;a href=&quot;#php的GD函数&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="php" scheme="http://www.zhangningle.top/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>添加账户SSH （免密码上传）</title>
    <link href="http://www.zhangningle.top/2018/01/06/%E8%AE%BE%E7%BD%AE%E8%B4%A6%E6%88%B7SSH/"/>
    <id>http://www.zhangningle.top/2018/01/06/设置账户SSH/</id>
    <published>2018-01-06T02:09:45.000Z</published>
    <updated>2018-06-10T08:43:06.009Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h2><p>以前没有添加SSH时，每次上传博文都要输入一次账户和密码，异常麻烦，这次我吧博客部署了三个git托管的主流平台（Guthub/Coding/码云）那可是要输三次账户名和密码的，为了方便节省时间就在网上找了找关于ssh教程，<br>奈何都不是很全面，遇见不少坑，今天自己爬完坑自己记录一下，下次万一用到还可以翻出来看看，</p><ul><li><a href="https://www.2cto.com/kf/201603/496122.html" target="_blank" rel="noopener">参考</a></li><li>配置SHH<br>配置shh key是让本地git项目与远程的github建立联系</li></ul><ul><li>检查是否已经有SSH Key，打开Git Bash，输入<br><code>&lt;code class=&quot;hljs bash&quot;&gt;cd ~/.ssh&lt;/code&gt;</code><br>如果没有.ssh这个目录，则生成一个新的SSH，输入<br><code>&lt;code class=&quot;hljs lasso&quot;&gt;ssh-keygen -t rsa -C &quot;your e-mail&quot;&lt;/code&gt;</code><br>注意1: 此处的邮箱地址，你可以输入自己的邮箱地址；注意2: 此处的「-C」的是大写的「C」</li><li>接下来几步都直接按回车键,然后系统会要你输入密码<br><code>&lt;code class=&quot;hljs ruby&quot;&gt;Enter passphrase (empty for no passphrase):&lt;输入加密串&gt;</code><br><code>Enter same passphrase again:&lt;再次输入加密串&gt;&lt;/code&gt;</code><br>这个密码会在你提交项目时使用，如果为空的话提交项目时则不用输入。这个设置是防止别人往你的项目里提交内容。<br>注意：输入密码的时候没有*字样的，你直接输入就可以了。</li><li>最后看到这样的界面，就成功设置ssh key了<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.2cto.com/uploadfile/Collfiles/20160329/20160329134812521.jpg" alt="kl" title="">                </div>                <div class="image-caption">kl</div>            </figure><h3 id="添加-SSH-Key-到-GitHub和Coding"><a href="#添加-SSH-Key-到-GitHub和Coding" class="headerlink" title="添加 SSH Key 到 GitHub和Coding"></a>添加 SSH Key 到 GitHub和Coding</h3>打开Git Bash，然后输入<br><code>cd ~/.ssh</code><br>进入到.shh文件夹中再输入ls，查看是否有id_rsa.pub文件<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.2cto.com/uploadfile/Collfiles/20160329/20160329134812522.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>输入cat命令，打开id_rsa.pub文件<br><code>cat id_rsa.pub</code><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.2cto.com/uploadfile/Collfiles/20160329/20160329134812523.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li><li>再鼠标全选中右击复制</li><li>再配置到GitHub和Coding的SSH中<br>进入Github官网，点击+旁边的头像，再按settings进入设置<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.2cto.com/uploadfile/Collfiles/20160329/20160329134812524.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>在点击New SSH key创建<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.2cto.com/uploadfile/Collfiles/20160329/20160329134812525.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>title输入邮箱，key里面粘贴刚才右击复制的内容,再点Add SSH key<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.2cto.com/uploadfile/Collfiles/20160329/20160329134812526.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;SSH&quot;&gt;&lt;a href=&quot;#SSH&quot; class=&quot;headerlink&quot; title=&quot;SSH&quot;&gt;&lt;/a&gt;SSH&lt;/h2&gt;&lt;p&gt;以前没有添加SSH时，每次上传博文都要输入一次账户和密码，异常麻烦，这次我吧博客部署了三个git托管的主流平台（Guthub/Cod
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://www.zhangningle.top/tags/hexo/"/>
    
      <category term="github" scheme="http://www.zhangningle.top/tags/github/"/>
    
      <category term="coding" scheme="http://www.zhangningle.top/tags/coding/"/>
    
      <category term="码云" scheme="http://www.zhangningle.top/tags/%E7%A0%81%E4%BA%91/"/>
    
  </entry>
  
</feed>
