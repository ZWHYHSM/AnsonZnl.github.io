{"meta":{"title":"张宁乐的博客","subtitle":"种一棵树最好的时间在十年前，其次是现在。","description":"张宁乐,博客","author":"张宁乐","url":"http://www.zhangningle.top"},"pages":[{"title":"","date":"2018-06-10T04:05:06.957Z","updated":"2017-12-03T07:07:29.831Z","comments":true,"path":"404.html","permalink":"http://www.zhangningle.top/404.html","excerpt":"","text":""},{"title":"关于","date":"2017-12-03T01:07:23.000Z","updated":"2018-05-27T13:45:53.676Z","comments":true,"path":"about/index.html","permalink":"http://www.zhangningle.top/about/index.html","excerpt":"","text":"关于张宁乐嘿…你好~欢迎来到张宁乐的博客！点击我的博客进入我的博客首页点击我的作品进入我的作品展示点击下载张宁乐的简历即可下载我的简历96年的水瓶座，web前端开发人员， 现谋求一份web前端工作 （北京）技能：1.熟练使用Photoshop（切图）、Chrome（调试）、Sublime、WebStorm、PhpStorm。2.精通DIV+CSS网页布局与样式、熟悉HTML5、CSS3。3.熟悉原生JavaScript、熟练使用jQuery、Bootstrap、Swiper、Ajax、了解zepto.js4.熟悉webpack、gulp/sass、Vue.js，熟练使用Git管理代码。5.熟悉PHP后台、Mysql数据库、熟练使用织梦、WordPress等cms系统。6.熟悉移动端开发，有微信公众号、微信小程序开发经验。所对应的技术在我的 Github 上有项目展示， Github：https://github.com/ansonznl点击我的作品进入我的作品展示以下是能联系到我的各种方法： 微信扫一扫加我微信谈谈？ 手机号：13722493371 微信号：ningluo02 邮件：zhangningle2017@163.com Github：https://github.com/AnsonZnl Coding: https://coding.net/AnsonZnl 码云: https://gitee.com/zhangningle QQ: 1160030724 关于博客本博客仅用来记录我学习路上的点点滴滴博客是在2017某个夜晚，那一夜我在做项目遇到一个bug,可这个bug我以前遇到过，也解决过，但却对因为上一次的解决方法没有过多的印象，所以找了很久才找到解决方法，可能大家开发过程中也会遇到这样的情况，就是明明以前解决过某样的问题，而解决后却把解决问题的方法抛之脑后，过一阵却又出现了与上一次同样的问题，而我这个博客的主要功能就是对我自己今后的知识的进行管理。每解决一个问题或者学习一些新的知识，我都会再此记录，愿与大家共进步！点击我的博客进入我的博客首页点击我的作品进入我的作品展示点击张宁乐的Github进入我的Github主页"},{"title":"","date":"2018-06-10T04:05:06.973Z","updated":"2017-12-09T13:38:17.735Z","comments":false,"path":"tags/index.html","permalink":"http://www.zhangningle.top/tags/index.html","excerpt":"","text":""},{"title":"作品","date":"2017-12-05T10:47:34.000Z","updated":"2018-04-11T08:18:41.230Z","comments":true,"path":"works/index.html","permalink":"http://www.zhangningle.top/works/index.html","excerpt":"","text":"p{ width:50%;} 项目经历 H5简历模板（移动端） 2018.03 独立制作完成H5简历模板点击–&gt;H5简历演示：http://zhangningle.gitee.io/resume我懂代码–&gt;点击查看源码：源码 visibook（响应式） 2018.03 独立制作完成visibook点击–&gt;visibook演示：http://zhangningle.gitee.io/bt_visibook我懂代码–&gt;点击查看源码：源码 马克森官网（企业、响应式） 2018.03 独立制作完成马克森官网点击–&gt;马克森官网演示：http://zhangningle.gitee.io/makesen/我懂代码–&gt;点击查看源码：源码 火锅鸡网（仅移动端） 2018.01 - 2018.03 独立制作完成火锅鸡网点击–&gt;大连罗森演示：http://zhangningle.gitee.io/m.huoguoji.net/我懂代码–&gt;点击查看源码：源码 大连罗森（仅移动端） 2018.01 - 2018.03 独立制作完成大连罗森点击–&gt;大连罗森演示：http://zhangningle.gitee.io/m.luosen/我懂代码–&gt;点击查看源码：源码 起点中文网 （仅移动端） 2018.01 - 2018.02 独立制作完成起点中文网点击–&gt;起点中文网演示：https://ansonznl.coding.me/QiDian/我懂代码–&gt;点击查看源码：源码 邀请函 （仅移动端） 2017.12 - 2018.01 独立制作完成泊头职业学院双选会邀请函点击–&gt;邀请函在线演示：https://ansonznl.github.io/Swiper-demo/swiper-dome02/我懂代码–&gt;点击查看源码：源码 靓装网购官网（pc端）2017.12 - 至今 靓装网购官网 独立开发靓装网购是一个美妆商城类网站，主要产品有美妆、护肤、面膜等产品，网站主题色调是以女性爱的粉红、淡黄等暖色系为网站主色调。首页已经完成，目前正在开发副页中。主要使用的技术有：HTML/CSS/JavaScript/gulp点击–&gt;靓装网购在线演示：http://ansonznl.coding.me/LiangZhuangWangGou/我懂代码–&gt;点击查看源码：源码 法标珠光卫浴（响应式） 2017.04 - 2017.05 法标珠光卫浴 独立开发点击–&gt;法标珠光卫浴在线演示：http://zhangningle.gitee.io/fabiaozhuguangweiyv/我懂代码–&gt;点击查看源码：源码 承德选房网（响应式） 2017.04 - 2017.05 承德选房网 团队合作完成房产类网站，我负责网站[租房]版块的设计与制作，先后总结多家房产类网站的[租房]版块的设计并制作的，功能信息齐全增加用户体验，使用Bootstrap兼容移动端、压缩CSS，增加网站访问速度。使用技术有：HTML/CSS/JavaScript/jQuery/Bootstrap/gulp等前端技术和工具，并且可以相应移动端设备，使用Git管理代码。点击–&gt;[承德选房网[租房]在线演示：http://zhangningle.gitee.io/chengdexvanfangwang/%E7%A7%9F%E6%88%BF/zufang.html我懂代码–&gt;点击查看源码：源码 李维斯官网 （pc端） 2016.11 - 2016.12 李维斯官网 独立完成电商类网站，模仿李维斯官网制作，增加了商品模块商品介绍的交互效果，提高了用户体验。点击–&gt;[李维斯官网在线演示：http://zhangningle.gitee.io/levi/我懂代码–&gt;点击查看源码：源码 Dave的博客 （兼容移动端）2017.03 Dave的博客 独立制作完成Dave的博客，一个技术人的博客，我是用css提供的媒体查询的方法来适应的手机端点击–&gt;Dave的博客在线演示:http://zhangningle.gitee.io/dave/我懂代码–&gt;点击查看源码：源码 点击张宁乐的博客进入我的博客首页点击张宁乐的关于进入我的关于点击张宁乐的Github进入Github"},{"title":"作品","date":"2017-12-20T00:40:45.000Z","updated":"2017-12-20T00:52:56.144Z","comments":true,"path":"works/index2.html","permalink":"http://www.zhangningle.top/works/index2.html","excerpt":"","text":""}],"posts":[{"title":"起点中文网-移动端 遇到的bug","slug":"起点中文网-移动端-做时遇到的问题","date":"2018-06-10T04:19:12.966Z","updated":"2018-01-20T11:58:47.049Z","comments":true,"path":"2018/06/10/起点中文网-移动端-做时遇到的问题/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/起点中文网-移动端-做时遇到的问题/","excerpt":"","text":"起点中文网_移动端 做时遇到的bug一、移动端轮播1.touchstart 手指触摸 == mousedown2.touchend 手指抬起 == mouseup3.touchmove 手指抬起 == mousmovetouch事件 在 chrome的模拟器下，部分版本 通过on的方式来添加事件无效所以在移动端一般都使用如下方式addEventListener(“事件名”,函数,冒泡或捕获);12345678910111213document.addEventListener(&apos;touchstart&apos;,function(ev)&#123; ev.preventDefault();&#125;);var box=document.getElementById(&quot;box&quot;);box.addEventListener(&apos;touchstart&apos;,function()&#123; this.innerHTML=&apos;手指按下了&apos;;&#125;);box.addEventListener(&apos;touchmove&apos;,function()&#123; this.innerHTML=&apos;手指移动了&apos;;&#125;);box.addEventListener(&apos;touchend&apos;,function()&#123; this.innerHTML=&apos;手指离开了&apos;;&#125;); 参考前端网移动端事件demo http://ansonznl.coding.me/Mobile-demo/%E7%A7%BB%E5%8A%A8%E4%BA%8B%E4%BB%B601.html 二、滚动条scrollTop为滚动条在Y轴上的滚动距离。clientHeight为内容可视区域的高度。scrollHeight为内容可视区域的高度加上溢出（滚动）的距离。从这个三个属性的介绍就可以看出来，滚动条到底部的条件即为scrollTop + clientHeight == scrollHeight。废话不多少说，赶紧上代码（兼容不同的浏览器）。123456789101112131415161718192021222324252627282930313233343536373839//滚动条在Y轴上的滚动距离function getScrollTop()&#123; var scrollTop = 0, bodyScrollTop = 0, documentScrollTop = 0; if(document.body)&#123; bodyScrollTop = document.body.scrollTop; &#125; if(document.documentElement)&#123; documentScrollTop = document.documentElement.scrollTop; &#125; scrollTop = (bodyScrollTop - documentScrollTop &gt; 0) ? bodyScrollTop : documentScrollTop; return scrollTop;&#125;//文档的总高度function getScrollHeight()&#123; var scrollHeight = 0, bodyScrollHeight = 0, documentScrollHeight = 0; if(document.body)&#123; bodyScrollHeight = document.body.scrollHeight; &#125; if(document.documentElement)&#123; documentScrollHeight = document.documentElement.scrollHeight; &#125; scrollHeight = (bodyScrollHeight - documentScrollHeight &gt; 0) ? bodyScrollHeight : documentScrollHeight; return scrollHeight;&#125;//浏览器视口的高度function getWindowHeight()&#123; var windowHeight = 0; if(document.compatMode == &quot;CSS1Compat&quot;)&#123; windowHeight = document.documentElement.clientHeight; &#125;else&#123; windowHeight = document.body.clientHeight; &#125; return windowHeight;&#125;window.onscroll = function()&#123; if(getScrollTop() + getWindowHeight() == getScrollHeight())&#123; alert(&quot;you are in the bottom!&quot;); &#125;&#125;; 三、修改input 中placeholder字体颜色以前都不知道能修改，百度一下才知道是可以的123456789101112::-webkit-input-placeholder &#123; /* WebKit browsers */ color:#999; &#125; :-moz-placeholder &#123; /* Mozilla Firefox 4 to 18 */ color:#999; &#125; ::-moz-placeholder &#123; /* Mozilla Firefox 19+ */ color:#999; &#125; :-ms-input-placeholder &#123; /* Internet Explorer 10+ */ color:#999; &#125; 四、清除a、button的默认跳转比如说登录时，账号和密码不填时不能点登录，节省js判断，或者有时候不想让a标签跳转可以用到1234&lt;button disabled=&quot;disabled&quot; id=&quot;btn&quot;&gt;登录&lt;/button&gt;/* 添加disabled属性后不会提交数据 */&lt;a href=&quot;javascript:&quot; class=&quot;borlenone phb_nav&quot;&gt;风云榜&lt;/a&gt;/* 在a的href添加javascript:;属性后不会跳转 */ 做完了起点中文网的移动端后对移动网页的制作有加深一些，对于js的运用也熟练了许多，自己也封装了一个选项卡方法，，对于html、css的一些属性更了解了，总而言之收获恒很大。现在移动端浏览器兼容还是有点问题。加油，最后放上起点中文网","categories":[],"tags":[{"name":"移动端","slug":"移动端","permalink":"http://www.zhangningle.top/tags/移动端/"},{"name":"javascript","slug":"javascript","permalink":"http://www.zhangningle.top/tags/javascript/"},{"name":"起点中文网","slug":"起点中文网","permalink":"http://www.zhangningle.top/tags/起点中文网/"},{"name":"bug","slug":"bug","permalink":"http://www.zhangningle.top/tags/bug/"}]},{"title":"绑定自己的博客域名","slug":"绑定自己的域名","date":"2018-06-10T04:19:12.966Z","updated":"2018-01-06T09:08:19.917Z","comments":true,"path":"2018/06/10/绑定自己的域名/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/绑定自己的域名/","excerpt":"","text":"绑定自己的博客域名www.zhangningle.top阿里云万网购买的2云一年哈哈。。。","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://www.zhangningle.top/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://www.zhangningle.top/tags/github/"},{"name":"coding","slug":"coding","permalink":"http://www.zhangningle.top/tags/coding/"},{"name":"码云","slug":"码云","permalink":"http://www.zhangningle.top/tags/码云/"}]},{"title":"添加账户SSH （免密码上传）","slug":"设置账户SSH","date":"2018-06-10T04:19:12.966Z","updated":"2018-01-06T02:23:11.481Z","comments":true,"path":"2018/06/10/设置账户SSH/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/设置账户SSH/","excerpt":"","text":"SSH以前没有添加SSH时，每次上传博文都要输入一次账户和密码，异常麻烦，这次我吧博客部署了三个git托管的主流平台（Guthub/Coding/码云）那可是要输三次账户名和密码的，为了方便节省时间就在网上找了找关于ssh教程，奈何都不是很全面，遇见不少坑，今天自己爬完坑自己记录一下，下次万一用到还可以翻出来看看， 参考 配置SHH配置shh key是让本地git项目与远程的github建立联系 检查是否已经有SSH Key，打开Git Bash，输入&lt;code class=&quot;hljs bash&quot;&gt;cd ~/.ssh&lt;/code&gt;如果没有.ssh这个目录，则生成一个新的SSH，输入&lt;code class=&quot;hljs lasso&quot;&gt;ssh-keygen -t rsa -C &quot;your e-mail&quot;&lt;/code&gt;注意1: 此处的邮箱地址，你可以输入自己的邮箱地址；注意2: 此处的「-C」的是大写的「C」 接下来几步都直接按回车键,然后系统会要你输入密码&lt;code class=&quot;hljs ruby&quot;&gt;Enter passphrase (empty for no passphrase):&lt;输入加密串&gt;Enter same passphrase again:&lt;再次输入加密串&gt;&lt;/code&gt;这个密码会在你提交项目时使用，如果为空的话提交项目时则不用输入。这个设置是防止别人往你的项目里提交内容。注意：输入密码的时候没有*字样的，你直接输入就可以了。 最后看到这样的界面，就成功设置ssh key了 kl 添加 SSH Key 到 GitHub和Coding打开Git Bash，然后输入cd ~/.ssh进入到.shh文件夹中再输入ls，查看是否有id_rsa.pub文件 输入cat命令，打开id_rsa.pub文件cat id_rsa.pub 再鼠标全选中右击复制 再配置到GitHub和Coding的SSH中进入Github官网，点击+旁边的头像，再按settings进入设置 在点击New SSH key创建 title输入邮箱，key里面粘贴刚才右击复制的内容,再点Add SSH key","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://www.zhangningle.top/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://www.zhangningle.top/tags/github/"},{"name":"coding","slug":"coding","permalink":"http://www.zhangningle.top/tags/coding/"},{"name":"码云","slug":"码云","permalink":"http://www.zhangningle.top/tags/码云/"}]},{"title":"织梦cms","slug":"织梦cms","date":"2018-06-10T04:19:12.951Z","updated":"2018-03-20T12:26:54.368Z","comments":true,"path":"2018/06/10/织梦cms/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/织梦cms/","excerpt":"","text":"织梦cms这些天学习了织梦cms内容管理系统， 织梦内容管理系统(DedeCms) 以简单、实用、开源而闻名，是国内最知名的PHP开源网站管理系统，也是使用用户最多的PHP类CMS系统，在经历多年的发展，目前的版本无论在功能，还是在易用性方面，都有了长足的发展和进步，DedeCms免费版的主要目标用户锁定在个人站长，功能更专注于个人网站或中小型门户的构建，当然也不乏有企业用户和学校等在使用该系统。 安装好phpstudy(phpStudy是一个PHP调试环境的程序集成包。该程序包集成最新的Apache+PHP+MySQL+phpMyAdmin+ZendOptimizer,一次性安装，无须配置即可使用，是非常方便、好用的PHP调试环境) 去织梦官网下载最新的织梦后台模板， 下完把梦后台放在phpstudy的后台的www目录下，并配置站点域名。打开运行 phpstudy下载：http://www.phpstudy.net/织梦cms下载：http://www.dedecms.com/products/dedecms/downloads/HostsEditor 编辑hosts文件（配置域名）：https://pan.baidu.com/s/1o79DCAu 简单熟悉织梦的后台操作后，开始自己学着做模板，首先先熟悉织梦的标签生成器的使用：学会后可以很方便的构造自己喜欢的网站 常用的的织梦标签有：都是常用的一些标签，大家可以用ctrl+F实现搜索。 网站名称：{dede:global.cfg_webname/} 网站根网址：{dede:global.cfg_basehost/} 网站根目录：{dede:global.cfg_cmsurl/} 网页主页链接：{dede:global.cfg_indexurl/} 网站描述：{dede:global.cfg_description/} 网站关键字：{dede:global.cfg_keywords/} 模板路径：{dede:global.cfg_templets_skin/} 调用页面：{dede:include filename=”head.htm”/} 网站编码：{dede:global.cfg_soft_lang/}调用时间：[field:pubdate function=MyDate(‘y-m-d’,@me)/] 调用缩略图：{dede:arclist row=10 orderby=pubdate type=’image.’ imgwidth=’定义图片宽度’ imgheight=’高度’}[field:image/]{/dede:arclist} 调用缩略图原图：[field:litpic runphp=’yes’]$youjoys = array(“-lp”, “_lit”);@me = str_replace ($youjoys, “”, @me);[/field:litpic] 调用单个栏目：12&#123;dede:type&#125;&lt;a href=&quot;[field:typelink /]&quot;&gt;[field:typename /]&lt;/a&gt; {/dede:type}文章标题：{dede:field.title/} 文章描述：{dede:field.description function=’html2text(@me)’/} 文章关键词：{dede:field.keywords/} 当前位置：{dede:field name=’position’/} 文章时间：{dede:field.pubdate function=”MyDate(‘Y-m-d H:i’,@me)”/} 文章来源：{dede:field.source/} 文章作者：{dede:field.writer/} 文章内容：{dede:field.body/} 上一篇：{dede:prenext get=’pre’/} 下一篇：{dede:prenext get=’next’/} 点击量：channel|频道标签： 标签名称：channel标记简介：织梦常用标记，通常用于网站顶部以获取站点栏目信息，方便网站会员分类浏览整站信息功能说明：用于获取栏目列表适用范围：全局使用 基本语法：123&#123;dede:channel type=&apos;top&apos; row=&apos;8&apos; currentstyle=&quot;&lt;li&gt;&lt;a href=&apos;~typelink~&apos; class=&apos;thisclass&apos;&gt;~typename~&lt;/a&gt; &lt;/li&gt;&quot;&#125; &lt;li&gt;&lt;a href=&apos;[field:typelink/]&apos;&gt;[field:typename/]&lt;/a&gt; &lt;/li&gt;&#123;/dede:channel&#125; 参数说明：typeid = ‘0’ 栏目IDreid = ‘0’ 上级栏目IDrow = ‘100’ 调用栏目数col = ‘1’ 分多少列显示（默认为单列）type = ‘son | sun’ son表示下级栏目,self表示同级栏目,top顶级栏目currentstyle = ‘’ 应用样式 底层模板字段：ID(同 id),typeid, typelink, typename, typeurl,typedir(仅表示栏目的网址) [field:id/][field:typeid/][field:typelink/] 调用栏目名称，点击直接跳转该栏目列表[field:typename/] 调用栏目名称，无链接[field:typeurl/][field:typedir/] 例：123&#123;dede:channel type=&apos;top&apos;&#125;&lt;a href=&apos;[field:typelink /]&apos;&gt;[field:typename/]&lt;/a&gt; &#123;/dede:channel&#125; 注：在没有指定typeid的情况下，type标记与模板的环境有关，如，模板生成到栏目一，那么type=’son’就表示栏目一的所有子类arclist|文档列表： 标签名称：arclist标记简介：织梦常用标记，也称为自由列表标记，其中imglist、imginfolist、specart、coolart、autolist都是由该标记所定义的不同属性延伸出来的别名标记。功能说明：获取指定文档列表适用范围：全局使用 基本语法：123&#123;dede:arclist flag=&apos;h&apos; typeid=&apos;&apos; row=&apos;&apos; col=&apos;&apos; titlelen=&apos;&apos; infolen=&apos;&apos; imgwidth=&apos;&apos; imgheight=&apos;&apos; listtype=&apos;&apos; orderby=&apos;&apos; keyword=&apos;&apos; limit=&apos;0,1&apos;&#125;&lt;a href=&apos;[field:arcurl/]&apos;&gt;[field:title/]&lt;/a&gt;&#123;/dede:arclist&#125; 参数说明：col=’’ 分多少列显示（默认为单列），5.3版中本属性可以通过多种方式进行多行显示如果col=’1’要多列显示的可用div+css实现以下为通过div+css实现多列的示例：123456&lt;style type=text/css&gt;div&#123;width:400px;float:left;&#125;&lt;/style&gt;&#123;dede:arclist row=&apos;10&apos; titlelen=&apos;24&apos; orderby=&apos;pubdate&apos; idlist=&apos;&apos; col=&apos;2&apos;&#125;?[field:textlink/]([field:pubdate function=MyDate(&apos;m-d&apos;,@me)/])&lt;br/&gt;&#123;/dede:arclist&#125; 当col&gt;1将使用原来的table多列方式显示row=’10’ 返回文档列表总数typeid=’’ 栏目ID,在列表模板和档案模板中一般不需要指定，在首页模板中允许用”,”分开表示多个栏目；getall=’1’ 在没有指定这属性的情况下,在栏目页、文章页模板,不会获取以”,”分开的多个栏目的下级子类titlelen = ‘30’ 标题长度 等同于titlelengthinfolen=’160’ 表示内容简介长度 等同于infolengthimgwidth=’120’ 缩略图宽度imgheight=’90’ 缩略图高度listtype=’all’ 栏目类型 image含有缩略图 commend推荐orderby=’sortrank’ 文档排序方式§ orderby=’hot’ 或 orderby=’click’ 表示按点击数排列§ orderby=’sortrank’ 或 orderby=’pubdate’ 按出版时间排列§ orderby=’near’§ orderby==’lastpost’ 按最后评论时间§ orderby==’scores’ 按得分排序§ orderby=’id’ 按文章ID排序§ orderby=’rand’ 随机获得指定条件的文档列表keyword=’’ 含有指定关键字的文档列表，多个关键字用”,”分innertext = ‘’ 单条记录样式aid=’’ 指定文档IDidlist =’’ 提取特定文档（文档ID）channelid 频道IDlimit=’起始ID,记录数’ （起始ID从0开始）表示限定的记录范围（如：limit=’1,2’ 表示从ID为1的记录开始，取2条记录）flag = ‘h’ 自定义属性值：头条[h]推荐[c]图片[p]幻灯[f]滚动[s]跳转[j]图文[a]加粗[b]noflag = ‘’ 同flag，但这里是表示不包含这些属性orderway=’desc’ 值为 desc 或 asc ，指定排序方式是降序还是顺向排序，默认为降序subday=’天数’ 表示在多少天以内的文档 用arclist调用于附加表字段的方法： 要获取附加表内容，必须符合两个条件1、指定 channelid 属性2、指定要获得的字段 addfields=’字段1,字段’如：{dede:arclist addfields=’filetype,language,softtype’ row=’8’ channelid=’3’}[field:textlink /] - [field:softtype /]{/dede:arclist} 底层模板字段：ID(同 id),typeid,sortrank,flag,ismake,channel,arcrank,click,money,title,shorttitle,color,writer,source,litpic(同picname),pubdate,senddate,mid, lastpost,scores,goodpost,badpost,notpost,description(同infos),filename, image, imglink, fulltitle, textlink, typelink,plusurl, memberurl, templeturl,stime(pubdate 的”0000-00-00”格式)其中：12345textlink = &lt;a href=&apos;arcurl&apos;&gt;title&lt;/a&gt;typelink = &lt;a href=&apos;typeurl&apos;&gt;typename&lt;/a&gt;imglink = &lt;a href=&apos;arcurl&apos;&gt;&lt;img src=&apos;picname&apos; border=&apos;0&apos; width=&apos;imgwidth&apos; height=&apos;imgheight&apos;&gt;&lt;/a&gt;image = &lt;img src=&apos;picname&apos; border=&apos;0&apos; width=&apos;imgwidth&apos; height=&apos;imgheight&apos; alt=’titile’&gt;字段调用方法：[field:varname/] 如：{dede:arclist infolen=’100’}[field:textlink/][field:infos/]{/dede:arclist}注：底层模板里的Field实现也是织梦标记的一种形式，因此支持使用PHP语法，Function扩展等功能。如： 给当天发布的内容加上 (new) 标志[field:senddate runphp=’yes’]$ntime = time();$oneday = 3600 * 24;if(($ntime - @me)&lt;$oneday) @me = “(new)“;else @me = “”;[/field:senddate]","categories":[],"tags":[{"name":"织梦cms","slug":"织梦cms","permalink":"http://www.zhangningle.top/tags/织梦cms/"},{"name":"cms","slug":"cms","permalink":"http://www.zhangningle.top/tags/cms/"}]},{"title":"移动端布局之rem","slug":"移动端布局之rem","date":"2018-06-10T04:19:12.951Z","updated":"2017-12-29T11:22:41.695Z","comments":true,"path":"2018/06/10/移动端布局之rem/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/移动端布局之rem/","excerpt":"","text":"移动端布局之rem","categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhangningle.top/tags/JavaScript/"},{"name":"CSS","slug":"CSS","permalink":"http://www.zhangningle.top/tags/CSS/"}]},{"title":"移动端-起点中文网","slug":"移动端-起点中文网","date":"2018-06-10T04:19:12.951Z","updated":"2018-01-17T11:36:41.501Z","comments":true,"path":"2018/06/10/移动端-起点中文网/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/移动端-起点中文网/","excerpt":"","text":"移动端-起点中文网利用百分比+rem布局做了起点中文网我也在学php+mysql ,希望可以将他完善到可以看小说的状态！PS：建议在手机端观看！","categories":[],"tags":[{"name":"移动端","slug":"移动端","permalink":"http://www.zhangningle.top/tags/移动端/"}]},{"title":"小程序学习记录一","slug":"火锅鸡","date":"2018-06-10T04:19:12.951Z","updated":"2018-03-07T13:54:59.277Z","comments":true,"path":"2018/06/10/火锅鸡/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/火锅鸡/","excerpt":"","text":"最近很热门的小程序，一直想学着做一个，刚好前天在segmentfault看到了用个人做个校园的小程序，我就想自己也组偶一个试试，说动就动， 第一步先去微信公众平台注册成为开发者，期间需要自己的身份证号什么的要注意，提前准备好， 注册完之后需要填写小程序的的名字和介绍说明， 接下来需要在下载微信小程序开发者工具下载安装“微信web开发者工具”，他可以编写小程序代码，也可以进行微信公众号的排版和发布，使用是非常方便的，里面的调试功能和Chrome浏览器基本一样，学习过程中也一边查看的是微信小程序官方文档，一边试着打打代码，只要有点html+css基础的都能很快的学习小程序，小程序的整体构架安装好开发工具后，输入小程序ID即自动新建一个小程序demo文件，它自动创建的小程序文件就类似一个模板一样，可以省去很多初始化的东西，直接上手代码，每个小程序文件的结构都是由两个主要部分构成：主体部分 + 各个页面。类似于许多框架，主体部分主要用于核心的配置，各个页面在独自配置逻辑和样式。1.1，主体部分主要由3个文件构成1）app.js：小程序逻辑，2）app.json ：小程序配置，比如导航、窗口、页面http请求跳转等3）app.wxss：公共样式配置 小程序的开发也是遵守了MVC结构进行构建的 MVC全名是Model View Controller，是模型(model)－视图(view)－控制器(controller)的缩写，一种软件设计典范，用一种业务逻辑、数据、界面显示分离的方法组织代码，将业务逻辑聚集到一个部件里面，在改进和个性化定制界面及用户交互的同时，不需要重新编写业务逻辑。MVC被独特的发展起来用于映射传统的输入、处理和输出功能在一个逻辑的图形化用户界面的结构中。 1.2，页面由4个文件构成1）js：页面逻辑，相当于控制层（C）；也包括部分的数据（M）2）wxml：页面结构展示，相当于视图层（V）3）wxss：页面样式表，纯前端，用于辅助wxml展示4）json：页面配置，配置一些页面展示的数据，充当部分的模型（M）简单理解为.js后缀的文件是脚本文件，页面的交互等代码在这里实现；.json后缀的文件是配置文件，主要是json数据格式存放，用于设置程序的配置效果；.wxss后缀的是样式表文件，类似于前端中的css,用于对界面进行美化；.wxml后缀的文件是页面结构文件，用于构建页面，在页面上增加控件。最后放上一张结构图：","categories":[],"tags":[{"name":"移动端","slug":"移动端","permalink":"http://www.zhangningle.top/tags/移动端/"},{"name":"小程序","slug":"小程序","permalink":"http://www.zhangningle.top/tags/小程序/"},{"name":"微信","slug":"微信","permalink":"http://www.zhangningle.top/tags/微信/"}]},{"title":"小程序学习记录二","slug":"小程序学习记录二","date":"2018-06-10T04:19:12.950Z","updated":"2018-04-06T12:23:16.762Z","comments":true,"path":"2018/06/10/小程序学习记录二/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/小程序学习记录二/","excerpt":"","text":"在写小程序的过程中会发现里面的有些使用和vue很相似，有相关基础上手并不是很难，难点主要在于js的逻辑交互， 小程序的启动微信客户端在打开小程序之前，会把整个小程序的代码包下载到本地。 紧接着通过 app.json 的 pages 字段就可以知道你当前小程序的所有页面路径:123&#123; &quot;pages&quot;:[ &quot;pages/index/index&quot;, &quot;pages/logs/logs&quot; ]&#125; 这个配置说明在 QuickStart 项目定义了两个页面，分别位于 pages/index/index 和 pages/logs/logs 目录。而写在 pages 字段的第一个页面就是这个小程序的首页(打开小程序看到的第一个页面)。 于是微信客户端就把首页的代码装载进来，通过小程序底层的一些机制，就可以渲染出这个首页。 小程序启动之后，在 app.js 定义的 App 实例的 onLaunch 回调会被执行:1234App(&#123; onLaunch: function () &#123; // 小程序启动之后 触发 &#125;&#125;) 整个小程序只有一个 App 实例，是全部页面共享的，更多的事件回调参考文档 注册程序 App 。 接下来我们简单看看小程序的一个页面是怎么写的。 程序与页面 你可以观察到 pages/logs/logs 下其实是包括了4种文件的，微信客户端会先根据 logs.json 配置生成一个界面，顶部的颜色和文字你都可以在这个 json 文件里边定义好。紧接着客户端就会装载这个页面的 WXML 结构和 WXSS 样式。最后客户端会装载 logs.js，你可以看到 logs.js 的大体内容就是:1234567Page(&#123; data: &#123; // 参与页面渲染的数据 logs: [] &#125;, onLoad: function () &#123; // 页面渲染后 执行 &#125;&#125;) Page 是一个页面构造器，这个构造器就生成了一个页面。在生成页面的时候，小程序框架会把 data 数据和 index.wxml 一起渲染出最终的结构，于是就得到了你看到的小程序的样子。 在渲染完界面之后，页面实例就会收到一个 onLoad 的回调，你可以在这个回调处理你的逻辑。 有关于 Page 构造器更多详细的文档参考 注册页面 Page 。 组件 小程序提供了丰富的基础组件给开发者，开发者可以像搭积木一样，组合各种组件拼合成自己的小程序。 就像 HTML 的 div, p 等标签一样，在小程序里边，你只需要在 WXML 写上对应的组件标签名字就可以把该组件显示在界面上，例如，你需要在界面上显示地图，你只需要这样写即可： map&gt;使用组件的时候，还可以通过属性传递值给组件，让组件可以以不同的状态去展现，例如，我们希望地图一开始的中心的经纬度是广州，那么你需要声明地图的 longitude(中心经度) 和 latitude(中心纬度) 两个属性: map&gt;组件的内部行为也会通过事件的形式让开发者可以感知，例如用户点击了地图上的某个标记，你可以在 js 编写 markertap 函数来处理： map&gt;当然你也可以通过 style 或者 class 来控制组件的外层样式，以便适应你的界面宽度高度等等。 需要注意的是：多数 API 的回调都是异步，你需要处理好代码逻辑的异步问题。 更多的 API 能力见 小程序的API 。其实小程序的官网教程讲的也很明白透彻，看官方教程就可以了，而且小程序有丰富的组件，使用时很方便的， 更多的组件可以参考 小程序的组件 。 基础组件为了让开发者可以很方便的调起微信提供的能力，例如获取用户信息、微信支付等等，小程序提供了很多 API 给开发者去使用。 要获取用户的地理位置时，只需要：123456wx.getLocation(&#123; type: &apos;wgs84&apos;, success: (res) =&gt; &#123; var latitude = res.latitude // 经度 var longitude = res.longitude // 纬度 &#125;&#125;) 调用微信扫一扫能力，只需要：1234wx.scanCode(&#123; success: (res) =&gt; &#123; console.log(res) &#125;&#125;) 框架为开发者提供了一系列基础组件，开发者可以通过组合这些基础组件进行快速开发。 什么是组件： 组件是视图层的基本组成单元。组件自带一些功能与微信风格的样式。一个组件通常包括开始标签和结束标签，属性用来修饰这个组件，内容在两个标签之内。123&lt;tagname property=&quot;value&quot;&gt; Content goes here ...&lt;/tagname&gt; 注意：所有组件与属性都是小写，以连字符-连接 属性类型 类型 描述 注解Boolean 布尔值 组件写上该属性，不管该属性等于什么，其值都为true，只有组件上没有写该属性时，属性值才为false。如果属性值为变量，变量的值会被转换为Boolean类型Number 数字 1, 2.5String 字符串 “string”Array 数组 [ 1, “string” ]Object 对象 { key: value }EventHandler 事件处理函数名 “handlerName” 是 Page中定义的事件处理函数名Any 任意属性共同属性类型 所有组件都有的属性： 属性名 类型 描述 注解id String 组件的唯一标示 保持整个页面唯一class String 组件的样式类 在对应的 WXSS 中定义的样式类style String 组件的内联样式 可以动态设置的内联样式hidden Boolean 组件是否显示 所有组件默认显示data- Any 自定义属性 组件上触发的事件时，会发送给事件处理函数bind / catch* EventHandler 组件的事件 详见事件特殊属性 几乎所有组件都有各自定义的属性，可以对该组件的功能或样式进行修饰，请参考各个组件的定义。 视图容器(View Container)：view 视图容器scroll-view 可滚动视图容器 swiper 滑块视图容基础内容(Basic Content)：icon 图标text 文字 progress 进度条表单(Form)：button 按钮form 表单input 输入框checkbox 多项选择器radio 单项选择器picker 列表选择器picker-view 内嵌列表选择器slider 滚动选择器switch 开关选择器 label 标签导航(Navigation)： navigator 应用链接多媒体(Media)：audio 音频image 图片 video 视频地图(Map)： map 地图画布(Canvas)：canvas 画布","categories":[],"tags":[{"name":"小程序","slug":"小程序","permalink":"http://www.zhangningle.top/tags/小程序/"},{"name":"微信","slug":"微信","permalink":"http://www.zhangningle.top/tags/微信/"}]},{"title":"火锅鸡网","slug":"小程序学习记录一 ","date":"2018-06-10T04:19:12.946Z","updated":"2018-03-18T10:47:47.006Z","comments":true,"path":"2018/06/10/小程序学习记录一 /","link":"","permalink":"http://www.zhangningle.top/2018/06/10/小程序学习记录一 /","excerpt":"","text":"火锅鸡网，终于做完了，我做的是移动端，晓哥做的pc端，做的时候感觉移动端坑也好多，中间经理吩咐的细节部分老是忘记改，还好我从哥记忆力好，哈哈，这两天改了n次，终于算是过了自己这关了，好，下边总结一下自己的这次的项目心得， 没听清楚需求一开始讲需求的时候没认真听，所以做完以后修改的时候比做的时间都多，所以下次一定要注意，用户需求才是项目的方向主导，了解了用户需求，清楚了项目的层级结构，才能高效的快速的完成工作，不要觉得前期规划很慢，其实前期吧项目规划的越清楚，后期做的时候就会越迅速， swiper 问题又是swiper 没办法 一做移动端就想到了他，谁让他是移动端最好的轮播呢（00）这个问题主要出在我没搞清楚swiper 的函数就修改人家的代码，导致一个轮播浪费了很多的时间，最后还是自己写出的… javascript中间用到一个返回的功能，想到了BOM，可是就是实现不了 ，果然百度是强大的，&lt;a class=&quot;fl clearfix&quot; href=&quot;javascript:history.back(-1)&quot;&gt;js调用浏览器的历史记录 无刷新返回 就是类似的浏览器历史记录 缺点是不能刷新 优点是 速度快 做了这么多项目后觉得自己的JavaScript有所提高了， 分享功能由于客户喜欢的分享功能比较奇葩，别人都是分享网页或网址，他想让分享APP，着急上火的我去找了百度、segmentfault、博客园、csdn，最终在我的大知乎上找到了一个，这是一个github的开源项目，感觉超级良心 ，示例：https://fa-ge.github.io/NativeShare/demo/index.html放出git地址https://github.com/fa-ge/NativeShare技术点主要是JavaScript（又是我强大的js）调用手机系统的分享功能自我觉得对于div+css越发越熟练，JavaScript也上了一个台阶！！ 加油张宁乐！点击–&gt;火锅鸡网演示：http://zhangningle.gitee.io/m.huoguoji.net/我懂代码–&gt;点击查看源码：源码","categories":[],"tags":[{"name":"HTML","slug":"HTML","permalink":"http://www.zhangningle.top/tags/HTML/"},{"name":"移动端","slug":"移动端","permalink":"http://www.zhangningle.top/tags/移动端/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhangningle.top/tags/JavaScript/"}]},{"title":"大连罗森_移动端","slug":"大连罗森_移动端","date":"2018-06-10T04:19:12.943Z","updated":"2018-03-07T13:47:26.601Z","comments":true,"path":"2018/06/10/大连罗森_移动端/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/大连罗森_移动端/","excerpt":"","text":"写大连罗森（移动端）的时候居然发现过了个年回来很多代码都生疏了，在写的过程中发现一些问题，在此记录下来以防在犯。 做的时候主要使用rem布局，rem用熟练了以后确实方便很多，做的时候也遇到过一些问题，在此记录一下。 一个页面插入多个swiper写的首页的时候，首页需要加两个轮播图，并且结构上不一样，我就引入了一个swiper。问题：在写首页的时候遇到了一个问题，就是点击一个轮播图的按钮时候，另一个也跟着动，思考：我就想，这肯定不行啊，然后晚上回去就开始研究，发现它其实就是class一样，所以调用的function一样，从而导致的2个轮播一起轮播，解决方案：给第一个轮播的按钮重新命名一个新的class，并且调用同一个function，完美解决！ img加宽高这个写完后台测试时才发现的问题，导致前期给后台大哥填了很多麻烦，还是给img标签加上高和宽比较好。这样的话，图片显示出来就会按照设定好的尺寸，不会出现意外情况。但如果没有设定，很有可能会出现图片上边有白条，或者没有按照想要的效果显示，网站更新是换图片会出现问题。我碰到的就是没有加宽高，造成了图片下沉，上面出现白条。网页中的img最好使用div包起来，或者把img的display属性设为block，可以消除img的默认边距记忆比较深刻的就是这么两个问题，最后放上演示地址（建议手机浏览）：http://zhangningle.gitee.io/m.luosen/","categories":[],"tags":[{"name":"移动端","slug":"移动端","permalink":"http://www.zhangningle.top/tags/移动端/"},{"name":"swiper","slug":"swiper","permalink":"http://www.zhangningle.top/tags/swiper/"}]},{"title":"在小程序中调用一言API","slug":"在小程序中调用一言API","date":"2018-06-10T04:19:12.940Z","updated":"2018-05-21T13:58:22.743Z","comments":true,"path":"2018/06/10/在小程序中调用一言API/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/在小程序中调用一言API/","excerpt":"","text":"在小程序中调用一言API某一次在csdn看博客，看到了一个功能，就是可以随机显示一句话，都是特别经典的句子，后来便发挥了厚面皮的精神，就去私信问是怎么做的，二话没说那兄弟发给我一个网站， 一言 这个网站是干什么的？一言网(Hitokoto.cn)创立于2016年，隶属于萌创Team，目前网站主要提供一句话服务。动漫也好、小说也好、网络也好，不论在哪里，我们总会看到有那么一两个句子能穿透你的心。我们把这些句子汇聚起来，形成一言网络，以传递更多的感动。如果可以，我们希望我们没有停止服务的那一天。简单来说，一言指的就是一句话，可以是动漫中的台词，也可以是网络上的各种小段子。或是感动，或是开心，有或是单纯的回忆。来到这里，留下你所喜欢的那一句句话，与大家分享，这就是一言存在的目的。 :本段文本源自hitokoto.us. 在一言网上提供了可调用的API 一言API接口说明按照他给的参数和返回json数据，成功的在网页中调用了出来我的一言deom代码展示:1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;一言&lt;/title&gt; &lt;style&gt; div &#123; width: 500px; margin: auto; text-align: center; &#125; #hitokoto&#123; font-size: 27px; &#125; p &#123; font-size: 20px; &#125; #btn &#123; padding: 15px 50px; border: 0; background: #00caeb; color: #fff; font-size: 22px; border-radius: 5px; cursor: pointer; &#125; .cc&#123; display: block; text-align: right; padding-right: 20px; font-size: 25px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div&gt; &lt;p id=&quot;hitokoto&quot;&gt;&lt;/p&gt; &lt;p class=&quot;cc&quot;&gt;『 &lt;span id=&quot;from&quot;&gt;&lt;/span&gt;』&lt;/p&gt; &lt;/div&gt; &lt;div&gt; &lt;button id=&quot;btn&quot; onclick=&quot;window.location.reload();&quot;&gt; 换一换 &lt;/button&gt; &lt;/div&gt; &lt;!-- 以下写法，选取一种即可 --&gt; &lt;!-- 现代写法，推荐 --&gt; &lt;!-- 兼容低版本浏览器 (包括 IE)，可移除 --&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bluebird@3/js/browser/bluebird.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/whatwg-fetch@2.0.3/fetch.min.js&quot;&gt;&lt;/script&gt; &lt;!--End--&gt; &lt;script&gt; fetch(&apos;https://v1.hitokoto.cn&apos;) .then(function (res) &#123; return res.json(); &#125;) .then(function (data) &#123; var hitokoto = document.getElementById(&apos;hitokoto&apos;); hitokoto.innerText = data.hitokoto; &#125;) .catch(function (err) &#123; console.error(err); &#125;) &lt;/script&gt; &lt;!-- 老式写法，兼容性最忧 --&gt; &lt;script&gt; var xhr = new XMLHttpRequest(); xhr.open(&apos;get&apos;, &apos;https://v1.hitokoto.cn&apos;); xhr.onreadystatechange = function () &#123; if (xhr.readyState === 4) &#123; var data = JSON.parse(xhr.responseText); var hitokoto = document.getElementById(&apos;hitokoto&apos;); var from = document.getElementById(&apos;from&apos;); hitokoto.innerText = data.hitokoto; from.innerText = data.from; &#125; &#125; xhr.send(); &lt;/script&gt; &lt;!-- 新 API 方法， 十分简洁 --&gt; &lt;script src=&quot;https://v1.hitokoto.cn/?encode=js&amp;select=%23hitokoto&quot; defer&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 正好最近也在开发小程序，就心里痒痒。想试试小程序中可不可以调用这个api，小程序中 url：这个是要请求的接口地址data：一个入参method：请求方式，如果是POST请求必须按上面写，默认是get请求，不用处理。complete：页面请求完成后的方法，通过that.setData将数据传递给WXML页面。success：页面加载成功后的执行方法。 如图：js代码：123456789101112131415161718/** * 生命周期函数--监听页面加载 */ onLoad: function () &#123; var that=this wx.request(&#123; url: &apos;https://v1.hitokoto.cn&apos;, header:&#123; &apos;content-type&apos;: &apos;application/json&apos; &#125;, success: function (res)&#123; console.log(res.data) that.setData(&#123; list: res.data &#125;) &#125; &#125;) &#125;, 看完这个代码，你会想，根据微信小程序的绑定原理，这里边的代码哪里调用了onLoad（）这个函数，不用多想，微信小程序给你省略了这些步骤。直接调用list这个数组就行。","categories":[],"tags":[{"name":"jquery","slug":"jquery","permalink":"http://www.zhangningle.top/tags/jquery/"},{"name":"后端","slug":"后端","permalink":"http://www.zhangningle.top/tags/后端/"},{"name":"json","slug":"json","permalink":"http://www.zhangningle.top/tags/json/"},{"name":"API","slug":"API","permalink":"http://www.zhangningle.top/tags/API/"},{"name":"小程序","slug":"小程序","permalink":"http://www.zhangningle.top/tags/小程序/"}]},{"title":"双向数据绑定的原理","slug":"双向数据绑定的原理","date":"2018-06-10T04:19:12.937Z","updated":"2018-06-02T08:11:26.658Z","comments":true,"path":"2018/06/10/双向数据绑定的原理/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/双向数据绑定的原理/","excerpt":"","text":"双向数据绑定的原理在学习vue和angular过程中都有一个双向数据绑定的一个东西，vue中是v-model ,angular中是ng-model,那他们是怎么实现的，先说是怎么实现的吧，自己也网上找了一下实现的方法，找到了一个比较简洁的实现方法(可能不是vue或者angular源码的实现方法)，仅自己理解的实现方法。1234&lt;div class=&quot;box&quot;&gt; &lt;input type=&quot;text&quot; id=&quot;model&quot;&gt; &lt;span id=&quot;bind&quot;&gt;&lt;/span&gt;&lt;/div&gt; js代码：12345678910&lt;script&gt; model=document.getElementById(&quot;model&quot;); bind=document.getElementById(&quot;bind&quot;); window.onload=function()&#123; model.oninput=function()&#123; bind.innerHTML=model.value; &#125; &#125;&lt;/script&gt; 定义和用法oninput 事件在用户输入时触发。该事件在 &lt;input&gt;或 &lt;textarea&gt;元素的值发生改变时触发。提示： 该事件类似于 onchange 事件。不同之处在于 oninput 事件在元素值发生变化是立即触发， onchange 在元素失去焦点时触发。另外一点不同是 onchange 事件也可以作用于 &lt;keygen&gt; 和 &lt;select&gt; 元素。 逻辑就是使用oninput事件获取每次输入input的value的值，然后使用innerHTML赋给span","categories":[],"tags":[{"name":"vue","slug":"vue","permalink":"http://www.zhangningle.top/tags/vue/"},{"name":"javascript","slug":"javascript","permalink":"http://www.zhangningle.top/tags/javascript/"},{"name":"angular","slug":"angular","permalink":"http://www.zhangningle.top/tags/angular/"}]},{"title":"博客部署github/coding/gitee(码云)","slug":"博客部署三大平台","date":"2018-06-10T04:19:12.934Z","updated":"2018-01-06T01:45:10.215Z","comments":true,"path":"2018/06/10/博客部署三大平台/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/博客部署三大平台/","excerpt":"","text":"哈哈哈一直想把博客多部署几个平台，今天周六自习课终于完成了这个小目标，设置ssh 无密码上传，下一步绑定域名","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://www.zhangningle.top/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://www.zhangningle.top/tags/github/"},{"name":"coding","slug":"coding","permalink":"http://www.zhangningle.top/tags/coding/"},{"name":"码云","slug":"码云","permalink":"http://www.zhangningle.top/tags/码云/"}]},{"title":"华强北商城","slug":"华强北商城","date":"2018-06-10T04:19:12.916Z","updated":"2018-04-02T11:57:34.272Z","comments":true,"path":"2018/06/10/华强北商城/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/华强北商城/","excerpt":"","text":"华强北商城电子商务网站github地址：https://github.com/AnsonZnl/HuaQiangBei模板文件放在织梦cms的theme下，然后导入数据库即可。主要功能有： 搜索， 添加购物车 后天管理商品 js轮播图和css3特效。","categories":[],"tags":[{"name":"php","slug":"php","permalink":"http://www.zhangningle.top/tags/php/"},{"name":"织梦cms","slug":"织梦cms","permalink":"http://www.zhangningle.top/tags/织梦cms/"},{"name":"cms","slug":"cms","permalink":"http://www.zhangningle.top/tags/cms/"},{"name":"后台","slug":"后台","permalink":"http://www.zhangningle.top/tags/后台/"},{"name":"电商","slug":"电商","permalink":"http://www.zhangningle.top/tags/电商/"}]},{"title":"HTML、CSS基础回顾","slug":"前端面试题一","date":"2018-06-10T04:19:12.916Z","updated":"2017-12-18T12:12:15.947Z","comments":true,"path":"2018/06/10/前端面试题一/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/前端面试题一/","excerpt":"","text":"标签","categories":[],"tags":[{"name":"HTML","slug":"HTML","permalink":"http://www.zhangningle.top/tags/HTML/"},{"name":"CSS","slug":"CSS","permalink":"http://www.zhangningle.top/tags/CSS/"}]},{"title":"www.zhangningle.com博客的服务器通过备案","slug":"zhangningle.com博客通过备案","date":"2018-06-10T04:19:12.916Z","updated":"2018-05-28T13:41:01.050Z","comments":true,"path":"2018/06/10/zhangningle.com博客通过备案/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/zhangningle.com博客通过备案/","excerpt":"","text":"zhangningle.com博客通过备案在昨天接到短信通知 我的阿里云服务器终于备案通过了，所以第一个WordPress博客也可以正式使用我得域名：www.zhangningle.com可以正式访问了！！后续博客可能会陆续迁移到这个上面去，正在寻找WordPress主题中….","categories":[],"tags":[{"name":"php","slug":"php","permalink":"http://www.zhangningle.top/tags/php/"},{"name":"Wordpress","slug":"Wordpress","permalink":"http://www.zhangningle.top/tags/Wordpress/"},{"name":"博客","slug":"博客","permalink":"http://www.zhangningle.top/tags/博客/"},{"name":"mqsql","slug":"mqsql","permalink":"http://www.zhangningle.top/tags/mqsql/"}]},{"title":"vue笔记一","slug":"vue001","date":"2018-06-10T04:19:12.916Z","updated":"2018-04-24T12:19:55.886Z","comments":true,"path":"2018/06/10/vue001/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/vue001/","excerpt":"","text":"一、vue的基本概念 1.同jquery，都是js框架 2.jquery更适合做页面(网页效果)，vue更适合做web应用(博客，论坛) 3.jquery同原生js一样，都需要操作繁琐的Dom元素，而vue简化了Dom操作 vue的一个缺点：不支持IE8 safari 还有一些手机 案例:使用原生js和vue操作元素的一个区别12345678910111213141516171819201.原生js &lt;h1 id=&apos;h1&apos;&gt;&lt;/h1&gt; &lt;script&gt; document.querySelector(&apos;#h1&apos;).innerHTML=&apos;你好世界&apos;; &lt;/script&gt; &lt;div id=&apos;itany&apos;&gt;&#123;&#123;message&#125;&#125;&lt;/div&gt; &lt;script src=&apos;vue.js&apos;&gt;&lt;/script&gt; &lt;script&gt; new Vue(&#123; el:&apos;#itany&apos;, data:&#123; message:&apos;你好世界&apos; &#125; &#125;) &lt;/script&gt; &lt;!-- 注：使用&#123;&#123;&#125;&#125;就相当于解析变量 --&gt; &lt;hr&gt;","categories":[],"tags":[{"name":"vue","slug":"vue","permalink":"http://www.zhangningle.top/tags/vue/"},{"name":"javascript","slug":"javascript","permalink":"http://www.zhangningle.top/tags/javascript/"}]},{"title":"phpGD验证码二","slug":"phpGD验证码二","date":"2018-06-10T04:19:12.903Z","updated":"2018-01-09T08:02:21.281Z","comments":true,"path":"2018/06/10/phpGD验证码二/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/phpGD验证码二/","excerpt":"","text":"php做的验证码二把验证码添加到登录页面中，因为学了ajax，所以我直接用ajax做的登录验证码的刷新1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071&lt;!doctype html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;登录验证&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;action.php&quot; method=&quot;post&quot;&gt; 用户名：&lt;input name=&quot;username&quot; id=&quot;username&quot;&gt;&lt;br&gt; 密&amp;nbsp;码：&lt;input name=&quot;password&quot; id=&quot;password&quot;&gt;&lt;br&gt; &lt;img id=&quot;ImgSrc&quot; src=&quot;VerificationCode.php&quot; alt=&quot;&quot;&gt; &lt;a href=&quot;javascript:void(0);&quot; onclick=&quot;getCode()&quot;&gt;看不清&lt;/a&gt; &lt;br&gt; 验证码：&lt;input name=&quot;code&quot; id=&quot;code&quot; onkeyup=&quot;checkCode()&quot;&gt; &lt;br&gt; &lt;div id=&quot;codeSpan&quot;&gt;&lt;/div&gt; &lt;br&gt; &lt;button type=&quot;button&quot; onclick=&quot;checkForm()&quot;&gt;提交&lt;/button&gt;&lt;/form&gt;&lt;script&gt; //验证用户密码 function checkForm() &#123; //判断用户名密码是否为空 判断是否符合验证 var username=document.querySelector(&quot;#username&quot;); var password=document.querySelector(&quot;#password&quot;); var form=document.querySelector(&quot;form&quot;); if(username.value!==&quot;&quot;&amp;&amp;password.value!==&quot;&quot;)&#123; form.submit(); return true; &#125;else &#123; alert(&quot;用户名为空&quot;); return false &#125; &#125; //切换验证码 function getCode() &#123; imgSrc=document.getElementById(&quot;ImgSrc&quot;); imgSrc.src=&quot;VerificationCode.php&quot;; var codeSpan=document.getElementById(&quot;codeSpan&quot;); var code=document.getElementById(&quot;code&quot;); code.value=&apos;&apos;; codeSpan.innerHTML=&apos;&apos;; &#125; //验证验证码 function checkCode() &#123; var code=document.querySelector(&quot;#code&quot;); var xmlhttp; if (window.XMLHttpRequest)&#123; xmlhttp=new XMLHttpRequest(); &#125;else&#123; xmlhttp=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;); &#125; xmlhttp.onreadystatechange=function () &#123; if (xmlhttp.readyState==4&amp;&amp;xmlhttp.status==200)&#123; var codeSpan=document.querySelector(&quot;#codeSpan&quot;); codeSpan.innerHTML = xmlhttp.responseText; &#125; &#125;; xmlhttp.open(&quot;POST&quot;,&quot;action.php&quot;,true); // xmlhttp.setRequestHeader(&quot;Content-type&quot;,&quot;appliction/x-www-form-urlencoded&quot;); xmlhttp.setRequestHeader(&quot;Content-type&quot;,&quot;application/x-www-form-urlencoded&quot;); xmlhttp.send(&quot;code=&quot;+code.value); &#125;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 最后输出的是： 输出后如图： 封装验证码把自己的写的一个验证码封装起来，下次方便重复的利用，也顺便复习一下面向对象的思维12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485header(&quot;Content-Type: text/html;charset=utf-8&quot;);class VerificarionCode&#123; public $width; public $height; public $image; function __construct($widths,$heights) &#123; //新建画布 $this-&gt;image=imagecreatetruecolor($widths,$heights); &#125; function imageColor($widths,$heights,$red,$green,$blue)&#123; //新建矩形白色 $color=imagecolorallocate($this-&gt;image,$red,$green,$blue); //填充一下 imagefilledrectangle($this-&gt;image,0,0,$widths,$heights,$color); &#125; function getRandColor($image)&#123; //随机颜色 return imagecolorallocate($image,mt_rand(0,255),mt_rand(0,255),mt_rand(0,255)); &#125; function str($widths,$heights,$lengths)&#123; //快速创建字符串 $string=&apos;asadf132&apos; array_merge 合并成一个数组 join字符串链接数组中的值 赋给string $string=join(&apos;&apos;,array_merge(range(0,9),range(&apos;a&apos;,&apos;z&apos;),range(&apos;A&apos;,&apos;Z&apos;))); //echo $string; //得到字体宽度 $textWidth=imagefontwidth(28); //得到字体高度 $textHeight=imagefontheight(28); $length=$lengths; $strZ=&apos;&apos;; for($i=0;$i&lt;$length;$i++)&#123; //随机每一位颜色 // $randColor=imagecolorallocate($image,mt_rand(0,255),mt_rand(0,255),mt_rand(0,255)); $randColor=imagecolorallocate($this-&gt;image,mt_rand(0,255),mt_rand(0,255),mt_rand(0,255)); $size=mt_rand(19,22); $angle=mt_rand(-15,15); // $x=20+40*$i; // $y=30; $x=($widths/$length)*$i+$textWidth; $y=mt_rand($heights/2,$heights-$textHeight); $fontFile=&apos;font/FZLTCXHJW.TTF&apos;; //打乱string这个字符串 然后随机取第一个字符串[0] $text=str_shuffle($string)[0]; $strZ=$strZ.$text; imagettftext($this-&gt;image,$size,$angle,$x,$y,$randColor,$fontFile,$text); &#125; &#125; function Etpixel($widths,$heights,$EtpNum)&#123; //添加点，像素做干扰元素 for($i=1;$i&lt;=$EtpNum;$i++)&#123; //绘制像素 $randColor=imagecolorallocate($this-&gt;image,mt_rand(0,255),mt_rand(0,255),mt_rand(0,255)); imagesetpixel($this-&gt;image,mt_rand(0,$widths),mt_rand(0,$heights),$randColor); &#125; &#125; function line($widths,$heights,$LineNum)&#123; //添加线段干扰 for($i=1;$i&lt;=$LineNum;$i++)&#123; //绘制线段 imageline($this-&gt;image,mt_rand(0,$widths),mt_rand(0,$heights),mt_rand(0,$widths),mt_rand(0,$heights), $randColor=imagecolorallocate($this-&gt;image,mt_rand(0,255),mt_rand(0,255),mt_rand(0,255)));// 起始位置 结束位置 &#125; &#125; function imagepng()&#123; //告诉浏览器以图像形式显示png header(&apos;content-type:image/png&apos;); //输出图像 imagepng($this-&gt;image); //销毁资源 imagedestroy($this-&gt;image); &#125;&#125;$demo1 =new VerificarionCode(180,60);//画布$demo1-&gt;imageColor(180,60,255,255,255);//图像的数字$demo1-&gt;str(180,60,4);//干扰点$demo1-&gt;Etpixel(180,60,60);//干扰线段$demo1-&gt;line(180,60,3);//png输出$demo1-&gt;imagepng();","categories":[],"tags":[{"name":"php","slug":"php","permalink":"http://www.zhangningle.top/tags/php/"}]},{"title":"phpGD验证码一","slug":"phpGD验证码一","date":"2018-06-10T04:19:12.900Z","updated":"2018-01-09T07:43:29.674Z","comments":true,"path":"2018/06/10/phpGD验证码一/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/phpGD验证码一/","excerpt":"","text":"php做的验证码php的GD函数php的GD函数可以使文字字符串转换成图片输出在网页上，话不多说直接放码，1234567891011121314151617181920&lt;?php$width=300;$height=80;$images=imagecreatetruecolor($width,$height);//创建一个画布$red=imagecolorallocate($images,255,0,0);$blue=imagecolorallocate($images,0,0,255);$white=imagecolorallocate($images,255,255,255);//创建颜色imagestring($images,5,70,30,&quot;hello world&quot;,$red);//绘制字符header(&quot;content-type:image/jpeg&quot;);//告诉浏览器怎么输出imagejpeg($images);//保存图像imagejpeg($images,&quot;images/1.jpg&quot;);//输出图像imagedestroy($images);//销毁资源?&gt; 最后输出的是： 为验证码增加识别难度（干扰元素）12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970 * 制作6位的数字+字母的验证码 * *///创建宽高$width=200;$height=40;//新建画布$image=imagecreatetruecolor($width,$height);//新建矩形白色$white=imagecolorallocate($image,255,255,255);//填充一下imagefilledrectangle($image,0,0,$width,$height,$white);//封装颜色function getRandColor($image)&#123;//随机颜色 return imagecolorallocate($image,mt_rand(0,255),mt_rand(0,255),mt_rand(0,255));&#125;//快速创建字符串 $string=&apos;asadf132&apos; array_merge 合并成一个数组 join字符串链接数组中的值 赋给string$string=join(&apos;&apos;,array_merge(range(0,9),range(&apos;a&apos;,&apos;z&apos;),range(&apos;A&apos;,&apos;Z&apos;)));//echo $string;//得到字体宽度$textWidth=imagefontwidth(28);//得到字体高度$textHeight=imagefontheight(28);$length=4;$strZ=&apos;&apos;;for($i=0;$i&lt;$length;$i++)&#123; //随机每一位颜色// $randColor=imagecolorallocate($image,mt_rand(0,255),mt_rand(0,255),mt_rand(0,255)); $randColor=getRandColor($image); $size=mt_rand(15,22); $angle=mt_rand(-15,15);// $x=20+40*$i;// $y=30; $x=($width/$length)*$i+$textWidth; $y=mt_rand($height/2,$height-$textHeight); $fontFile=&apos;font/FZLTCXHJW.TTF&apos;; //打乱string这个字符串 然后随机取第一个字符串[0] $text=str_shuffle($string)[0]; $strZ=$strZ.$text; imagettftext($image,$size,$angle,$x,$y,$randColor,$fontFile,$text);&#125;//session_start();$_SESSION[&quot;code&quot;]=$strZ;//添加干扰元素//添加点，像素做干扰元素for($i=1;$i&lt;=50;$i++)&#123; //绘制像素 imagesetpixel($image,mt_rand(0,$width),mt_rand(0,$height),getRandColor($image));&#125;//添加线段干扰for($i=1;$i&lt;=2;$i++)&#123; //绘制线段 imageline($image,mt_rand(0,$width),mt_rand(0,$height),mt_rand(0,$width),mt_rand(0,$height),getRandColor($image));// 起始位置 结束位置&#125;//绘制圆弧干扰for($i=1;$i&lt;=1;$i++)&#123; //绘制圆弧 imagearc($image,mt_rand(0,$width),mt_rand(0,$height),mt_rand(0,$width/2),mt_rand(0,$height/2),mt_rand(0,360),mt_rand(0,360),getRandColor($image));&#125;//告诉浏览器以图像形式显示header(&apos;content-type:image/png&apos;);//输出图像imagepng($image);//销毁资源imagedestroy($image); 输出后如图： 绘制像素 imagesetpixel(); 绘制线段 imageline() 绘制圆弧 imagearc() 取得字体宽度 imagefontwidth() 取得字体高度 imagefontheight()","categories":[],"tags":[{"name":"php","slug":"php","permalink":"http://www.zhangningle.top/tags/php/"}]},{"title":"我的第一次博客上传文章","slug":"noe-text","date":"2018-06-10T04:19:12.896Z","updated":"2017-12-09T13:44:51.192Z","comments":true,"path":"2018/06/10/noe-text/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/noe-text/","excerpt":"","text":"种一棵树最好的时间在三年前，其次是现在。","categories":[],"tags":[{"name":"github","slug":"github","permalink":"http://www.zhangningle.top/tags/github/"}]},{"title":"jquery-ajax调用showAPI(历史上的今天)的接口","slug":"jquery-json调用接口","date":"2018-06-10T04:19:12.886Z","updated":"2018-05-21T12:32:44.504Z","comments":true,"path":"2018/06/10/jquery-json调用接口/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/jquery-json调用接口/","excerpt":"","text":"jquery-json调用接口回顾一次面试经历，有一次面试人家问我会不会使用后端的接口（API）因为当时学的都是写的静态页面 所以自然不知了，虽然那次面试很糟糕，但是收获也是很多的。面试官后来告诉我一个网站就是这个网站：showAPI;上面有很多的免费的API接口可以试着调用 ，很感谢那位面试我的大佬。今天有时间就顺便试了一下，调用了一个API “历史上的今天”使用的jQuery解析的发送的ajax请求，然后他的服务器会返回一个json数据，使用 $.each在循环解析到页面中，虽然很小的一个小练习，但是对前后端数据交互有个更深的理解，可能对于大家来说还是挺lou的 ，但对我自己来说确实很大的进步了。不喜勿喷。 先放预览地址吧：历史上的今天 代码：12345678910111213141516171819202122232425262728293031323334353637383940414243444546function Jdeta() &#123; //alert(typeof dataNum) $.ajax(&#123; type: &apos;post&apos;, url: &apos;http://route.showapi.com/119-42&apos;, dataType: &apos;json&apos;, data: &#123; &quot;showapi_timestamp&quot;: formatterDateTime(), &quot;showapi_appid&quot;: &apos;61967&apos;, //这里需要改成自己的appid &quot;showapi_sign&quot;: &apos;efc7d95dafb14c9dabf3867072d12b28&apos;, //这里需要改成自己的应用的密钥secret &quot;date&quot;: &quot;&quot; &#125;, error: function (XmlHttpRequest, textStatus, errorThrown) &#123; alert(&quot;操作失败!&quot;); &#125;, success: function (result) &#123; console.log(result) //console变量在ie低版本下不能用 //alert(result.showapi_res_code + &quot;调用成功&quot;) var title = document.getElementById(&quot;title&quot;); title.innerHTML = result.showapi_res_body.list[0].title; var img = document.getElementById(&quot;img&quot;); img.src = result.showapi_res_body.list[0].img; var day = document.getElementById(&quot;day&quot;); day.innerHTML = result.showapi_res_body.list[0].day; var month = document.getElementById(&quot;month&quot;); month.innerHTML = result.showapi_res_body.list[0].month; var year = document.getElementById(&quot;year&quot;); year.innerHTML = result.showapi_res_body.list[0].year; var json = eval(result.showapi_res_body.list); //数组 var result = &quot;&quot;; $.each(json, function (index) &#123; //循环获取数据 var title = json[index].title; var year = json[index].year; var month = json[index].month; var day = json[index].day; var img = json[index].img result += &quot;标题：&quot;+title +&quot;&lt;br/&gt;时间：&quot;+ year + &quot;年-&quot; + month + &quot;月-&quot; + day + &quot;日&lt;br/&gt;&lt;img src=&quot;+img+&quot; alt/&gt;&quot;+&quot;&lt;br&gt;&lt;br&gt;&quot;; &#125;); $(&quot;#list&quot;).html(&apos;&apos;); $(&quot;#list&quot;).html(result); &#125; &#125;); &#125;","categories":[],"tags":[{"name":"jquery","slug":"jquery","permalink":"http://www.zhangningle.top/tags/jquery/"},{"name":"后端","slug":"后端","permalink":"http://www.zhangningle.top/tags/后端/"},{"name":"json","slug":"json","permalink":"http://www.zhangningle.top/tags/json/"}]},{"title":"gulp安装教程之简单的sass部署","slug":"gulp安装教程之简单的sass部署","date":"2018-06-10T04:19:12.872Z","updated":"2018-03-05T06:24:12.225Z","comments":true,"path":"2018/06/10/gulp安装教程之简单的sass部署/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/gulp安装教程之简单的sass部署/","excerpt":"","text":"前要系统：win7、win10终端工具：cmd（或使用系统终端：win+R -&gt; 输入cmd -&gt; 回车）gulp官网地址：http://www.gulpjs.com.cn/gulp中文文档：http://www.gulpjs.com.cn/docs/gulp插件地址：http://gulpjs.com/pluginsgulpAPI地址：http://www.gulpjs.com.cn/docs/api/ 一、安装nodewindow下，下载node安装即可。node下载地址：http://nodejs.cn/download/安装比较简单，基本一直下一步即可，安装路径随意。为了确保Node已经正确安装，我们执行几个简单的命令。node -v回车（Enter），如果正确安装的话，你会看到所安装的Node的版本号，接下来看看npm。npm -v这同样能得到npm的版本号。如果这两行命令没有得到返回，可能node就没有安装正确，尝试重启下命令行工具，如果还不行的话，只能进行重装。 推荐使用cnpm 由于国外的网速不稳定 cnpm 比较好用注：cnpm跟npm用法完全一致，只是在执行命令时将npm改为cnpm。后面的演示均使用cnpm安装cnpm执行npm install cnpm -g --registry=https://registry.npm.taobao.org2. 检测cnpm是否安装成功 输入cnpm -v返回版本号即成功 三、全局安装gulp全局安装gulp在cmd命令行中执行cnpm install gulp -g下载之后查看是否安装正确ulp -v 四、项目文件根目录新建package.json示例：进入 D:/WWW/test 项目文件夹中 执行命令cnpm init 查看项目文件根目录，是否新建package.json，且内容是否和你终端中输入的一致。 package.json内容如下:12345678910 &quot;name&quot;: &quot;test&quot;, &quot;version&quot;: &quot;1.0.0&quot;, &quot;description&quot;: &quot;我是描述&quot;, &quot;main&quot;: &quot;index.js&quot;, &quot;scripts&quot;: &#123; &quot;test&quot;: &quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot; &#125;, &quot;author&quot;: &quot;&quot;, &quot;license&quot;: &quot;ISC&quot;&#125; 五、本地安装gulp插件注：全局安装gulp是为了执行gulp任务，本地安装gulp则是为了调用gulp插件的功能进入你的项目文件路径中后，执行install gulp --save-dev ```123456789101112131415161718192021222324![](http://p0bnwspy9.bkt.clouddn.com/sass5a.jpg)## 六、新建gulpfile.jsgulpfile.js是gulp的配置文件，放于项目目录中。``` //gulpfile.js 示例文件//导入你所需要用的工具包 require(&apos;node_modules里对应模块&apos;)var gulp = require(&apos;gulp&apos;), sass = require(&apos;gulp-sass&apos;);// scss 任务gulp.task(&apos;sass&apos;,function()&#123; return gulp.src(&apos;src/css/test.scss&apos;) //获取该任务需要的文件 .pipe( sass() ) //该任务调用的模块 .pipe( gulp.dest(&apos;src/css&apos;) ); //将在 src/css 文件夹中生产test.css&#125;);// 默认任务gulp.task(&apos;default&apos;,[&apos;sass&apos;,&apos;watch1&apos;]);//监听文件gulp.task(&apos;watch1&apos;,function()&#123; return gulp.watch(&apos;src/css/test.scss&apos;,[&apos;sass&apos;]); //监听 src/css/test.scss 文件，修改时自动执行 sass 任务。&#125;); 七、运行gulp中的sass 执行gulp 调用default中的所有任务 如图：开启监听事件，当 src/css/test.scss 发生修改时，会自动执行sass任务。 sass的编译（gulp-sass）less编译 （gulp-less）重命名（gulp-rename）图片转换为base64-encoded （gulp-img64）自动添加css前缀（gulp-autoprefixer）压缩css（gulp-clean-css）js代码校验（gulp-jshint）合并js文件（gulp-concat）压缩js代码（gulp-uglify）压缩图片（gulp-imagemin）自动刷新页面（gulp-livereload，谷歌浏览器亲测，谷歌浏览器需安装livereload插件）图片缓存，只有图片替换了才压缩（gulp-cache）更改提醒（gulp-notify）阻止 gulp 插件发生错误导致进程退出并输出错误日志(gulp-plumber) 八、参考文件本文参考借鉴多篇文章 在 加上自己的实际测试后，写了这篇文章。如有不妥之处和疑问的地方，请留言赐教，谢谢。关于gulp的介绍，可参考官网：gulp官网地址：http://www.gulpjs.com.cn/gulp中文文档：http://www.gulpjs.com.cn/docs/gulp插件地址：http://gulpjs.com/pluginsgulpAPI地址：http://www.gulpjs.com.cn/docs/api/本文还参考了文章：http://www.cnblogs.com/2050/p/4198792.htmlhttp://www.ydcss.com/archives/18http://blog.csdn.net/qq_23215957/article/details/51050460等等…如侵权请联系删除。","categories":[],"tags":[{"name":"css","slug":"css","permalink":"http://www.zhangningle.top/tags/css/"},{"name":"sass","slug":"sass","permalink":"http://www.zhangningle.top/tags/sass/"},{"name":"gulp","slug":"gulp","permalink":"http://www.zhangningle.top/tags/gulp/"},{"name":"node.js","slug":"node-js","permalink":"http://www.zhangningle.top/tags/node-js/"}]},{"title":"fixe 布局","slug":"fixe布局","date":"2018-06-10T04:19:12.868Z","updated":"2018-04-04T11:12:53.223Z","comments":true,"path":"2018/06/10/fixe布局/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/fixe布局/","excerpt":"","text":"寻根溯源话布局一切都始于这样一个问题：怎样通过 CSS 简单而优雅的实现水平、垂直同时居中。记得刚开始学习 CSS 的时候，看到 float 属性不由得感觉眼前一亮，顺理成章的联想到 Word 文档排版中用到的的左对齐、右对齐和居中对齐，然而很快就失望的发现 CSS 中并不存在 float: center 的写法，那么 text-align: center、verticle-align: center 是否可行呢？答案也是否定的。这两个属性只能用于行内元素，对于块级元素的布局是无效的。在网页布局没有进入 CSS 的时代，排版几乎是通过 table 元素实现的，在 table 的单元格里可以方便的使用 align、valign 来实现水平和垂直方向的对齐，随着 Web 语义化的流行，这些写法逐渐淡出了视野，CSS 标准为我们提供了 3 种布局方式：标准文档流、浮动布局和定位布局。这几种方式的搭配使用可以轻松搞定 PC 端页面的常见需求，比如实现水平居中可以使用 margin: 0 auto，实现水平垂直同时居中可以如下设置：.dad { position: relative;}.son { position: absolute; margin: auto; top: 0; right: 0; bottom: 0; left: 0;}.dad { position: relative;}.son { width: 100px; height: 100px; position: absolute; top: 50%; left: 50%; margin-top: -50px; margin-left: -50px;}然而，这些写法都存在一些缺陷：缺少语义并且不够灵活。我们需要的是通过 1 个属性就能优雅的实现子元素居中或均匀分布，甚至可以随着窗口缩放自动适应。在这样的需求下，CSS 的第 4 种布局方式诞生了，这就是我们今天要重点介绍的 flex 布局。flex 基本概念使用 flex 布局首先要设置父容器 display: flex，然后再设置 justify-content: center 实现水平居中，最后设置 align-items: center 实现垂直居中。 #dad { display: flex; justify-content: center; align-items: center} 就是这么简单，大功告成。等等，好像哪里不对，justify-content 和 align-items 是啥？哪里可以看出横向、竖向的语义？是的，flex 的确没有那么简单，这就要从两个基本概念说起了。 说来也不难，flex 的核心的概念就是 容器 和 轴。容器包括外层的 父容器 和内层的 子容器，轴包括 主轴 和 交叉轴，可以说 flex 布局的全部特性都构建在这两个概念上。flex 布局涉及到 12 个 CSS 属性（不含 display: flex），其中父容器、子容器各 6 个。不过常用的属性只有 4 个，父容器、子容器各 2 个，我们就先从常用的说起吧。容器容器具有这样的特点：父容器可以统一设置子容器的排列方式，子容器也可以单独设置自身的排列方式，如果两者同时设置，以子容器的设置为准。 父容器设置子容器沿主轴排列：justify-contentjustify-content 属性用于定义如何沿着主轴方向排列子容器。 flex-start：起始端对齐 flex-end：末尾段对齐 center：居中对齐 space-around：子容器沿主轴均匀分布，位于首尾两端的子容器到父容器的距离是子容器间距的一半。 space-between：子容器沿主轴均匀分布，位于首尾两端的子容器与父容器相切。 设置子容器如何沿交叉轴排列：align-itemsalign-items 属性用于定义如何沿着交叉轴方向分配子容器的间距。 flex-start：起始端对齐 flex-end：末尾段对齐 center：居中对齐 baseline：基线对齐，这里的 baseline 默认是指首行文字，即 first baseline，所有子容器向基线对齐，交叉轴起点到元素基线距离最大的子容器将会与交叉轴起始端相切以确定基线。 stretch：子容器沿交叉轴方向的尺寸拉伸至与父容器一致。 子容器在主轴上如何伸缩：flex 子容器是有弹性的（flex 即弹性），它们会自动填充剩余空间，子容器的伸缩比例由 flex 属性确定。flex 的值可以是无单位数字（如：1, 2, 3），也可以是有单位数字（如：15px，30px，60px），还可以是 none 关键字。子容器会按照 flex 定义的尺寸比例自动伸缩，如果取值为 none 则不伸缩。虽然 flex 是多个属性的缩写，允许 1 – 3 个值连用，但通常用 1 个值就可以满足需求，它的全部写法可参考下图。 单独设置子容器如何沿交叉轴排列：align-self 每个子容器也可以单独定义沿交叉轴排列的方式，此属性的可选值与父容器 align-items 属性完全一致，如果两者同时设置则以子容器的 align-self 属性为准。flex-start：起始端对齐 flex-end：末尾段对齐 center：居中对齐 baseline：基线对齐 stretch：拉伸对齐 轴如图所示，轴 包括 主轴 和 交叉轴，我们知道 justify-content 属性决定子容器沿主轴的排列方式，align-items 属性决定子容器沿着交叉轴的排列方式。那么轴本身又是怎样确定的呢？在 flex 布局中，flex-direction 属性决定主轴的方向，交叉轴的方向由主轴确定。 主轴主轴的起始端由 flex-start 表示，末尾段由 flex-end 表示。不同的主轴方向对应的起始端、末尾段的位置也不相同。向右：flex-direction: row 向下：flex-direction: column 向左：flex-direction: row-reverse 向上：flex-direction: column-reverse 交叉轴主轴沿逆时针方向旋转 90° 就得到了交叉轴，交叉轴的起始端和末尾段也由 flex-start 和 flex-end 表示。上面介绍的几项属性是 flex 布局中最常用到的部分，一般来说可以满足大多数需求，如果实现复杂的布局还需要深入了解更多的属性。flex 进阶概念父容器设置换行方式：flex-wrap决定子容器是否换行排列，不但可以顺序换行而且支持逆序换行。 nowrap：不换行 wrap：换行 wrap-reverse：逆序换行逆序换行是指沿着交叉轴的反方向换行。 轴向与换行组合设置：flex-flowflow 即流向，也就是子容器沿着哪个方向流动，流动到终点是否允许换行，比如 flex-flow: row wrap，flex-flow 是一个复合属性，相当于 flex-direction 与 flex-wrap 的组合，可选的取值如下：1、row、column 等，可单独设置主轴方向2、wrap、nowrap 等，可单独设置换行方式3、row nowrap、column wrap 等，也可两者同时设置多行沿交叉轴对齐：align-content当子容器多行排列时，设置行与行之间的对齐方式。 flex-start：起始端对齐 flex-end：末尾段对齐 center：居中对齐 space-around：等边距均匀分布 space-between：等间距均匀分布 stretch：拉伸对齐 子容器设置基准大小：flex-basisflex-basis 表示在不伸缩的情况下子容器的原始尺寸。主轴为横向时代表宽度，主轴为纵向时代表高度。 设置扩展比例：flex-grow子容器弹性伸展的比例。如图，剩余空间按 1:2 的比例分配给子容器。 设置收缩比例：flex-shrink子容器弹性收缩的比例。如图，超出的部分按 1:2 的比例从给子容器中减去。 设置排列顺序：order改变子容器的排列顺序，覆盖 HTML 代码中的顺序，默认值为 0，可以为负值，数值越小排列越靠前。 以上就是 flex 布局的全部属性，一共 12 个，父容器、子容器各 6 个，可以随时通过下图进行回顾。 参考资料：MDN: CSS Flexible Box LayoutFlex 布局教程：语法篇Flex 布局学习笔记30 分钟学会 Flex 布局弹性盒模型Flex指南原文地址：https://juejin.im/post/58e3a5a0a0bb9f0069fc16bb","categories":[],"tags":[{"name":"布局","slug":"布局","permalink":"http://www.zhangningle.top/tags/布局/"},{"name":"html","slug":"html","permalink":"http://www.zhangningle.top/tags/html/"},{"name":"css","slug":"css","permalink":"http://www.zhangningle.top/tags/css/"}]},{"title":"css3动画","slug":"css3","date":"2018-06-10T04:19:12.864Z","updated":"2018-03-17T15:28:32.001Z","comments":true,"path":"2018/06/10/css3/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/css3/","excerpt":"","text":"最近一直在做H5的微场景，用到很多css3的特效，在这里把常用的总结一下吧， border-radius创建圆角边框 box-shadow 添加阴影 background-size 属性规定背景图片的尺寸。 123transform: rotateX(120deg);-webkit-transform: rotateX(120deg); /* Safari 和 Chrome */-moz-transform: rotateX(120deg); 3d转换 transition css3过渡CSS3 过渡是元素从一种样式逐渐改变为另一种的效果。要实现这一点，必须规定两项内容：规定把效果添加到哪个 CSS 属性上规定效果的时长 1234 CSS3 @keyframes 规则如需在 CSS3 中创建动画，您需要学习 @keyframes 规则。@keyframes 规则用于创建动画。在 @keyframes 中规定某项 CSS 样式，就能创建由当前样式逐渐改为新样式的动画效果。 创建css3动画，可代替一些js效果，","categories":[],"tags":[{"name":"HTML","slug":"HTML","permalink":"http://www.zhangningle.top/tags/HTML/"},{"name":"css3","slug":"css3","permalink":"http://www.zhangningle.top/tags/css3/"}]},{"title":"bootrtsp常用的类","slug":"bootrtsp4","date":"2018-06-10T04:19:12.859Z","updated":"2018-03-20T11:51:18.151Z","comments":true,"path":"2018/06/10/bootrtsp4/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/bootrtsp4/","excerpt":"","text":"Bootstrap 是基于 HTML、CSS、JavaScript 的，它简洁灵活，使得 Web 开发更加快捷使用它可以快速开发一个适应手机、平板、电脑的网站，比如我的法标珠光卫浴 http://zhangningle.gitee.io/fabiaozhuguangweiyv/手机显示：电脑显示： bootstrap常用类记录：记录一下bootrtsp常用的类，下次使用方便快速查阅！1.起步2.全局css样式 1)按钮相关class .btn 按钮基础样式 .btn-danger 红色按钮 .btn-warming 黄色按钮 .btn-success 绿色按钮 .btn-info 浅蓝色按钮 .btn-primary 深蓝色按钮 .btn-lg 大号按钮 .btn-sm 小号按钮 .btn-xs 超小号按钮 .btn-block 块级按钮 注：用button写按钮时，必须要写type属性 2)图片相关class .img-circle 圆形图片 .img-rounded 圆角图片 .img-thumbnail 缩略图片 .img-responsive 响应式图片 3)文本相关class .text-danger/warming/success/info/primary 文本的5种颜色 .bg-danger/warming/success/info/primary 5种背景颜色 .text-uppercase 转大写 .text-lowercase 转小写 .text-capitalize 转首字母大写 .text-left 文本左对齐 .text-right 文本右对齐 .text-center 文本居中对齐 .text-justify 两端调整对齐 4)辅助类 .caret 三角符号 .close 关闭按钮 .pull-left 左浮动 .pull-right 右浮动 5)表格（小重点） .table 基础表格 .table-borderd 带边框的表格 .table-striped 隔行变色的表格 .table-hover 带鼠标悬停效果的表格 .table-responsive 响应式表格，必须使用在table的父元素div上 注：.table-responsive的正确使用方法。如果想让某一行或某一列变背景，直接在tr或td上加class属性即可 6)栅格布局系统(重点) a.最外层必须是容器类.container或.container-fluid b.容器中必须放置行:.row c.行中必须放置列:.col &lt;div class=&apos;container&apos;&gt; &lt;div class=&apos;row&apos;&gt; &lt;div class=&apos;col-md-3 col-sm-6 col-xs-12&apos;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; 针对不同的屏幕有不同的列 .col-lg-* 适用于超大pc屏幕 .col-md-* 适用于中等pc屏幕 .col-sm-* 适用于pad屏幕 .col-xs-* 适用于phone屏幕 .col-md-offset-1/2/3.... pc屏幕中向右偏移多少个 .col-sm-offset-1/2/3.... pad屏幕中向右偏移多少个 .col-xs-offset-1/2/3.... phone屏幕中向右偏移多少个 不同的列在不同屏幕下哟不同的适用性 .col-lg-* 只适用于lg屏幕 .col-md-* 适用于lg/md屏幕 .col-sm-* 适用于lg/md/sm屏幕 .col-xs-* 适用于lg/md/sm/xs屏幕 可以指定某列在特定尺寸的屏幕下隐藏 .hidden-lg 在lg屏幕下隐藏 .hidden-md 在md屏幕下隐藏 .hidden-sm 在sm屏幕下隐藏 .hidden-xs 在xs屏幕下隐藏 &lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;col-xs-6&quot;&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;col-xs-6&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; 7)表单(难点) a.默认表单 &lt;form&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;label&gt;用户名&lt;/label&gt; &lt;input class=&quot;form-control&quot;&gt; &lt;span class=&quot;help-block&quot;&gt;用户名可以包含数字，字母和下划线&lt;/span&gt; &lt;/div&gt; &lt;/form&gt; b.行内表单 &lt;form class=&apos;form-inline&apos;&gt; &lt;div class=&apos;form-group&apos;&gt; &lt;label class=&apos;sr-only&apos;&gt;用户名&lt;/label&gt; &lt;input class=&apos;form-control&apos; placeholder=&quot;请输入用户名&quot;&gt; &lt;/div&gt; &lt;/form&gt; 注：.sr-only是 除了屏幕阅读器外，其他设备上隐藏该元素，这个是用于屏幕阅读器的，帮助残障人士更好的访问网站。 c.水平表单(难点) &lt;form class=&apos;form-horizontal&apos;&gt; &lt;div class=&apos;form-group&apos;&gt; &lt;div class=&apos;col-**-**&apos;&gt; &lt;label&gt;用户名&lt;/label&gt; &lt;/div&gt; &lt;div class=&apos;col-**-**&apos;&gt; &lt;input class=&apos;form-control&apos;&gt; &lt;/div&gt; &lt;div class=&apos;col-**-**&apos;&gt; &lt;span class=&quot;help-block&quot;&gt;用户名可以包含数字字母和下划线&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;/form&gt; 3.组件 1.图标字体 使用方法 注：span中不能有任何文本或子标签 2.按钮组 .btn-group .btn-group-justified 占满屏幕的按钮组 .btn-group-lg/sm/xs 不同型号的按钮 .btn-group-vertical 竖直按钮 3.下拉菜单 &lt;div class=&apos;dropdown&apos;&gt; &lt;a data-toggle=&apos;dropdown&apos;&gt;触发元素&lt;/a&gt; &lt;ul class=&apos;dropdown-menu&apos;&gt; &lt;li&gt;小鸡&lt;/li&gt; &lt;li&gt;小鸭&lt;/li&gt; &lt;li&gt;小狗&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; 4.导航 a.标签页式导航 &lt;ul class=&apos;nav nav-tabs&apos;&gt; &lt;li class=&apos;active&apos;&gt; &lt;a data-toggle=&apos;tab&apos;&gt;详情信息&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a&gt;评论&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; .nav 去除了li默认的样式 .nav-tabs 浮动，并增加了下边框 .active 显示当前页 .data-toggle 每个li可以来回切换 b.胶囊式导航 &lt;ul class=&apos;nav nav-pills&apos;&gt; &lt;li class=&apos;active&apos;&gt; &lt;a data-toggle=&apos;tab&apos;&gt;详情信息&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a data-toggle=&apos;tab&apos;&gt;评论&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; c.导航条中的导航 &lt;ul class=&apos;nav navbar-nav&apos;&gt; &lt;li class=&apos;active&apos;&gt; &lt;a data-toggle=&apos;tab&apos;&gt;详情信息&lt;/a&gt; &lt;li&gt; &lt;li&gt; &lt;a data-toggle=&apos;tab&apos;&gt;评论&lt;/a&gt; &lt;li&gt; &lt;/ul&gt; 5.警告框 &lt;div class=&apos;alert alert-dismiss alert-danger&apos;&gt; &lt;span class=&apos;close&apos; data-dismiss=&apos;alert&apos;&gt;$times;&lt;/span&gt; &lt;/div&gt; 6.进度条 //普通进度条 &lt;div class=&apos;progress&apos;&gt; &lt;div class=&apos;progress-bar&apos; style=&apos;width:30%&apos;&gt;&lt;/div&gt; &lt;/div&gt; //带条纹的进度条 &lt;div class=&apos;progress&apos;&gt; &lt;div class=&apos;progress-bar progress-bar-striped&apos; style=&apos;width:30%&apos;&gt;&lt;/div&gt; &lt;/div&gt; //带条纹会动的进度条 &lt;div class=&apos;progress&apos;&gt; &lt;div class=&apos;progress-bar progress-bar-striped active&apos; style=&apos;width:30%&apos;&gt;&lt;/div&gt; &lt;/div&gt; 7.路径导航(面包屑) &lt;ul class=&quot;breadcrumb&quot;&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;新闻&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;&quot;&gt;国内新闻&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;&quot;&gt;泊头新闻&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; 8.分页条(pagination) &lt;ul class=&quot;pagination&quot;&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;前一页&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;当前页&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;后一页&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; 注：li里面必须要有a 9.分页器(pager) &lt;ul class=&quot;pager&quot;&gt; &lt;li&gt;&lt;a href=&quot;&quot;&gt;前一页&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;&quot;&gt;后一页&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; 10.徽章(badge) &lt;a href=&quot;#&quot; class=&quot;btn btn-warning&quot;&gt; 收件箱 &lt;span class=&quot;badge&quot;&gt;4&lt;/span&gt; &lt;/a&gt; 11.标签(label) &lt;span class=&quot;label label-danger&quot;&gt;danger&lt;/span&gt; &lt;span class=&quot;label label-warning&quot;&gt;warning&lt;/span&gt; &lt;span class=&quot;label label-success&quot;&gt;success&lt;/span&gt; &lt;span class=&quot;label label-info&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;label label-primary&quot;&gt;primary&lt;/span&gt; 12.巨幕 &lt;div class=&quot;jumbotron&quot;&gt; &lt;h1&gt;hello world&lt;/h1&gt; &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Modi obcaecati possimus voluptas! Accusantium aperiam, autem dolor dolorem eaque molestiae necessitatibus nihil nobis perspiciatis praesentium quidem reiciendis sapiente soluta sunt voluptas.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;#&quot; class=&quot;btn btn-warning&quot;&gt;按钮&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; 13.页头 &lt;div class=&quot;page-header&quot;&gt; &lt;h1&gt;hello world hello world&lt;/h1&gt; &lt;/div&gt; 14.水井（well） &lt;div class=&quot;well&quot;&gt; i have a good idea &lt;/div&gt; 15.列表组： 使用ul&gt;li实现列表组 &lt;ul class=&quot;list-group&quot;&gt; &lt;li class=&quot;list-group-item&quot;&gt;首页&lt;/li&gt; &lt;li class=&quot;list-group-item&quot;&gt;详情页&lt;/li&gt; &lt;li class=&quot;list-group-item&quot;&gt;联系我们&lt;/li&gt; &lt;/ul&gt; 使用div&gt;a实现列表组(有默认的鼠标悬停效果) &lt;div class=&quot;list-group&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;list-group-item&quot;&gt;首页&lt;/a&gt; &lt;a href=&quot;#&quot; class=&quot;list-group-item&quot;&gt;详情页&lt;/a&gt; &lt;a href=&quot;#&quot; class=&quot;list-group-item&quot;&gt;联系我们&lt;/a&gt; &lt;/div&gt; 16.缩略图(缩略图一般配合栅格布局系统使用，实现批量的商品展示) &lt;div class=&quot;thumbnail&quot;&gt; &lt;img src=&quot;img/1.jpg&quot; alt=&quot;&quot;/&gt; &lt;div class=&quot;caption&quot;&gt; &lt;p&gt;国画&lt;/p&gt; &lt;button type=&quot;button&quot; class=&quot;btn btn-warning&quot;&gt;加入购物车&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; 17.媒体对象 &lt;div class=&quot;media&quot;&gt; &lt;div class=&quot;media-left&quot;&gt;&lt;/div&gt; &lt;div class=&quot;media-body&quot;&gt;&lt;/div&gt; &lt;/div&gt; 18.面板和面板组(面板组内容分为三部分:头，主体，尾部)，多个面板组合(称为面板组)可以实现手风琴的效果 &lt;div class=&quot;panel panel-success&quot;&gt; &lt;div class=&quot;panel-heading&quot;&gt;&lt;/div&gt; &lt;div class=&quot;panel-body&quot;&gt;&lt;/div&gt; &lt;div class=&quot;panel-footer&quot;&gt;&lt;/div&gt; &lt;/div&gt; 4.插件 1.折叠效果 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusamus deleniti ea expedita fugiat ipsum, natus optio recusandae vitae. Assumenda autem doloremque dolores ipsam ipsum modi molestias perferendis placeat, ut vero! 折叠效果的两个重要扩展 1.手风琴----重点 面板组+折叠效果插件 2.响应式导航条---重点&amp;&amp;难点 “响应式导航条”必须配合折叠效果插件使用。 响应式导航条在PHONE中只显示一个LOGO + 一个汉堡包按钮，其他菜单项全在折叠下拉菜单中；PAD和PC中，下拉菜单要实现绝对对位，定位到LOGO后面去。 “响应式导航条”必须配合折叠效果插件使用。 响应式导航条在PHONE中只显示一个LOGO + 一个汉堡包按钮，其他菜单项全在折叠下拉菜单中；PAD和PC中，下拉菜单要实现绝对对位，定位到LOGO后面去。 Bootstrap中导航条分类： (1)按颜色分： 白底黑字： .navbar-default 黑底白字： .navbar-inverse (2)按定位方式分： 相对定位： 默认 固定定位： .navbar-fixed-* (3)按所在位置分： 固定在顶部： .navbar-fixed-top 固定在底部： .navbar-fixed-bottom &lt;div class=&quot;navbar navbar-default&quot;&gt; &lt;div class=&quot;container&quot;&gt; &lt;!--导航条头部 = brand + toggle--&gt; &lt;div class=&quot;navbar-header&quot;&gt; &lt;/div&gt; &lt;!--导航条折叠部分 = 导航 + 链接 + 表单 + 按钮 ...--&gt; &lt;div id=&quot;my-menu&quot; class=&quot;collapse navbar-collapse&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; Bootstrap中导航条分类： (1)按颜色分： 白底黑字： .navbar-default 黑底白字： .navbar-inverse (2)按定位方式分： 相对定位： 默认 固定定位： .navbar-fixed-* (3)按所在位置分： 固定在顶部： .navbar-fixed-top 固定在底部： .navbar-fixed-bottom &lt;div class=&quot;navbar navbar-default&quot;&gt; &lt;div class=&quot;container&quot;&gt; &lt;!--导航条头部 = brand + toggle--&gt; &lt;div class=&quot;navbar-header&quot;&gt; &lt;/div&gt; &lt;!--导航条折叠部分 = 导航 + 链接 + 表单 + 按钮 ...--&gt; &lt;div id=&quot;my-menu&quot; class=&quot;collapse navbar-collapse&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; 2.补充：列偏移 vs 列排序 列偏移：控制一列出现的位置，某列偏移后，后续的列都会随之偏移——只能往右偏移 col-lg/md/sm/xs-offset-* 列排序：控制一列出现的位置，某列可以往左拉或往右推——可以往右往左调整——某列排序后，其他列没有任何影响！ col-lg/md/sm/xs-push-* col-lg/md/sm/xs-pull-* 2.Boostrap第四部分：jQuery插件 Bootstrap基于jQuery提供了十几个插件函数，可以有两种调用方法： (1)JS调用方式： $(&apos;a&apos;).dropdown( ); (2)data-*调用方式： &lt;a data-toggle=&quot;dropdown&quot;&gt;&lt;/a&gt; 提示：官方推荐使用方式2！但有两个插件提交特别：需要方式1和2同时使用才能奏效。 3.Boostrap第四部分：jQuery插件——下拉菜单 &lt;div class=&quot;dropdown&quot;&gt; &lt;a data-toggle=&quot;dropdown&quot;&gt;触发元素&lt;/a&gt; &lt;ul class=&quot;dropdown-menu&quot;&gt; &lt;/div&gt; 4. Boostrap第四部分：jQuery插件——导航 &lt;ul class=&quot;nav nav-tabs&quot;&gt; &lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;#&quot;&gt;二十元套餐&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a data-toggle=&quot;tab&quot; href=&quot;#&quot;&gt;二十元套餐&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; 5. Boostrap第四部分：jQuery插件——警告框 &lt;div class=&quot;alert&quot;&gt; &lt;span class=&quot;close&quot; data-dismiss=&quot;alert&quot;&gt;&amp;times;&lt;/span&gt; &lt;/div&gt; 6. Boostrap第四部分：jQuery插件——折叠 &lt;a data-toggle=&quot;collapse&quot; href=&quot;#box&quot;&gt;展开收起&lt;/a&gt; &lt;div id=&quot;box&quot; class=&quot;collapse&quot;&gt;&lt;/div&gt; 7. Boostrap第四部分：jQuery插件——工具提示 对HTML元素的title属性的呈现效果加以改观。 &lt;ANY title=&quot;工具提示的内容&quot; data-toggle=&quot;tooltip&quot;&gt; &lt;script&gt; $(&apos;[data-toggle=&quot;tooltip&quot;]&apos;).tooltip(); &lt;/script&gt; 注意：此插件必须同时声明data-*和js调用！还有一些可选参数，参考手册即可。 8. Boostrap第四部分：jQuery插件——弹出框 &lt;ANY title=&quot;弹出框的标题&quot; data-content=&quot;弹出框的内容&quot; data-toggle=&quot;popover&quot;&gt; &lt;script&gt; $(&apos;[data-toggle=&quot;popover&quot;]&apos;).popover(); &lt;/script&gt; 注意：此插件必须同时声明data-*和js调用！还有一些可选参数，参考手册即可。 Module：模块 Model：模型 Modal：模态对话框 9.Boostrap第四部分：jQuery插件—— 模态框 —— 重点 Modal：模态对话框——在父窗口中弹出的子窗口，只要不关闭，则父窗口无法再获得输入焦点。 &lt;a data-toggle=&quot;modal&quot; href=&quot;#mid&quot;&gt;打开模态框&lt;/a&gt; &lt;button data-toggle=&quot;modal&quot; data-target=&quot;#mid&quot;&gt;打开模态框&lt;/button&gt; 模态框必需的HTML结构： &lt;div id=&quot;mid&quot; class=&quot;modal&quot;&gt; 半透明遮罩层 &lt;div class=&quot;modal-dialog&quot;&gt; 尺寸位置 &lt;div class=&quot;modal-content&quot;&gt; 背景/边框/倒角/阴影 &lt;div class=&quot;modal-header&quot;&gt; &lt;span data-dismiss=&quot;modal&quot; class=&quot;close&quot;&gt;&amp;times;&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;modal-body&quot;&gt;&lt;/div&gt; &lt;div class=&quot;modal-footer&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; 10. jQuery插件——轮播广告 —— 重点 提示：轮播广告的结构比较复杂！只要记得根元素 div.carousel（旋转木马），剩余的全靠Bootlint的错误提示。 &lt;div class=&quot;carousel&quot; data-ride=&quot;carousel&quot;&gt; &lt;div class=&quot;carousel-inner&quot;&gt; &lt;div class=&quot;item active&quot;&gt; &lt;img&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; 练习： (1)为每个广告添加说明文字 (2)添加“上一条”、“下一条”按钮 (3)添加序号指示器","categories":[],"tags":[{"name":"bootrtsp","slug":"bootrtsp","permalink":"http://www.zhangningle.top/tags/bootrtsp/"},{"name":"HTML","slug":"HTML","permalink":"http://www.zhangningle.top/tags/HTML/"},{"name":"移动端","slug":"移动端","permalink":"http://www.zhangningle.top/tags/移动端/"}]},{"title":"ajax笔记一","slug":"ajax","date":"2018-06-10T04:19:12.853Z","updated":"2017-12-26T11:11:02.830Z","comments":true,"path":"2018/06/10/ajax/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/ajax/","excerpt":"","text":"ajax的简单使用接触php和Mysql后就一直想学ajax,今天终于开始尝试了写一个小的ajax实现页面的局部刷新了。 什么是ajax？ AJAX 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。AJAX = 异步 JavaScript 和 XML。AJAX 是一种用于创建快速动态网页的技术。通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。传统的网页（不使用 AJAX）如果需要更新内容，必需重载整个网页面。有很多使用 AJAX 的应用程序案例：新浪微博、Google 地图、开心网等等。ajax 是异步更新，使用太多比较频繁的请求会增加服务器的负担，ajax的无刷新技术，无需用户等待即可更新局部页面，增加用户体验。 实现思路因为ajax是与后台数据进行数据传输交互等等，所以需要启动服务器构建php+mysql环境。在服务器可访问到的文件夹下新建一个ajax文件。文件一：index.html用户浏览的页面文件二：action.php保存数据的的页面，（只是一个简单的ajax案例，暂时不连接数据库）首先在页面写一个按钮：index.html中的内容是：1234&lt;button onclick=&quot;getData()&quot;&gt;我漂亮吗？&lt;/button&gt;//一个简单的按钮 点击触发‘getData()’事件&lt;div id=&quot;box&quot;&gt;&lt;/div&gt;//点击在‘box中按钮出来的文字， index.html中要添加js代码：12345678910111213141516171819202122232425function getData() &#123; var xmlhttp; if (window.XMLHttpRequest) &#123;// code for IE7+, Firefox, Chrome, Opera, Safari xmlhttp=new XMLHttpRequest(); //兼容最新浏览器IE7+, Firefox, Chrome, Opera, Safari &#125; else &#123;// code for IE6, IE5 xmlhttp=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;); //兼容老版本的 &#125; xmlhttp.open(&quot;GET&quot;,&quot;action.php&quot;,true); // 传参方式 发送的文件 是否异步true（异步）或 false（同步） xmlhttp.setRequestHeader(&quot;Content-type&quot;,&quot;application/x-www-form-urlencoded&quot;); xmlhttp.send(&quot;flag=select&amp;name=zhang&quot;); // 发送 传递参数 xmlhttp.onreadystatechange=function () &#123; if(xmlhttp.readyState==4&amp;&amp;xmlhttp.status==200)&#123; console.log(xmlhttp.responseText); document.getElementById(&quot;box&quot;).innerHTML=xmlhttp.responseText; // var data1=JSON. &#125; &#125; &#125; 在action.php中写点击后要返回的数据：123if(isset($_POST[&quot;flag&quot;]))&#123; echo &quot;漂亮&quot;;&#125; 好啦！这样在后台打开就可以直接出来了，点击按钮‘我漂亮吗？’，下方就会立即出来”漂亮”，是不是特别棒呢！可以增加用户体验呢。","categories":[],"tags":[{"name":"php","slug":"php","permalink":"http://www.zhangningle.top/tags/php/"},{"name":"ajax","slug":"ajax","permalink":"http://www.zhangningle.top/tags/ajax/"},{"name":"javaScript","slug":"javaScript","permalink":"http://www.zhangningle.top/tags/javaScript/"}]},{"title":"网易云音乐","slug":"163-music","date":"2018-06-10T04:19:12.829Z","updated":"2017-12-09T13:44:31.133Z","comments":true,"path":"2018/06/10/163-music/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/163-music/","excerpt":"","text":"网易云音乐歌单","categories":[],"tags":[{"name":"音乐","slug":"音乐","permalink":"http://www.zhangningle.top/tags/音乐/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-06-10T03:55:09.804Z","updated":"2017-12-02T05:48:39.907Z","comments":true,"path":"2018/06/10/hello-world/","link":"","permalink":"http://www.zhangningle.top/2018/06/10/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"js判断浏览设备","slug":"js判断pc端和移动端","date":"2017-12-26T11:02:25.000Z","updated":"2017-12-26T11:10:40.692Z","comments":true,"path":"2017/12/26/js判断pc端和移动端/","link":"","permalink":"http://www.zhangningle.top/2017/12/26/js判断pc端和移动端/","excerpt":"","text":"js判断浏览设备在移动端火热的web界，估计现在开发网站都会开发pc端和移动端吧？可是用户访问网站时怎么确定是访问网站刚刚好就是用户使用设备所匹配网站呢？我最近就打算做一个网站pc端+移动端的。刚好遇见这个问题就此记下来：很简单！还是使用万能的js来解决这个问题,一段代码搞定！12345&lt;script&gt;if(navigator.userAgent.match(/(iPhone|iPod|Android|ios)/i))&#123; window.location.href=&apos;移动端网址&apos;;&#125;&lt;/script&gt; 当然网上流传的方法不止一种，适合自己的才是最好的。","categories":[],"tags":[{"name":"html","slug":"html","permalink":"http://www.zhangningle.top/tags/html/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhangningle.top/tags/JavaScript/"}]},{"title":"Mysql笔记一","slug":"Mysql笔记一","date":"2017-12-19T12:10:20.000Z","updated":"2017-12-18T12:11:01.029Z","comments":true,"path":"2017/12/19/Mysql笔记一/","link":"","permalink":"http://www.zhangningle.top/2017/12/19/Mysql笔记一/","excerpt":"","text":"创建一个mysql表Git bash 连接mysql 数据库winpty mysql -uroot -p1.建数据库语句create database Message;//创建 数据库 数据库名字 使用数据库use Message;//使用数据库 名字 1.创建表语句create table hha (id int auto_increment,name varchar(15),age int,sex char(2),primary key(id));// 名称 id 类型 自增 名字 可变的最多15 主键数据唯一标示 2.删除表drop table hha; 3.修改表增加列alter table hha add place varchar(20);删除列alter table hha drop place; 4.向数据表中插入数据insert into hha(name,age,sex) values(“zhang”,”10”,”male”); 5.删除数据表中的数据 delete from hha where name=”zhang”; 6.修改表中的数据update hha set name=”www” where name=”zhang”; 7.查询数据表中的数据select * from hha;","categories":[],"tags":[{"name":"php","slug":"php","permalink":"http://www.zhangningle.top/tags/php/"},{"name":"mysql","slug":"mysql","permalink":"http://www.zhangningle.top/tags/mysql/"},{"name":"命令行","slug":"命令行","permalink":"http://www.zhangningle.top/tags/命令行/"}]},{"title":"php笔记之oop笔记一","slug":"php笔记之oop笔记一","date":"2017-12-18T11:42:02.000Z","updated":"2017-12-18T11:37:51.184Z","comments":true,"path":"2017/12/18/php笔记之oop笔记一/","link":"","permalink":"http://www.zhangningle.top/2017/12/18/php笔记之oop笔记一/","excerpt":"","text":"php-oop(面向对象编程)oop的特点 php面向对象编程的特点：封装性、继承性、多态性 面向对象编程的优势：代码功能更加清晰，数据处理，用户登陆，内容呈现等各写成一个类，在页面中只需包含这些类、实例化对象，然后再用简洁的语句应用对象就行 类与对象关系：类就像一个人类的群体 我们从类中实例化一个对象 就像是制定一个人。面向对象程序的单位就是对象，但对象又是通过类的实例化出来的，所以我们首先要做的就是如何来声明类， 做出来一个类很容易。类是一个抽象的概念,具有相同属性（特征）和方法（行为）的一系列个体的集合.类的格式：class 类名 { }类可以理解为一个人的群体，如果我们要把这个人介绍给别人 那么 首先， 你会介绍这个人姓名、性别、年龄、身高、体重、电话、家庭住址等等。 然后，你要介绍这个人能做什么， 可以开车， 会说英语， 可以使用电脑等等。 从定义的角度可以分为： 1.静态的描述 如：人的姓名、性别、年龄、身高、体重、电话、家庭住址等等 我们将静态的描述称为成员属性 2.动态描述 如：这个人可以开车， 会说英语， 可以使用电脑等等 我们将动态的描述称为成员方法 12345 class 人&#123; 成员属性：姓名、性别、年龄、身高、体重、电话、家庭住址 成员方法：可以开车， 会说英语， 可以使用电脑&#125; 一个类的基本构成包括属性和方法，比如我们创建一个Animal类： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051class Animal&#123; public $name; // 全局 protected $money; //受保护的 private $count; //私有的 static $num=10; //静态属性 直接用类名调用静态属性 静态属性和静态方法属于类 普通方法也能用静态属性 static function asyNum()&#123; //静态方法静 态方法中只能用静态属性 echo &quot;&lt;br&gt;调用静态方法中的num是&quot;.self::$num; // 静态方法中只能用静态属性 self 引用静态属性$num &#125; function __construct($name1) // 在构造函数里传参数 &#123; $this-&gt;name=$name1;// 初始值 &#125; function sayName()&#123; echo &quot;&lt;br&gt;他的名字是&quot;.$this-&gt;name;// 当前函数的 &#125;// 析构函数 是当对象执行完毕后会销毁对象然后执行析构函数， 析构函数销毁的是new 后的对象 然不是类 function __destruct() &#123; // TODO: Implement __destruct() method. echo &quot;&lt;br&gt;对象执行完毕.对象已销毁。只销毁对象不销毁class&quot;; &#125;&#125;$lis=new Animal(&quot;小白&quot;);/// 传参$lis-&gt;sayName();echo &quot;&lt;br&gt;静态属性&quot;.Animal::$num;echo Animal::asyNum();class Cat extends Animal&#123;// 继承非私有的属性和方法// 方法重写function sayName()&#123; parent::sayName(); //调用父类的方法 方法重写 echo &quot;&lt;br&gt;子类的方法&quot;; echo &quot;&lt;br&gt;调用父类的静态&quot;.parent::$num;&#125;&#125;$cat=new Cat(&quot;123&quot;);$cat-&gt;sayName(); public 表示全局，类内部外部子类都可以访问；private表示私有的，只有本类内部可以使用；protected表示受保护的，只有本类或子类或父类中可以访问；12345678910111213141516171819202122232425262728293031323334&lt;? //父类 class father&#123; public function a()&#123; echo &quot;function a&quot;; &#125; private function b()&#123; echo &quot;function b&quot;; &#125; protected function c()&#123; echo &quot;function c&quot;; &#125; &#125; //子类 class child extends father&#123; function d()&#123; parent::a();//调用父类的a方法 &#125; function e()&#123; parent::c(); //调用父类的c方法 &#125; function f()&#123; parent::b(); //调用父类的b方法 &#125; &#125; $father=new father(); $father-&gt;a(); $father-&gt;b(); //显示错误 外部无法调用私有的方法 Call to protected method father::b() $father-&gt;c(); //显示错误 外部无法调用受保护的方法Call to private method father::c() $chlid=new child(); $chlid-&gt;d(); $chlid-&gt;e(); $chlid-&gt;f();//显示错误 无法调用父类private的方法 Call to private method father::b() ?&gt; 静态属性的 用法：子类调用父类的静态属性 加parent：：在自己内部的静态方法中调用自己的的静态属性 加self：：","categories":[],"tags":[{"name":"php","slug":"php","permalink":"http://www.zhangningle.top/tags/php/"}]},{"title":"Swiper笔记一","slug":"Swiper笔记一","date":"2017-12-18T01:55:20.000Z","updated":"2017-12-18T12:11:31.392Z","comments":true,"path":"2017/12/18/Swiper笔记一/","link":"","permalink":"http://www.zhangningle.top/2017/12/18/Swiper笔记一/","excerpt":"","text":"Swiper常用于移动端动画Swiper是纯javascript打造的滑动特效插件，面向手机、平板电脑等移动终端。 Swiper能实现触屏焦点图、触屏Tab切换、触屏多图切换等常用效果。Swiper开源、免费、稳定、使用简单、功能强大，是架构移动终端网站的重要选择！Swiper个人理解为是封装很好的css3动画的库，有这非常强大简单易用的API任何一个web开发者都简单上手的一个移动端动画库，我也使用它两天内做了一个小小的demo；项目地址邀请函(建议手机模式下观看)完全自己动手码的，仿的是兔展上一个一模一样的，那个卖39软妹币呢，嘻嘻。。我免费做哦，","categories":[],"tags":[{"name":"Swiper","slug":"Swiper","permalink":"http://www.zhangningle.top/tags/Swiper/"},{"name":"CSS3","slug":"CSS3","permalink":"http://www.zhangningle.top/tags/CSS3/"}]},{"title":"php笔记三","slug":"PHP笔记三","date":"2017-12-13T11:01:20.000Z","updated":"2017-12-17T08:39:26.788Z","comments":true,"path":"2017/12/13/PHP笔记三/","link":"","permalink":"http://www.zhangningle.top/2017/12/13/PHP笔记三/","excerpt":"","text":"cookie和session 的关系和用法具体来说cookie机制采用的是在客户端保持状态的方案，而session机制采用的是在服务器端保持状态的方案。 cookiecookie 常用于识别用户。cookie 是服务器留在用户计算机中的小文件。每当相同的计算机通过浏览器请求页面时，它同时会发送 cookie。通过 PHP，您能够创建并取回 cookie 的值。新建一个cookie：12setcookie(name, value, expire, path, domain);// 名字 键值 过期时间 路径 域名 PHP 的 $_COOKIE 变量用于取回 cookie 的值。在下面的例子中，我们取回了名为 “user” 的 cookie 的值，并把它显示在了页面上：1234567&lt;?php// Print a cookieecho $_COOKIE[&quot;user&quot;];// A way to view all cookiesprint_r($_COOKIE);?&gt; 在下面的例子中，我们使用 isset() 函数来确认是否已设置了 cookie：123456789101112&lt;html&gt;&lt;body&gt;&lt;?phpif (isset($_COOKIE[&quot;user&quot;])) echo &quot;Welcome &quot; . $_COOKIE[&quot;user&quot;] . &quot;!&lt;br /&gt;&quot;;else echo &quot;Welcome guest!&lt;br /&gt;&quot;;?&gt;&lt;/body&gt;&lt;/html&gt; cookie中键值只能为字符串 序列化serialize($); 成字符串 反序列化unserialize($); 成数组 如何删除 cookie？当删除 cookie 时，您应当使过期日期变更为过去的时间点。删除的例子：1234&lt;?php // set the expiration date to one hour agosetcookie(&quot;user&quot;, &quot;&quot;, time()-3600);?&gt; sessionPHP session 变量用于存储有关用户会话的信息，或更改用户会话的设置。Session 变量保存的信息是单一用户的，并且可供应用程序中的所有页面使用。PHP Session 变量当您运行一个应用程序时，您会打开它，做些更改，然后关闭它。这很像一次会话。计算机清楚你是谁。它知道你何时启动应用程序，并在何时终止。但是在因特网上，存在一个问题：服务器不知道你是谁以及你做什么，这是由于 HTTP 地址不能维持状态。通过在服务器上存储用户信息以便随后使用，PHP session 解决了这个问题（比如用户名称、购买商品等）。不过，会话信息是临时的，在用户离开网站后将被删除。如果您需要永久储存信息，可以把数据存储在数据库中。Session 的工作机制是：为每个访问者创建一个唯一的 id (UID)，并基于这个 UID 来存储变量。UID 存储在 cookie 中，亦或通过 URL 进行传导。开始使用session前，首先要开启session：在页面最开始时加上session_start();存储 Session 变量存储和取回 session 变量的正确方法是使用 PHP $_SESSION 变量：12345678910111213141516&lt;?phpsession_start();// store session data$_SESSION[&apos;views&apos;]=1;?&gt;&lt;html&gt;&lt;body&gt;&lt;?php//retrieve session dataecho &quot;Pageviews=&quot;. $_SESSION[&apos;views&apos;];?&gt;//输出 Pageviews=1&lt;/body&gt;&lt;/html&gt; session的垃圾回收机制找到服务器里的配置文件php-ini1234567//修改 session.auto 0（手动启动）1（自动启动）修改后保存重启服务器查看session的保存地址 session.savesession.gc_probability=1session.gc_divisor=1000//他有1/1000分支以的被回收session。gc_maxlifetime=1400//最大过期时间 不同浏览器访问一个网站 会产生不同的session文件 如果有则找到session文件 没有则创建一个新的session文件","categories":[],"tags":[{"name":"php","slug":"php","permalink":"http://www.zhangningle.top/tags/php/"}]},{"title":"php笔记二","slug":"PHP笔记二","date":"2017-12-08T00:34:03.000Z","updated":"2017-12-17T08:39:21.490Z","comments":true,"path":"2017/12/08/PHP笔记二/","link":"","permalink":"http://www.zhangningle.top/2017/12/08/PHP笔记二/","excerpt":"","text":"PHP 全局变量 - 超全局变量PHP 中的许多预定义变量都是“超全局的”，这意味着它们在一个脚本的全部作用域中都可用。在函数或方法中无需执行 global $variable; 就可以访问它们。 超全局变量：123456789$GLOBALS$_SERVER$_REQUEST$_POST$_GET$_FILES$_ENV$_COOKIE$_SESSION $GLOBALS[‘var’] ：$GLOBALS[‘var’] 是外部的全局变量$var本身。123456$v=500;function g()&#123; $GLOBALS[&quot;c&quot;]=$GLOBALS[&quot;v&quot;]+$GLOBALS[&quot;v&quot;]; echo $GLOBALS[&quot;c&quot;];&#125;g();//1000 $_SERVER: $_SERVER超级全局变量包含由web服务器创建的信息，它提供了服务器和客户配置及当前请求环境的有关信息。根据服务器不同，$_SERVER中的变量值和变量个数会有差别， 不过一般都可以找到CGI1.1规范中定义的变量以下结果默认在1http://localhost/aaa/index.php?p=222&amp;q=333 下执行结果：12345678910$_SERVER[&apos;QUERY_STRING&apos;] = &quot;p=222&amp;q=333&quot;;$_SERVER[&apos;REQUEST_URI&apos;] = &quot;/aaa/index.php?p=222&amp;q=333&quot;;$_SERVER[&apos;SCRIPT_NAME&apos;] = &quot;/aaa/index.php&quot;;$_SERVER[&apos;PHP_SELF&apos;] = &quot;/aaa/index.php&quot;;由实例可知：$_SERVER[&quot;QUERY_STRING&quot;] 获取查询 语句，实例中可知，获取的是?后面的值$_SERVER[&quot;REQUEST_URI&quot;] 获取 http://localhost 后面的值，包括/$_SERVER[&quot;SCRIPT_NAME&quot;] 获取当前脚本的路径，如：index.php$_SERVER[&quot;PHP_SELF&quot;] 当前正在执行脚本的文件名 //http://www.runoob.com/php/php-post.html 参考界面 $_GET:预定义的 $_GET 变量用于收集来自 method=”get” 的表单中的值。从带有 GET 方法的表单发送的信息，对任何人都是可见的（会显示在浏览器的地址栏），并且对发送信息的量也有限制。form.html 文件代码如下：123456789101112131415&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;welcome.php&quot; method=&quot;get&quot;&gt;名字: &lt;input type=&quot;text&quot; name=&quot;fname&quot;&gt;年龄: &lt;input type=&quot;text&quot; name=&quot;age&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 当用户点击 “Submit” 按钮时，发送到服务器的 URL 如下所示：1http://www.runoob.com/welcome.php?fname=Runoob&amp;amp;age=3 “welcome.php” 文件现在可以通过 $_GET 变量来收集表单数据了（请注意，表单域的名称会自动成为 $_GET 数组中的键）：12欢迎 &lt;?php echo $_GET[&quot;fname&quot;]; ?&gt;!&lt;br&gt;你的年龄是 &lt;?php echo $_GET[&quot;age&quot;]; ?&gt; 岁。 如图： 何时使用 method=”get”？ 在 HTML 表单中使用 method=”get” 时，所有的变量名和值都会显示在 URL 中。 注释：所以在发送密码或其他敏感信息时，不应该使用这个方法！ 然而，正因为变量显示在 URL 中，因此可以在收藏夹中收藏该页面。在某些情况下，这是很有用的。 注释：HTTP GET 方法不适合大型的变量值。它的值是不能超过 2000 个字符的。 $_POST ：预定义的 $_POST 变量用于收集来自 method=”post” 的表单中的值。从带有 POST 方法的表单发送的信息，对任何人都是不可见的（不会显示在浏览器的地址栏），并且对发送信息的量也没有限制。注释：然而，默认情况下，POST 方法的发送信息的量最大值为 8 MB（可通过设置 php.ini 文件中的 post_max_size 进行更改）。form.html 文件代码如下：123456789101112131415&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;welcome.php&quot; method=&quot;post&quot;&gt;名字: &lt;input type=&quot;text&quot; name=&quot;fname&quot;&gt;年龄: &lt;input type=&quot;text&quot; name=&quot;age&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 当用户点击 “提交” 按钮时，URL 类似如下所示：1http://www.runoob.com/welcome.php “welcome.php” 文件现在可以通过 $_POST 变量来收集表单数据了（请注意，表单域的名称会自动成为 $_POST 数组中的键）：12欢迎 &lt;?php echo $_POST[&quot;fname&quot;]; ?&gt;!&lt;br&gt;你的年龄是 &lt;?php echo $_POST[&quot;age&quot;]; ?&gt; 岁。 如图： 何时使用 method=”post”？ 从带有 POST 方法的表单发送的信息，对任何人都是不可见的，并且对发送信息的量也没有限制。 然而，由于变量不显示在 URL 中，所以无法把页面加入书签。 PHP $_REQUEST 变量 预定义的 $_REQUEST 变量包含了 $_GET、$_POST 和 $_COOKIE 的内容。 $_REQUEST 变量可用来收集通过 GET 和 POST 方法发送的表单数据。 你可以将 “welcome.php” 文件修改为如下代码，它可以接受 $_GET、$_POST等数据。12欢迎 &lt;?php echo $_REQUEST[&quot;fname&quot;]; ?&gt;!&lt;br&gt;你的年龄是 &lt;?php echo $_REQUEST[&quot;age&quot;]; ?&gt; 岁。","categories":[],"tags":[{"name":"php","slug":"php","permalink":"http://www.zhangningle.top/tags/php/"}]},{"title":"php笔记一","slug":"PHP笔记一","date":"2017-12-05T12:23:20.000Z","updated":"2017-12-17T08:39:31.854Z","comments":true,"path":"2017/12/05/PHP笔记一/","link":"","permalink":"http://www.zhangningle.top/2017/12/05/PHP笔记一/","excerpt":"","text":"为什么学PHP？ 学web前端也有一年多了，真是一入前端深四海，不入坑不知道坑有多深。这一年来从html、css 到javascript、后来又学了jQuery、Bootstrap、Vue.js几个js框架。经过在老师的建议下学了php，而且自己想对这方面有更多的了解。 一、php是什么？ PHP（外文名:PHP: Hypertext Preprocessor，中文名：“超文本预处理器”）是一种通用开源脚本语言。语法吸收了C语言、Java和Perl的特点，利于学习，使用广泛，主要适用于Web开发领域。PHP 独特的语法混合了C、Java、Perl以及PHP自创的语法。它可以比CGI或者Perl更快速地执行动态网页。用PHP做出的动态页面与其他的编程语言相比，PHP是将程序嵌入到HTML（标准通用标记语言下的一个应用）文档中去执行，执行效率比完全生成HTML标记的CGI要高许多；PHP还可以执行编译后代码，编译可以达到加密和优化代码运行，使代码运行更快。 载自百度知道 二、php能干什么？ PHP 能做任何事。PHP 主要是用于服务端的脚本程序，因此您可以用 PHP 来完成任何其它的 CGI 程序能够完成的工作，例如收集表单数据，生成动态网页，或者发送/接收 Cookies。但 PHP 的功能远不局限于此。PHP 脚本主要用于以下三个领域。 服务端脚本。这是 PHP 最传统，也是最主要的目标领域。开展这项工作您需要具备以下三点：PHP 解析器（CGI 或者服务器模块）、WEB 服务器和 WEB 浏览器。您需要在运行 WEB 服务器时，安装并配置 PHP，然后，可以用 WEB 浏览器来访问 PHP 程序的输出，即浏览服务端的 PHP 页面。请查阅“安装”一章以获取更多信息。命令行脚本。您可以编写一段 PHP 脚本，并且不需要任何服务器或者浏览器来运行它。通过这种方式，您仅仅只需要 PHP 解析器来执行。这种用法对于依赖 cron（Unix 或者 Linux 环境）或者 Task Scheduler（Windows 环境）的日常运行的脚本来说是理想的选择。这些脚本也可以用来处理简单的文本。请参阅“PHP 的命令行模式”以获取更多信息。编写客户端的 GUI 应用程序。对于基于窗口式的应用程序来说，PHP 或许不是一种最好的语言，但是如果您非常精通 PHP，并且希望在您的客户端应用程序中使用 PHP 的一些高级特性，您可以利用 PHP-GTK 来编写这些程序。用这种方法，您还可以编写跨平台的应用程序。PHP-GTK 是 PHP 的一个扩展，在通常发布的 PHP 包中并不包含它。如果您对 PHP-GTK 感兴趣，请访问其网站以获取更多信息。 载自百度知道.三、php笔记一解决中文乱码一 在开头写：http-equiv1PHP代码应该写在```&lt;?php?&gt; 解决中文乱码二：text/html; charset12```echo```是输出的意思：```echo &quot;您好&quot;; 定义变量使用1234如```$y=10;echo var_dump($z);# 查看数据类型 数据类型:boolean （布尔型）integer （整型）float （浮点型, 也称作 double)string （字符串）两种复合类型：array （数组）object （对象）最后是两种特殊类型：resource （资源）NULL （NULL） 不用传址:1234567echo &quot;&lt;br&gt;&quot;;function fun2($qq1)&#123; $qq1=20; echo &quot;qq2这个值是&quot;.$qq1;&#125;$qq2=20;fun2($qq2); 用传址:1234567891011echo &quot;&lt;br&gt;&quot;;$qq2=30;function fun3(&amp;$qq1)&#123; $qq1=24; echo &quot;qq2 改变为传址这个值是&quot;.$qq1;&#125;;fun3($qq2);//qq1=qq2 都是30 然后 qq1改为24 qq2也是24 因为加了&amp;qq1echo &quot;&lt;br&gt;&quot;;echo &quot;传址之后qq2的值是&quot;.$qq2;//qq1=qq2 都是30 全局变量:12345678910$m=50;function fun4()&#123; global $m;#局部改变使用全局变量 $m=20;&#125;echo &quot;&lt;br&gt;&quot;;fun4();echo &quot;&lt;br&gt;&quot;;echo &quot;$m&quot;;echo &quot;&lt;br&gt;&quot;; 局部变量:1234567$h=10;function fun5()&#123; $h=40; return $h;&#125;$h=fun5();# 把局部转为全局echo &quot;$h&quot;; 静态变量: 用static 定义 静态变量只存在于函数作用域内，也就是说，静态变量只存活在栈中。一般的函数内变量在函数结束后会释放，比如局部变量，但是静态变量却不会。就是说，下次再调用这个函数的时候，该变量的值会保留下来。12345678function fun6()&#123; static $k=0; $k++; echo &quot;$k&lt;br&gt;&quot;;&#125;fun6();fun6();fun6(); 字符串:ucfirst 首字母大写:123$str1=&quot;hello World&quot;;$str2=ucfirst($str1);echo $str2;//Hello World strtolower 全部转换小写:123echo &quot;&lt;br&gt;&quot;;$str3=strtolower($str2);echo $str3;//hello world strtoupper() 全部转换大写:123echo &quot;&lt;br&gt;&quot;;$str4=strtoupper($str3);echo $str4;//HELLO WORLD strrev 翻转字符串123echo &quot;&lt;br&gt;&quot;;$str5=strrev($str4);echo $str5;//DLROW OLLEH strlen 字符串长度：12345echo &quot;&lt;br&gt;&quot;;$len=strlen($str3);for($i=0;$i&lt;$len;$i++)&#123; echo &quot;&lt;br&gt;&quot;.$str3[$i];&#125; // 字符串重复输出str_repeat(变量名字，重复次数):123$str6=str_repeat($str1,3);echo &quot;&lt;br&gt;&quot;;echo $str6; //补充字符串:1234567// str_pad(变量,&quot;补充的长度&quot;,&quot;补充的内容&quot;,什么方式补充&quot;)// STR_PAD_BOTH 字符串两边补充// STR_PAD_LEFT 字符串左边补充// STR_PAD_RIGHT 字符串右边补充$str7=str_pad($str1,&quot;20&quot;,&quot;*&quot;,STR_PAD_BOTH);echo &quot;&lt;br&gt;&quot;;echo $str7; trim($)去除字符串的空白:1234567//trim($) 去除字符串两边的空白//Ltrim($) 去掉左边的空白//Rtrim($) 去掉右边的空白$str8=&quot; hello tald &quot;;$str9=trim($str8);echo &quot;&lt;br&gt;&quot;;echo $str9; 替换字符串中的字符:1234//str_replace(&quot;把字符串中的...&quot;,&quot;替换成...&quot;,替换那个变量$..);$str10 = str_replace(&quot;l&quot;,&quot;a&quot;,$str8);echo &quot;&lt;br&gt;&quot;;echo $str10; 回车替换换成 nl2br($…):12345678$str11=&quot;111222333&quot;;$str12=nl2br($str11);echo &quot;&lt;br&gt;&quot;;echo $str12; html原样输出 htmlspecialchars:1234$str13=&quot;&lt;h1&gt;你好，世界！&lt;h1&gt;&quot;;$str14=htmlspecialchars($str13);echo &quot;&lt;br&gt;&quot;;echo $str14; 数组:12345678910$arr1=array(&quot;kete&quot;,&quot;lucy&quot;,&quot;Tom&quot;);echo $arr1[0];for ($i=0;$i&lt;count($arr1);$i++)&#123; echo $arr1[$i].&quot;&lt;br&gt;&quot;; //lucy Tom kate&#125;;foreach 只用于数组 遍历数组foreach($arr1 as $value)&#123; echo $value.&quot;&lt;br&gt;&quot;;&#125; 关联数组:1234567$arr2=array(&quot;0&quot;=&gt;&quot;kate&quot;,&quot;4&quot;=&gt;&quot;lucy&quot;,&quot;2&quot;=&gt;&quot;Tom&quot;);foreach($arr2 as $k=&gt;$value)&#123; echo $k.&quot;对应的是&quot;.$value.&quot;&lt;br&gt;&quot;; //0对应的是kate //4对应的是lucy //2对应的是Tom&#125; 二维数组:123456789$arr=array($arr1,$arr2);echo count($arr,1);//count 长度 不是1的话就是当前的长度 如果是1的话就递归的对数组计数 COUNT_RECURSIVE//根据键名进行排序 ksort 升序 krsort 降序krsort($arr2); //j降序echo &quot;&lt;br&gt;&quot;; //print_r($arr2);//输出方式1foreach ($arr2 as $k=&gt;$v)&#123; echo $k.&quot;对应的是&quot;.$v.&quot;&lt;br&gt;&quot;;&#125;//输出方式2 根据键值进行排序 asort升序 arsort 降序:1234arsort($arr2);//降序foreach($arr2 as $k=&gt;$v)&#123; echo $k.&quot;对应&quot;.$v.&quot;&lt;br&gt;&quot;;//降序&#125; range 键数组 ascii码排序:12345// range(low,high,step)//范围函数 （ 数组最低值 ，数组最高值 ，元素之间的步进制 默认1）$arr3=range(&quot;a&quot;,&quot;e&quot;);print_r($arr3);//Array ( [0] =&gt; a [1] =&gt; b [2] =&gt; c [3] =&gt; d [4] =&gt; e ) 把数组链接成字符串：1234$arr5=implode($arr1,&quot;0&quot;);// 用什么链接echo &quot;&lt;br&gt;&quot;;echo $arr5; //把字符串打散成数组:1234567$arr6=explode(&quot; &quot;,&quot;hello&quot;);// 用什么分隔开 用什么echo &quot;&lt;br&gt;&quot;;foreach($arr6 as $k=&gt;$v)&#123; echo $v.&quot;&lt;br&gt;&quot;; //a c e g&#125; 数组里开头增加元素 (会改变原数组):1234567//array_unshift($..,&quot;添加..&quot;)//在数组开头添加一个元素 会改变原数组array_unshift($arr1,&quot;we&quot;);foreach($arr1 as $k=&gt;$v)&#123; echo &quot;&lt;br&gt;&quot;; echo $v.&quot;在数组开头添加一个元素&quot;;&#125; 数组里结尾增加元素(会改变原数组) :12345678910//网数组里增加元素 array_push($..,&quot;添加..&quot;) 添加到数组最后一个元素//在数组结尾添加一个元素 会改变原数组array_push($arr1,&quot;123&quot;);print_r($arr1);//Array ( [0] =&gt; we [1] =&gt; kete [2] =&gt; lucy [3] =&gt; Tom [4] =&gt; 123 )foreach($arr1 as $k=&gt;$v)&#123; echo &quot;&lt;br&gt;&quot;; echo $v.&quot;&lt;br&gt;&quot;;&#125;//we kete lucy Tom 123 删除数组中的元素(会改变原数组)：123456//array_pop($..) 删除最后一个元素array_pop($arr1);foreach ($arr1 as $k=&gt;$v)&#123; echo $v.&quot;&lt;br&gt;&quot;;&#125;// we kete lucy Tom array_shift() 删除数组头部的元素(会改变原数组):123456array_shift($arr1);foreach ($arr1 as $k=&gt;$v)&#123; echo &quot;&lt;br&gt;&quot;; echo $v;&#125;//kete lucy om 删除数组头部的元素 array_unique() 不允许有重复的元素出现 会自动删除重复元素 (不会改变原始数组)：12345678$arr4=array(&quot;1&quot;,&quot;2&quot;,&quot;1&quot;);$arr5=array_unique($arr4);echo &quot;&lt;br&gt;&quot;;foreach($arr5 as $k=&gt;$v)&#123; echo &quot;&lt;br&gt;&quot;.$v.&quot;删除数组中重复的元素&quot;;&#125;//1删除数组中重复的元素//2删除数组中重复的元素 自学php推荐慕课在线练习，边练边学，并且很多免费视频.","categories":[],"tags":[{"name":"php","slug":"php","permalink":"http://www.zhangningle.top/tags/php/"}]},{"title":"hexo常用技能","slug":"hexo常用技能一","date":"2017-12-05T11:00:03.000Z","updated":"2017-12-05T11:36:50.352Z","comments":true,"path":"2017/12/05/hexo常用技能一/","link":"","permalink":"http://www.zhangningle.top/2017/12/05/hexo常用技能一/","excerpt":"","text":"hexo常用技能自从使用hexo搭建了自己的博客后，常常因为hexo 的各种命令苦恼，因此更新第一篇博文，首先把自己常用的hexo的命令记录下。 一、新建一个菜单：建博客是为的什么？当然是记录自己的学习、生活了，因此先从​ 1.自己的blog目录下打开命令行 $ hexo new page \"新建的菜单名字\"12 INFO Created: ~/blog/source/github/新建的菜单名字.md 这个指令会在source目录创建一个“新建的菜单名字”的文件夹,并在文件夹中创建一个新建的index.md的文件修改index.md 1234561 $ vim source/github/index.md 2 ----4 title: github3 date: 2016-08-25 18:27:595 ----6 # 我的第一个标签页 修改主题的配置文件,增加一个标签页菜单 12345678910111213menu: home: / || home about: /about/ || user tags: /tags/ || tags #categories: /categories/ || th #archives: /archives/ || archive 日程表: /日程表/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbeat 书影音: /书影音/ || book 图库: /图库/ || image 留言板: /留言板/ || edit 作品展示: /作品展示/ || file-code-o 如果你对标签页的小图标不满意,也可以自己定义,这个图标其实是一种字体,在fontawesome.io 这个网站可以找到你满意的图标。修改方法就是将||后面的内容替换掉 然后执行hexo claen 在执行hexo s，本地查看无误后 执行hexo d 发布到博客即可 二、写文章在blog目录下执行创建文章指令12$ hexo new &quot;blog1&quot;INFO Created: ~/blog/source/_posts/blog1.md 然后修改source/_posts/blog1.md文件 12345678$ vim source/_posts/blog1.md 1 --- 2 title: blog1 3 date: 2016-08-25 18:50:03 4 tags: 5 --- 6 7 我的第一篇文章！ 清理后启动,就可以看到博客中新增加的文章了。 121 $ hexo clean2 $ hexo s --debug 三、创建分类新建一篇文章: 12$ hexo new &quot;new Types&quot; INFO Created: ~/blog/source/_posts/new-Types.md 修改文章的类型 : categories 12345678$ vim source/_posts/new-Types.md --- title: new Types date: 2016-08-25 20:23:37 categories: type1 description: 这里是内容简介 --- 我的分类是type1 清理后启动,就可以看到分类下面多了一个type1类型了 12$ hexo clean$ hexo s --debug 文章分类是自动的,不需要用户自己创建,只需要自己定义就可以了。 四、创建标签新建一篇文章: 12$ hexo new &quot;new tags&quot; INFO Created: ~/blog/source/_posts/new-tags.md 修改文章的标签 : tags 12345678$ vim source/_posts/new-tags.md --- title: new Types date: 2016-08-25 20:23:37 tags: tags1 description: 这里是内容简介 --- 我的标签是tags1 清理后启动,就可以看到标签下面多了一个type1标签了 12$ hexo clean$ hexo s --debug 文章标签是自动的,不需要用户自己创建,只需要自己定义就可以了。","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://www.zhangningle.top/tags/hexo/"}]}]}